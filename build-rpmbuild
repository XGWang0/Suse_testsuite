#!/bin/bash
# This is a script for local build using rpmbuild

this="`which "$0"`"
cd "`dirname "$this"`"
source shared.sh

# override cleanup from shared.sh!!!
function cleanup
{
	rm /usr/src/packages/SOURCES
	mv /usr/src/packages/SOURCES.$$ /usr/src/packages/SOURCES
	return 0
}

function print_usage
{
	echo "Usage: $0 <path_to_package>" && exit 1
}

assert_command rpmbuild

[ $# != 1 ] && print_usage
[ -d "$1" ] || print_usage
[ `id -u` != 0 ] && echo "You need to be root" && exit 1

dir="`cd "$1" && pwd`"

# backup original 
mv /usr/src/packages/SOURCES /usr/src/packages/SOURCES.$$

# use our package dir as source
mkdir /usr/src/packages/SOURCES
pushd "$dir" > /dev/null
package_prepare
copy_package_sources /usr/src/packages/SOURCES
package_cleanup
pushd /usr/src/packages/SOURCES > /dev/null
echo '+-- RUNNING BUILD (log also in /tmp/log) -----------------------------------------'
rpmbuild -bb *.spec 2>&1 | tee /tmp/log | sed 's/^/| /'
res=$?
echo '+-- BUILD FINISHED(log also in /tmp/log) -----------------------------------------'
popd > /dev/null
[ $res != 0 ] && echo "$1 Build errors. see /tmp/log" && cleanup && exit 1
popd > /dev/null

# restore original SOURCES 
cleanup
echo -n "$1 "
grep "RPM build errors:" /tmp/log || echo "Build Done! Builds are in /usr/src/packages/RPMS"

