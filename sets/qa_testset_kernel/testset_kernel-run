#! /bin/bash

ARCH=$HOSTTYPE
if [ "$ARCH" != "" ]; then
        echo "architecture is $ARCH"
else
        echo "cannot determine architecture";
        exit 1
fi

release=`egrep -o '[aA]lpha[1-9]|[bB]eta[1-9]|RC[1-9]' /etc/issue`
if [ -z "$release" ]; then
        release="GMC"
else
	echo "This is release is $release"
fi

zypper --no-gpg-checks -n ar http://dist.ext.suse.de/ibs/QA:/Head/SUSE_SLE-12_GA/ hamsta
zypper --no-gpg-checks -n ar http://dist.suse.de/ibs/SUSE:/SLE-12:/GA/standard/ sle12-sdk
zypper --gpg-auto-import-keys ref

QA_LIB_PACKAGES="qa_lib_ctcs2 qa_lib_keys qa_lib_perl qa_lib_config qa_tools qa_db_report"
REGRESSION_PACKAGES="qa_test_apache_testsuite qa_test_apparmor qa_test_bind qa_test_bzip2 qa_test_cabextract qa_test_coreutils qa_test_cpio qa_test_cracklib qa_test_findutils qa_test_gzip qa_test_indent qa_test_net-snmp qa_test_nfs qa_test_openssh qa_test_openssl qa_test_php5 qa_test_postfix qa_test_sharutils"
KERNEL_PACKAGES="qa_test_autotest qa_test_fs_stress qa_test_ftpload qa_test_lmbench qa_test_ltp qa_test_lvm2 qa_test_lynis qa_test_memeat qa_test_memtester qa_test_newburn qa_test_process_stress qa_test_sched_stress qa_test_libhugetlbfs"

for pkg in $QA_LIB_PACKAGES $REGRESSION_PACKAGES $KERNEL_PACKAGES ; do
        if rpm -q $pkg > /dev/null 2>&1 ; then
                echo -e "$pkg has already been installed\n"
		echo $pkg | grep qa_test
		if [ $? == 0 ] ;then
                	echo -e "$pkg" >> /tmp/test_packages
		fi
        else
		zypper -n in -l $pkg > /dev/null 2>&1
		if rpm -q $pkg > /dev/null 2>&1 ;then
			echo -e "$pkg is installed\n"
			echo $pkg | grep qa_test
                	if [ $? == 0 ] ;then
                        	echo -e "$pkg" >> /tmp/test_packages
                	fi
		else
			echo -e "$pkg is not installed. Please install needed packages manually."
		fi
		
        fi
done

echo -e "You can run acceptance/kernel/performance/regression tests now.\n"

#start all tests

echo -e "\nBEWARE: ALL TESTS are running, Please see screen -r tests\n" > /etc/motd

echo -e "All tests starts now, see screen -r tests for details\n"

echo -e "========== Starting Testing ==========\n"


ln -s /usr/lib/ctcs2/tools/test_ltp-run /usr/share/qa/tools/test_ltp-run
ln -s /usr/lib/ctcs2/tools/test_newburn-run /usr/share/qa/tools/test_newburn-run

cd /usr/share/qa/tools
screen -L -S tests -m /bin/bash -c '(
	i=1
	for test_name in `cut -c '9-' /tmp/test_packages`;do
		echo -e "========================================= Testing ${test_name} [$i] ======================================\n"
		./test_${test_name}-run
		let i=i+1
	done
	)'

screen -L -S other_test -m /bin/bash -c '(
                ./test_ltp-fstests-run
		./test_lvm2_2_02_98-run                                                      
		/usr/lib/ctcs2/tools/ltp-stress.py
        /usr/lib/ctcs2/tools/test_newburn-memtst-run		
        /usr/lib/ctcs2/tools/test_libhugetlbfs-run
        )'

rm /tmp/test_*

