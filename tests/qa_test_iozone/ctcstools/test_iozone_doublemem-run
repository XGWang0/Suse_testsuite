#!/bin/bash
# ****************************************************************************
# Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.
#
# THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
#
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************
#sut_timeout


CTCS2_DIR=/usr/lib/ctcs2
TCF_DIR=/usr/share/qa/tcf

# all size are in KiB
MEM_SIZE=$(grep 'MemTotal:' /proc/meminfo | awk '{print $2}')

MEM_SIZE_DOUBLE=$((${MEM_SIZE} * 2))
MEM_1GiB=$((1024 * 1024))
MEM_SIZE_DOUBLE_MOD=$((${MEM_SIZE_DOUBLE} % ${MEM_1GiB}))
if test ${MEM_SIZE_DOUBLE_MOD} -ne 0;then
    MEM_SIZE_DOUBLE_GiB=$((${MEM_SIZE_DOUBLE} / ${MEM_1GiB}))
    let MEM_SIZE_DOUBLE_GiB++
    MEM_SIZE_DOUBLE=$((${MEM_SIZE_DOUBLE_GiB} * ${MEM_1GiB}))
fi

if [ -z "$IOZONE_MAX_SIZE" ]; then
    IOZONE_MAX_SIZE=${MEM_SIZE_DOUBLE}
fi

if [ -z "$IOZONE_MIN_SIZE" ]; then
    IOZONE_MIN_SIZE=$((IOZONE_MAX_SIZE/4))
fi

if [ -z "$IOZONE_MIN_BLK_SIZE" ]; then
    if [ -z "$IOZONE_MAX_BLK_SIZE" ]; then
        IOZONE_MAX_BLK_SIZE=8192
        IOZONE_MIN_BLK_SIZE=4096
    else
        IOZONE_MIN_BLK_SIZE="$IOZONE_MAX_BLK_SIZE"
    fi
elif [ -z "$IOZONE_MAX_BLK_SIZE" ]; then
    IOZONE_MAX_BLK_SIZE="$IOZONE_MIN_BLK_SIZE"
fi

ABUILD_FS=$(grep '/abuild' /proc/mounts  | awk '{print $3}')
case ${ABUILD_FS} in
    "ext3"): ;;
    "xfs"):  ;;
    "btrfs"): ;;
    "")
        mkdir -p /abuild
        ABUILD_FS="root"
        ;;
    *)
        echo "NOT support filesystem ${ABUILD_FS}"
        exit 1
        ;;
esac

TCF_FILE="${TCF_DIR}/qa_iozone_doublemem_${ABUILD_FS}.tcf"
cat <<EOF > ${TCF_FILE}
fg 1 iozone-doublemem-async-${ABUILD_FS} /usr/bin/iozone -a -n ${IOZONE_MIN_SIZE} -g ${IOZONE_MAX_SIZE} -y  ${IOZONE_MIN_BLK_SIZE} -q ${IOZONE_MAX_BLK_SIZE} -i 0 -i 1 -i 2 -f /abuild/iozone -R
fg 1 iozone-doublemem-fsync-${ABUILD_FS} /usr/bin/iozone -e -a -n ${IOZONE_MIN_SIZE} -g ${IOZONE_MAX_SIZE} -y  ${IOZONE_MIN_BLK_SIZE} -q ${IOZONE_MAX_BLK_SIZE} -i 0 -i 1 -i 2 -f /abuild/iozone -R
EOF

cd $CTCS2_DIR
tools/run ${TCF_FILE}
