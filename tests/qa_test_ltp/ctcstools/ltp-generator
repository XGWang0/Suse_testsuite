#!/usr/bin/perl

#fix for pathes given to new root-dir (as third arg)
$MYROOT="/";
if ($#ARGV == 2) {
         $MYROOT="$ARGV[2]";
}

# first parameter is used as timeout parameter
$timeout = shift;
if (!$timeout) {
	$timeout = "300";
}

$libdir = shift;
if (!$libdir) {
	$libdir = "/usr/lib";
}

$ctcs = "$MYROOT/usr/lib/ctcs2";
$ltpdir = -d "$libdir/qa_test_ltp" ? "$libdir/qa_test_ltp" : "$libdir/ltp";
$ltp	= "ltp";
$tcfdir = "$MYROOT/usr/share/qa/qa_test_ltp/tcf/";
$latertmpdir = "/usr/share/qa/qa_test_ltp/tmp/ltp_temp/";
$count = 0;
@all = glob("$ctcs/config/$ltp/runtest/*");

mkdir($tcfdir);

print "Using $libdir as libdir\n";

# Testcases to be skipped
%skiplist = (
	# See bug #66013
	'openposix' => ['pthread_rwlock_unlock_3_1',
	                'pthread_rwlock_rdlock_2_1',
	                'pthread_rwlock_rdlock_2_2'],
);

while ($all[$count]) {
	$incount = 0;
	$all[$count] =~ m/^.*\/([\w\.-]+)$/;
	$file = $all[$count];
	$group = $1;

	if ($group =~ m/^openposix$/) {
		$wrapper = "ltp_openposix_wrapper.sh";
	} else {
		$wrapper = "ltp_wrapper.sh";
	}

	print "Generating single scripts for $group\n";
	open(TESTCASES, $file);              		# open and read actual ltp testgroup file
	@lines = <TESTCASES>;                
	close(TESTCASES);                    
	open(TCF, ">$tcfdir$group.tcf");		# open .tcf file for actual group
 
	while ($lines[$incount]) {
		$actual = $lines[$incount];
		if ($actual =~ m/^\#.*/) {		# line is a comment
		} elsif ($actual =~ m/^\s+$/){		# line contains only spaces
		} else {				# line is testcase, extract and write to tcf 
			$actual =~ m/^(\w+).*$/;
			$tcname = $1;
			$actual =~ s/^(\S+)\s//;
			chomp $actual;

			if (/$tcname/i ~~ @{$skiplist{$group}}) {
				print " skipping $tcname (known problem)\n";
			} else {
				print TCF "timer $timeout\nfg 1 $tcname /usr/lib/ctcs2/tools/$wrapper '$actual'\n\n";
			}
		}
		$incount++;
	}	
	close(TCF);
	$count++;
}
print "end\n";
