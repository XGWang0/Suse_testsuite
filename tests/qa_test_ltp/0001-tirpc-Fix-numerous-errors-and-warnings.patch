From 415850265e8d49c826e63eb19fb100c611f1fffe Mon Sep 17 00:00:00 2001
From: Cyril Hrubis <chrubis@suse.cz>
Date: Wed, 27 Aug 2014 16:38:06 +0200
Subject: [PATCH 1/2] tirpc: Fix numerous errors and warnings.

Signed-off-by: Cyril Hrubis <chrubis@suse.cz>
---
 .../rpc_get_myaddress.c                            |  7 +------
 .../rpc_pmap_getmaps.c                             |  3 +--
 .../rpc_pmap_rmtcall.c                             |  2 +-
 .../rpc_pmap_rmtcall_stress.c                      |  2 +-
 .../rpc/rpc_auth_auth_destroy/rpc_auth_destroy.c   |  7 +------
 .../rpc_auth_authnone_create/rpc_authnone_create.c |  7 +------
 .../rpc_auth_authunix_create/rpc_authunix_create.c |  7 +------
 .../rpc_authunix_create_default.c                  |  7 +------
 .../rpc_clnt_create.c                              |  2 +-
 .../rpc_clnt_destroy.c                             |  4 ----
 .../rpc_clntraw_create.c                           |  3 +--
 .../rpc_clntraw_create_complex.c                   |  8 +++++---
 .../rpc_clntraw_create_performance.c               |  1 -
 .../rpc_clnttcp_create.c                           |  2 +-
 .../rpc_clnttcp_create_performance.c               |  2 +-
 .../rpc_clntudp_bufcreate.c                        |  2 +-
 .../rpc_clntudp_create.c                           |  2 +-
 .../rpc_svc_destroy.c                              |  8 ++------
 .../rpc_svc_destroy_stress.c                       |  2 +-
 .../rpc_svcfd_create.c                             |  6 +-----
 .../rpc_svcfd_create_limits.c                      |  5 ++---
 .../rpc_svcraw_create.c                            |  6 +-----
 .../rpc_svctcp_create.c                            |  6 +-----
 .../rpc_svctcp_create_limits.c                     |  3 +--
 .../rpc_svcudp_create.c                            |  6 +-----
 .../rpc_clnt_pcreateerror.c                        |  4 ----
 .../rpc_clnt_spcreateerror.c                       |  4 ----
 .../rpc/rpc_err_svcerr_auth/rpc_svcerr_auth.c      |  1 -
 .../rpc/rpc_err_svcerr_noproc/rpc_svcerr_noproc.c  |  1 -
 .../rpc/rpc_err_svcerr_noprog/rpc_svcerr_noprog.c  |  5 -----
 .../rpc_err_svcerr_progvers/rpc_svcerr_progvers.c  |  1 -
 .../rpc_svcerr_systemerr.c                         |  1 -
 .../rpc_err_svcerr_weakauth/rpc_svcerr_weakauth.c  |  1 -
 .../rpc/rpc_regunreg_registerrpc/rpc_registerrpc.c |  2 +-
 .../rpc_regunreg_svc_register/rpc_svc_register.c   |  3 +--
 .../rpc_svc_unregister.c                           |  3 +--
 .../rpc_regunreg_xprt_register/rpc_xprt_register.c |  6 +-----
 .../rpc/rpc_stdcall_callrpc/rpc_callrpc_dataint.c  |  1 -
 .../rpc/rpc_stdcall_clnt_call/rpc_clnt_call.c      |  2 +-
 .../rpc_stdcall_clnt_call/rpc_clnt_call_complex.c  |  5 ++---
 .../rpc_stdcall_clnt_call/rpc_clnt_call_dataint.c  |  2 +-
 .../rpc_stdcall_clnt_call/rpc_clnt_call_stress.c   |  2 +-
 .../rpc_stdcall_clnt_control/rpc_clnt_control.c    |  2 +-
 .../rpc_clnt_control_dataint.c                     | 18 ++++++++---------
 .../rpc_stdcall_clnt_freeres/rpc_clnt_freeres.c    |  2 +-
 .../rpc/rpc_stdcall_clnt_geterr/rpc_clnt_geterr.c  |  2 +-
 .../rpc_svc_freeargs_svc.c                         |  2 +-
 .../rpc/rpc_stdcall_svc_getargs/rpc_svc_getargs.c  |  2 +-
 .../rpc_svc_getargs_dataint.c                      |  6 ------
 .../rpc_stdcall_svc_sendreply/rpc_svc_sendreply.c  |  2 +-
 .../tirpc_rpcb_getaddr_limits.c                    |  4 ----
 .../tirpc_rpcb_getmaps.c                           |  3 +--
 .../tirpc_authdes_create.c                         |  5 -----
 .../tirpc_authnone_create.c                        |  7 +------
 .../tirpc_authsys_create.c                         |  8 ++------
 .../tirpc_authsys_create_default.c                 |  7 +------
 .../tirpc_bottomlevel_clnt_call_complex.c          | 23 +++++++++++-----------
 .../tirpc_bottomlevel_clnt_call_mt.c               | 19 +++++++++---------
 .../tirpc_bottomlevel_clnt_call_scalability.c      |  6 +++---
 .../tirpc_bottomlevel_clnt_call_stress.c           |  2 --
 .../tirpc_clnt_dg_create_limits.c                  |  1 -
 .../tirpc_clnt_vc_create_limits.c                  |  1 -
 .../tirpc_svc_dg_create.c                          |  2 +-
 .../tirpc_svc_dg_create_limits.c                   |  3 +--
 .../tirpc_svc_vc_create.c                          |  2 +-
 .../tirpc_svc_vc_create_limits.c                   |  3 +--
 .../tirpc_clnt_pcreateerror.c                      |  4 ----
 .../tirpc_clnt_perrno_complex.c                    |  4 ----
 .../tirpc_err_svcerr_noproc/tirpc_svcerr_noproc.c  |  2 --
 .../tirpc_err_svcerr_noprog/tirpc_svcerr_noprog.c  |  2 --
 .../tirpc_svcerr_progvers.c                        |  2 --
 .../tirpc_svcerr_systemerr.c                       |  2 --
 .../tirpc_svcerr_weakauth.c                        |  2 --
 .../tirpc_expertlevel_clnt_call.c                  |  2 --
 .../tirpc_expertlevel_clnt_call_complex.c          | 23 +++++++++++-----------
 .../tirpc_expertlevel_clnt_call_mt.c               | 19 +++++++++---------
 .../tirpc_expertlevel_clnt_call_performance.c      |  2 --
 .../tirpc_expertlevel_clnt_call_scalability.c      |  6 +++---
 .../tirpc_expertlevel_clnt_call_stress.c           |  2 --
 .../tirpc_clnt_tli_create.c                        |  3 ---
 .../tirpc_clnt_tli_create_limits.c                 |  3 ---
 .../tirpc_rpcb_rmtcall.c                           |  3 ---
 .../tirpc_rpcb_rmtcall_complex.c                   | 22 ++++++++++-----------
 .../tirpc_rpcb_rmtcall_mt.c                        | 18 ++++++++---------
 .../tirpc_rpcb_rmtcall_performance.c               |  1 -
 .../tirpc_rpcb_rmtcall_scalability.c               |  7 +++----
 .../tirpc_rpcb_rmtcall_stress.c                    |  2 --
 .../tirpc_expertlevel_svc_reg/tirpc_svc_reg.c      |  2 --
 .../tirpc_expertlevel_svc_reg/tirpc_svc_reg_mt.c   | 14 ++++++-------
 .../tirpc_svc_reg_stress.c                         |  2 --
 .../tirpc_svc_tli_create.c                         |  4 +---
 .../tirpc_svc_tli_create_limits.c                  |  4 +---
 .../tirpc_expertlevel_svc_unreg/tirpc_svc_unreg.c  |  2 --
 .../tirpc_svc_unreg_mt.c                           | 14 ++++++-------
 .../tirpc_svc_unreg_stress.c                       |  3 ---
 .../tirpc_interlevel_clnt_call.c                   |  4 ----
 .../tirpc_interlevel_clnt_call_complex.c           | 19 +++++++++---------
 .../tirpc_interlevel_clnt_call_dataint.c           |  1 -
 .../tirpc_interlevel_clnt_call_mt.c                | 15 +++++++-------
 .../tirpc_interlevel_clnt_call_scalability.c       | 13 ++++++------
 .../tirpc_clnt_control.c                           |  5 ++---
 .../tirpc_clnt_control_limits.c                    |  5 -----
 .../tirpc_clnt_tp_create.c                         |  5 ++---
 .../tirpc_clnt_tp_create_timed.c                   |  5 ++---
 .../tirpc_svc_tp_create.c                          |  3 ---
 .../tirpc_rpc_broadcast_mt.c                       | 12 ++++++-----
 .../tirpc_rpc_broadcast_scalability.c              |  6 +++---
 .../tirpc_rpc_broadcast_stress.c                   |  1 +
 .../tirpc_rpc_broadcast_exp_mt.c                   | 12 +++++------
 .../tirpc_rpc_broadcast_exp_scalability.c          |  6 +++---
 .../tirpc_rpc_broadcast_exp_stress.c               |  1 +
 .../tirpc_simple_rpc_call/tirpc_rpc_call_complex.c | 15 +++++++-------
 .../tirpc_simple_rpc_call/tirpc_rpc_call_mt.c      | 13 ++++++------
 .../tirpc_rpc_call_scalability.c                   |  6 +++---
 .../tirpc/tirpc_simple_rpc_reg/tirpc_rpc_reg_mt.c  | 11 ++++++-----
 .../tirpc_toplevel_clnt_call_complex.c             | 17 ++++++++--------
 .../tirpc_toplevel_clnt_call_dataint.c             |  1 -
 .../tirpc_toplevel_clnt_call_mt.c                  | 13 ++++++------
 .../tirpc_toplevel_clnt_call_scalability.c         |  8 ++++----
 .../tirpc_toplevel_clnt_create/tirpc_clnt_create.c |  3 +--
 .../tirpc_clnt_create_timed.c                      |  3 +--
 .../tirpc_clnt_destroy.c                           |  8 --------
 .../tirpc_toplevel_svc_destroy/tirpc_svc_destroy.c |  1 -
 .../rpc/rpc-tirpc/tests_pack/rpc_svc_1/rpc_svc_1.c | 10 +---------
 .../rpc/rpc-tirpc/tests_pack/rpc_svc_2/rpc_svc_2.c |  5 ++---
 .../tests_pack/tirpc_svc_11/tirpc_svc_11.c         |  3 ---
 .../rpc-tirpc/tests_pack/tirpc_svc_3/tirpc_svc_3.c |  6 ------
 .../rpc-tirpc/tests_pack/tirpc_svc_6/tirpc_svc_6.c |  9 +++++----
 .../rpc-tirpc/tests_pack/tirpc_svc_7/tirpc_svc_7.c |  5 -----
 .../rpc-tirpc/tests_pack/tirpc_svc_8/tirpc_svc_8.c | 14 +++++++------
 .../rpc-tirpc/tests_pack/tirpc_svc_9/tirpc_svc_9.c | 12 ++++++-----
 131 files changed, 266 insertions(+), 472 deletions(-)

diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_get_myaddress/rpc_get_myaddress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_get_myaddress/rpc_get_myaddress.c
index da08edf..daa023d 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_get_myaddress/rpc_get_myaddress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_get_myaddress/rpc_get_myaddress.c
@@ -36,18 +36,13 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	struct sockaddr_in sin;
 
 	//Initialization
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_getmaps/rpc_pmap_getmaps.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_getmaps/rpc_pmap_getmaps.c
index c42f97b..005d882 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_getmaps/rpc_pmap_getmaps.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_getmaps/rpc_pmap_getmaps.c
@@ -47,7 +47,6 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	struct pmaplist *ml = NULL;
 	struct hostent *hp = NULL;
 	struct sockaddr_in sin;
@@ -63,7 +62,7 @@ int main(int argn, char *argc[])
 	ml = pmap_getmaps(&sin);
 
 	if (run_mode) {
-		printf("List. %d\n", ml);
+		printf("List. %p\n", ml);
 		printf("Addr. %u\n", sin.sin_addr.s_addr);
 	}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/rpc_pmap_rmtcall.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/rpc_pmap_rmtcall.c
index 0fe8668..e98a76b 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/rpc_pmap_rmtcall.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/rpc_pmap_rmtcall.c
@@ -72,7 +72,7 @@ int main(int argn, char *argc[])
 	tv.tv_usec = 0;
 
 	if (run_mode) {
-		printf("port : %d\n", port);
+		printf("port : %lu\n", (unsigned long)port);
 	}
 
 	cs = pmap_rmtcall(&sin, progNum, VERSNUM, PROCNUM,
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/rpc_pmap_rmtcall_stress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/rpc_pmap_rmtcall_stress.c
index 17a0e25..4d19b7f 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/rpc_pmap_rmtcall_stress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/rpc_pmap_rmtcall_stress.c
@@ -76,7 +76,7 @@ int main(int argn, char *argc[])
 	tv.tv_usec = 100;
 
 	if (run_mode) {
-		printf("port : %d\n", port);
+		printf("port : %lu\n", (unsigned long)port);
 	}
 
 	for (i = 0; i < nbCall; i++) {
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_auth_destroy/rpc_auth_destroy.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_auth_destroy/rpc_auth_destroy.c
index 29f18fb..7f157e1 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_auth_destroy/rpc_auth_destroy.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_auth_destroy/rpc_auth_destroy.c
@@ -39,18 +39,13 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	AUTH *authNone = NULL;
 
 	authNone = authnone_create();
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authnone_create/rpc_authnone_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authnone_create/rpc_authnone_create.c
index 868157c..d9a3111 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authnone_create/rpc_authnone_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authnone_create/rpc_authnone_create.c
@@ -39,18 +39,13 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	AUTH *authNone = NULL;
 
 	authNone = authnone_create();
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create/rpc_authunix_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create/rpc_authunix_create.c
index e38ee21..cabffc7 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create/rpc_authunix_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create/rpc_authunix_create.c
@@ -47,18 +47,13 @@
 #define NGROUPS_MAX 16
 #endif
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	AUTH *authUnx = NULL;
 	char hostname[256];
 	int rslt;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create_default/rpc_authunix_create_default.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create_default/rpc_authunix_create_default.c
index 99ac9ea..4f10466 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create_default/rpc_authunix_create_default.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create_default/rpc_authunix_create_default.c
@@ -42,18 +42,13 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	//This is only a test case, normally use, clnt->cl_auth instead of an AUTH structure
 	AUTH *authUnx = NULL;
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_create/rpc_clnt_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_create/rpc_clnt_create.c
index 1f5e3da..98793c6 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_create/rpc_clnt_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_create/rpc_clnt_create.c
@@ -53,7 +53,7 @@ int main(int argn, char *argc[])
 	clnt = clnt_create(argc[1], progNum, VERSNUM, proto);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 	}
 	//If we are here, macro call was successful
 	test_status = ((CLIENT *) clnt != NULL) ? 0 : 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_destroy/rpc_clnt_destroy.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_destroy/rpc_clnt_destroy.c
index daba803..f10f15d 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_destroy/rpc_clnt_destroy.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_destroy/rpc_clnt_destroy.c
@@ -40,10 +40,6 @@ int main(int argn, char *argc[])
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
 	char *proto = "tcp";
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create.c
index dea1634..5057406 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create.c
@@ -46,14 +46,13 @@ int main(int argn, char *argc[])
 	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
-	char proto[8] = "tcp";
 	CLIENT *clnt = NULL;
 
 	//First of all, create a client
 	clnt = clntraw_create(progNum, VERSNUM);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 	}
 	//If we are here, macro call was successful
 	test_status = (clnt != NULL) ? 0 : 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create_complex.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create_complex.c
index 02f286d..076c30b 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create_complex.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create_complex.c
@@ -82,8 +82,8 @@ int main(int argc, char **argv)
 	}
 
 	if (run_mode == 1) {
-		printf("CLNT %d\n", clnt);
-		printf("SVC %d\n", svc);
+		printf("CLNT %p\n", clnt);
+		printf("SVC %p\n", svc);
 	}
 	//Call RPC using testing mode (raw)
 	for (i = 0; i < MAXITER; i++) {
@@ -112,11 +112,13 @@ int main(int argc, char **argv)
 		}
 		sum += resTbl[i];
 		if (run_mode == 1)
-			fprintf(stderr, "%d\n", resTbl[i]);
+			fprintf(stderr, "%lld\n", resTbl[i]);
 	}
 	sum = (int)(sum / MAXITER);
 
 	printf("%d\n", test_status);
+
+	return test_status;
 }
 
 static void serverDisp(struct svc_req *rqstp, SVCXPRT * transp)
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create_performance.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create_performance.c
index 6005831..7dde0ef 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create_performance.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/rpc_clntraw_create_performance.c
@@ -95,7 +95,6 @@ int main(int argn, char *argc[])
 	long long diff;
 	double rslt;
 	int progNum = atoi(argc[2]);
-	char proto[8] = "tcp";
 	CLIENT *clnt = NULL;
 
 	//Test initialisation
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/rpc_clnttcp_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/rpc_clnttcp_create.c
index 5e716f5..290f357 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/rpc_clnttcp_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/rpc_clnttcp_create.c
@@ -70,7 +70,7 @@ int main(int argn, char *argc[])
 	clnt = clnttcp_create(&server_addr, progNum, VERSNUM, &sock, 0, 0);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 	}
 	//If we are here, macro call was successful
 	test_status = (clnt != NULL) ? 0 : 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/rpc_clnttcp_create_performance.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/rpc_clnttcp_create_performance.c
index 327ce2b..f42d7e3 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/rpc_clnttcp_create_performance.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/rpc_clnttcp_create_performance.c
@@ -126,7 +126,7 @@ int main(int argn, char *argc[])
 		    clnttcp_create(&server_addr, progNum, VERSNUM, &sock, 0, 0);
 
 		if (run_mode == 1) {
-			printf("CLIENT : %d\n", clnt);
+			printf("CLIENT : %p\n", clnt);
 		}
 		//Toc
 		gettimeofday(&tv2, &tz);
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_bufcreate/rpc_clntudp_bufcreate.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_bufcreate/rpc_clntudp_bufcreate.c
index 534e2d9..3e15306 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_bufcreate/rpc_clntudp_bufcreate.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_bufcreate/rpc_clntudp_bufcreate.c
@@ -76,7 +76,7 @@ int main(int argn, char *argc[])
 			      &sock, 1024, 1024);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 	}
 	//If we are here, macro call was successful
 	test_status = ((CLIENT *) clnt != NULL) ? 0 : 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/rpc_clntudp_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/rpc_clntudp_create.c
index 6861f72..06f4740 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/rpc_clntudp_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/rpc_clntudp_create.c
@@ -76,7 +76,7 @@ int main(int argn, char *argc[])
 			   &sock);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 	}
 	//If we are here, macro call was successful
 	test_status = (clnt != NULL) ? 0 : 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/rpc_svc_destroy.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/rpc_svc_destroy.c
index c459bea..60b96ce 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/rpc_svc_destroy.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/rpc_svc_destroy.c
@@ -34,18 +34,14 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int fd;
+	int fd = 0;
 	SVCXPRT *svcr = NULL;
 
 	//First of all, create a server
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/rpc_svc_destroy_stress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/rpc_svc_destroy_stress.c
index 3f10516..ecd1453 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/rpc_svc_destroy_stress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/rpc_svc_destroy_stress.c
@@ -46,7 +46,7 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int fd;
+	int fd = 0;
 	SVCXPRT *svcr = NULL;
 	int nbCall = atoi(argc[3]);
 	int nbOk = 0;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/rpc_svcfd_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/rpc_svcfd_create.c
index cf6fcac..95c5e47 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/rpc_svcfd_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/rpc_svcfd_create.c
@@ -34,16 +34,12 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int fd = 0;
 	SVCXPRT *svcr = NULL;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/rpc_svcfd_create_limits.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/rpc_svcfd_create_limits.c
index 7c9b8b0..339bbcb 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/rpc_svcfd_create_limits.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/rpc_svcfd_create_limits.c
@@ -43,7 +43,7 @@ typedef struct {
 	int bufrec;
 } params;
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
@@ -54,10 +54,9 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	int run_mode = 0;
 	int test_status = 0;	//Default test result set to PASS
-	int progNum = atoi(argc[2]);
 	int i;
 	params paramList[NBCASE];
-	int fd;
+	int fd = 0;
 	SVCXPRT *svcr = NULL;
 
 	//Test initialization
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcraw_create/rpc_svcraw_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcraw_create/rpc_svcraw_create.c
index 2a8cf22..e195c0e 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcraw_create/rpc_svcraw_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcraw_create/rpc_svcraw_create.c
@@ -37,16 +37,12 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	SVCXPRT *svcr = NULL;
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/rpc_svctcp_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/rpc_svctcp_create.c
index 3142212..38eeabb 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/rpc_svctcp_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/rpc_svctcp_create.c
@@ -37,16 +37,12 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int sock = 600;
 	SVCXPRT *svcr = NULL;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/rpc_svctcp_create_limits.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/rpc_svctcp_create_limits.c
index 4b601da..f9968b2 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/rpc_svctcp_create_limits.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/rpc_svctcp_create_limits.c
@@ -43,7 +43,7 @@ typedef struct {
 	int bufrec;
 } params;
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
@@ -54,7 +54,6 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	int run_mode = 0;
 	int test_status = 0;	//Default test result set to PASS
-	int progNum = atoi(argc[2]);
 	int i;
 	params paramList[NBCASE];
 	int sock = 600;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/rpc_svcudp_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/rpc_svcudp_create.c
index ae2a2cc..97fb875 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/rpc_svcudp_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/rpc_svcudp_create.c
@@ -37,16 +37,12 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int sock = 600;
 	SVCXPRT *svcr = NULL;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_clnt_pcreateerror/rpc_clnt_pcreateerror.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_clnt_pcreateerror/rpc_clnt_pcreateerror.c
index f8c1782..0aaa50c 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_clnt_pcreateerror/rpc_clnt_pcreateerror.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_clnt_pcreateerror/rpc_clnt_pcreateerror.c
@@ -40,10 +40,6 @@ int main(int argn, char *argc[])
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
 	CLIENT *clnt = NULL;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_clnt_spcreateerror/rpc_clnt_spcreateerror.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_clnt_spcreateerror/rpc_clnt_spcreateerror.c
index 115a4d9..65e68da 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_clnt_spcreateerror/rpc_clnt_spcreateerror.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_clnt_spcreateerror/rpc_clnt_spcreateerror.c
@@ -40,10 +40,6 @@ int main(int argn, char *argc[])
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
 	CLIENT *clnt = NULL;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_auth/rpc_svcerr_auth.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_auth/rpc_svcerr_auth.c
index a6b0b9d..50232a9 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_auth/rpc_svcerr_auth.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_auth/rpc_svcerr_auth.c
@@ -55,7 +55,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noproc/rpc_svcerr_noproc.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noproc/rpc_svcerr_noproc.c
index a094ecb..3f9ea91 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noproc/rpc_svcerr_noproc.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noproc/rpc_svcerr_noproc.c
@@ -58,7 +58,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noprog/rpc_svcerr_noprog.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noprog/rpc_svcerr_noprog.c
index 32f9b07..eb1c365 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noprog/rpc_svcerr_noprog.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noprog/rpc_svcerr_noprog.c
@@ -40,12 +40,7 @@ int main(int argn, char *argc[])
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	enum clnt_stat cs;
 	int var_snd = 0;
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_progvers/rpc_svcerr_progvers.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_progvers/rpc_svcerr_progvers.c
index b3d21cd..8fa54d9 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_progvers/rpc_svcerr_progvers.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_progvers/rpc_svcerr_progvers.c
@@ -55,7 +55,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_systemerr/rpc_svcerr_systemerr.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_systemerr/rpc_svcerr_systemerr.c
index 219c6e7..2a45f50 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_systemerr/rpc_svcerr_systemerr.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_systemerr/rpc_svcerr_systemerr.c
@@ -55,7 +55,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_weakauth/rpc_svcerr_weakauth.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_weakauth/rpc_svcerr_weakauth.c
index e4b0106..563b11a 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_weakauth/rpc_svcerr_weakauth.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_err_svcerr_weakauth/rpc_svcerr_weakauth.c
@@ -55,7 +55,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_registerrpc/rpc_registerrpc.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_registerrpc/rpc_registerrpc.c
index 6ab1e23..974c348 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_registerrpc/rpc_registerrpc.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_registerrpc/rpc_registerrpc.c
@@ -73,7 +73,7 @@ int main(int argn, char *argc[])
 			xdr_int);
 
 	if (run_mode) {
-		printf("SVC : %d\n", svcr);
+		printf("SVC : %p\n", svcr);
 		printf("rslt : %d\n", rslt);
 	}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_register/rpc_svc_register.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_register/rpc_svc_register.c
index dccac86..63adef0 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_register/rpc_svc_register.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_register/rpc_svc_register.c
@@ -52,7 +52,6 @@ int main(int argn, char *argc[])
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
 	SVCXPRT *svcr = NULL;
-	int sock = 0;
 
 	//Initialisation
 	pmap_unset(progNum, VERSNUM);
@@ -64,7 +63,7 @@ int main(int argn, char *argc[])
 	    !svc_register(svcr, progNum, VERSNUM, dispatch, IPPROTO_TCP);
 
 	if (run_mode) {
-		printf("SVC : %d\n", svcr);
+		printf("SVC : %p\n", svcr);
 	}
 	//clean up
 	svc_destroy(svcr);
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_unregister/rpc_svc_unregister.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_unregister/rpc_svc_unregister.c
index 79194ec..b52a337 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_unregister/rpc_svc_unregister.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_unregister/rpc_svc_unregister.c
@@ -52,7 +52,6 @@ int main(int argn, char *argc[])
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
 	SVCXPRT *svcr = NULL;
-	int sock = 0;
 
 	//Initialisation
 	pmap_unset(progNum, VERSNUM);
@@ -62,7 +61,7 @@ int main(int argn, char *argc[])
 	svc_register(svcr, progNum, VERSNUM, dispatch, IPPROTO_TCP);
 
 	if (run_mode) {
-		printf("SVC : %d\n", svcr);
+		printf("SVC : %p\n", svcr);
 	}
 	//call routine
 	svc_unregister(progNum, VERSNUM);
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_xprt_register/rpc_xprt_register.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_xprt_register/rpc_xprt_register.c
index 1eb76fc..ea347b4 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_xprt_register/rpc_xprt_register.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_regunreg_xprt_register/rpc_xprt_register.c
@@ -37,16 +37,12 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	SVCXPRT *svcr = NULL;
 	int fd = 0;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/rpc_callrpc_dataint.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/rpc_callrpc_dataint.c
index 8e12cf8..c69dbdf 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/rpc_callrpc_dataint.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/rpc_callrpc_dataint.c
@@ -49,7 +49,6 @@ int main(int argn, char *argc[])
 	int run_mode = 0;
 	int test_status = 0;	//Default test result set to PASSED
 	int progNum = atoi(argc[2]);
-	enum clnt_stat cs;
 	//Sent variables
 	int intSnd;
 	double dblSnd;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call.c
index 790085e..8782e5e 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call.c
@@ -61,7 +61,7 @@ int main(int argn, char *argc[])
 	clnt = clnt_create(argc[1], progNum, VERSNUM, proto);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 		printf("progNum : %d\n", progNum);
 		printf("Proto : %s\n", proto);
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_complex.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_complex.c
index f73a72e..ab0bc11 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_complex.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_complex.c
@@ -55,7 +55,7 @@ bool_t xdr_datas(XDR * pt_xdr, struct datas *pt)
 		xdr_double(pt_xdr, &(pt->b)) && xdr_double(pt_xdr, &(pt->c)));
 }
 
-double getRand()
+double getRand(void)
 {
 	return (drand48() * 1000);
 }
@@ -76,7 +76,6 @@ int main(int argn, char *argc[])
 	CLIENT *clnt = NULL;
 	enum clnt_stat cs;
 	struct timeval to;
-	int varSnd = 0;
 	int i;
 	struct RES resTbl[MAXCALC];
 	struct datas vars;
@@ -89,7 +88,7 @@ int main(int argn, char *argc[])
 	clnt = clnt_create(argc[1], progNum, VERSNUM, proto);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 		printf("progNum : %d\n", progNum);
 		printf("Proto : %s\n", proto);
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_dataint.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_dataint.c
index 041c78c..35a1835 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_dataint.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_dataint.c
@@ -72,7 +72,7 @@ int main(int argn, char *argc[])
 	clnt = clnt_create(argc[1], progNum, VERSNUM, proto);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 		printf("progNum : %d\n", progNum);
 		printf("Proto : %s\n", proto);
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_stress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_stress.c
index 6f1c9d1..ce0fd75 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_stress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/rpc_clnt_call_stress.c
@@ -65,7 +65,7 @@ int main(int argn, char *argc[])
 	clnt = clnt_create(argc[1], progNum, VERSNUM, proto);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 		printf("progNum : %d\n", progNum);
 		printf("Proto : %s\n", proto);
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/rpc_clnt_control.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/rpc_clnt_control.c
index c81ec3f..0b37585 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/rpc_clnt_control.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/rpc_clnt_control.c
@@ -54,7 +54,7 @@ int main(int argn, char *argc[])
 	clnt = clnt_create(argc[1], progNum, VERSNUM, proto);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 	}
 	//If we are here, macro call was successful
 	test_status = !clnt_control(clnt, CLGET_FD, (char *)&fd);
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/rpc_clnt_control_dataint.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/rpc_clnt_control_dataint.c
index f5ff4da..3616d65 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/rpc_clnt_control_dataint.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/rpc_clnt_control_dataint.c
@@ -55,7 +55,7 @@ int main(int argn, char *argc[])
 	clnt = clnt_create(argc[1], progNum, VERSNUM, proto);
 
 	if (run_mode) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 	}
 
 	tvSet.tv_sec = 1000;
@@ -68,10 +68,10 @@ int main(int argn, char *argc[])
 		test_status = 1;
 
 	if (run_mode) {
-		printf("Time Set : %d sec %d usec\n", tvSet.tv_sec,
-		       tvSet.tv_usec);
-		printf("Time Get : %d sec %d usec\n", tvGet.tv_sec,
-		       tvGet.tv_usec);
+		printf("Time Set : %ld sec %ld usec\n",
+		       (long)tvSet.tv_sec, (long)tvSet.tv_usec);
+		printf("Time Get : %ld sec %ld usec\n",
+		       (long)tvGet.tv_sec, (long)tvGet.tv_usec);
 	}
 
 	tvSet.tv_sec = 4000;
@@ -84,10 +84,10 @@ int main(int argn, char *argc[])
 		test_status = 1;
 
 	if (run_mode) {
-		printf("Time Set : %d sec %d usec\n", tvSet.tv_sec,
-		       tvSet.tv_usec);
-		printf("Time Get : %d sec %d usec\n", tvGet.tv_sec,
-		       tvGet.tv_usec);
+		printf("Time Set : %ld sec %ld usec\n",
+		       (long)tvSet.tv_sec, (long)tvSet.tv_usec);
+		printf("Time Get : %ld sec %ld usec\n",
+		       (long)tvGet.tv_sec, (long)tvGet.tv_usec);
 	}
 	//This last printf gives the result status to the tests suite
 	//normally should be 0: test has passed or 1: test has failed
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_freeres/rpc_clnt_freeres.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_freeres/rpc_clnt_freeres.c
index d7fcaa9..8e2946e 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_freeres/rpc_clnt_freeres.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_freeres/rpc_clnt_freeres.c
@@ -60,7 +60,7 @@ int main(int argn, char *argc[])
 	clnt = clnt_create(argc[1], progNum, VERSNUM, proto);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 		printf("progNum : %d\n", progNum);
 		printf("Proto : %s\n", proto);
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_geterr/rpc_clnt_geterr.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_geterr/rpc_clnt_geterr.c
index c4cac51..9bbce26 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_geterr/rpc_clnt_geterr.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_geterr/rpc_clnt_geterr.c
@@ -54,7 +54,7 @@ int main(int argn, char *argc[])
 	clnt = clnt_create(argc[1], progNum, VERSNUM, proto);
 
 	if (run_mode == 1) {
-		printf("CLIENT : %d\n", clnt);
+		printf("CLIENT : %p\n", clnt);
 	}
 	//Call tested routine
 	clnt_geterr(clnt, &err);
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_freeargs/rpc_svc_freeargs_svc.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_freeargs/rpc_svc_freeargs_svc.c
index da8e4b4..38e6105 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_freeargs/rpc_svc_freeargs_svc.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_freeargs/rpc_svc_freeargs_svc.c
@@ -64,7 +64,7 @@ int main(int argn, char *argc[])
 	transpUDP = svcudp_create(RPC_ANYSOCK);
 
 	if (run_mode) {
-		printf("SVC TCP : %d\n", transpUDP);
+		printf("SVC TCP : %p\n", transpUDP);
 	}
 
 	if (!svc_register
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/rpc_svc_getargs.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/rpc_svc_getargs.c
index c5bbafb..5ea06a0 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/rpc_svc_getargs.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/rpc_svc_getargs.c
@@ -64,7 +64,7 @@ int main(int argn, char *argc[])
 	transpUDP = svcudp_create(RPC_ANYSOCK);
 
 	if (run_mode) {
-		printf("SVC TCP : %d\n", transpUDP);
+		printf("SVC TCP : %p\n", transpUDP);
 	}
 
 	if (!svc_register
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/rpc_svc_getargs_dataint.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/rpc_svc_getargs_dataint.c
index 73c0b51..46ebe68 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/rpc_svc_getargs_dataint.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/rpc_svc_getargs_dataint.c
@@ -48,14 +48,8 @@ int main(int argn, char *argc[])
 	int progNum = atoi(argc[2]);
 	//Sent variables
 	int intSnd;
-	double dblSnd;
-	long lngSnd;
-	char *strSnd;
 	//Received variables
 	int intRec;
-	double dblRec;
-	long lngRec;
-	char *strRec;
 
 	intSnd = 1;
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_sendreply/rpc_svc_sendreply.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_sendreply/rpc_svc_sendreply.c
index 6e87e13..84a7117 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_sendreply/rpc_svc_sendreply.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_sendreply/rpc_svc_sendreply.c
@@ -64,7 +64,7 @@ int main(int argn, char *argc[])
 	transpUDP = svcudp_create(RPC_ANYSOCK);
 
 	if (run_mode) {
-		printf("SVC TCP : %d\n", transpUDP);
+		printf("SVC TCP : %p\n", transpUDP);
 	}
 
 	if (!svc_register
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getaddr/tirpc_rpcb_getaddr_limits.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getaddr/tirpc_rpcb_getaddr_limits.c
index e25834b..bee747d 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getaddr/tirpc_rpcb_getaddr_limits.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getaddr/tirpc_rpcb_getaddr_limits.c
@@ -46,10 +46,6 @@ int main(int argn, char *argc[])
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 0;	//Default test result set to PASS
 	int progNum = atoi(argc[2]);
 	int i;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getmaps/tirpc_rpcb_getmaps.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getmaps/tirpc_rpcb_getmaps.c
index 8274d4c..c8c4128 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getmaps/tirpc_rpcb_getmaps.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getmaps/tirpc_rpcb_getmaps.c
@@ -59,7 +59,6 @@ int main(int argn, char *argc[])
 	if (run_mode) {
 		printf("Host : %s\n", argc[1]);
 		printf("ProgNum : %d\n", progNum);
-		printf("RList @ %d\n", rl);
 	}
 
 	if ((nconf = getnetconfigent("udp")) == (struct netconfig *)NULL) {
@@ -70,7 +69,7 @@ int main(int argn, char *argc[])
 	rl = rpcb_getmaps(nconf, argc[1]);
 
 	if (run_mode) {
-		printf("RList @ %d\n", rl);
+		printf("RList @ %p\n", rl);
 	}
 
 	test_status = (rl != NULL) ? 0 : 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authdes_create/tirpc_authdes_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authdes_create/tirpc_authdes_create.c
index 117dfee..395a812 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authdes_create/tirpc_authdes_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authdes_create/tirpc_authdes_create.c
@@ -41,12 +41,7 @@ int main(int argn, char *argc[])
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	AUTH *authDes = NULL;
 	struct sockaddr server_addr;
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authnone_create/tirpc_authnone_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authnone_create/tirpc_authnone_create.c
index b4f2c27..1daf2ad 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authnone_create/tirpc_authnone_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authnone_create/tirpc_authnone_create.c
@@ -35,18 +35,13 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	AUTH *authNone = NULL;
 
 	authNone = authnone_create();
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create/tirpc_authsys_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create/tirpc_authsys_create.c
index 8fffb72..fe1e433 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create/tirpc_authsys_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create/tirpc_authsys_create.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <unistd.h>
 #include <tirpc/rpc/rpc.h>
 #include <netdb.h>
 
@@ -41,15 +42,10 @@ int main(int argn, char *argc[])
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	AUTH *authSys = NULL;
 	uid_t uid;
-	gid_t gid, *aup_gids;
+	gid_t gid, aup_gids[NGRPS];
 	int len;
 
 	//Initialization
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create_default/tirpc_authsys_create_default.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create_default/tirpc_authsys_create_default.c
index ddd1261..7d961fb 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create_default/tirpc_authsys_create_default.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create_default/tirpc_authsys_create_default.c
@@ -35,18 +35,13 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	AUTH *authSys = NULL;
 
 	authSys = authsys_create_default();
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_complex.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_complex.c
index 347c24a..cf2f890 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_complex.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_complex.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -66,17 +67,15 @@ bool_t xdr_datas(XDR * pt_xdr, struct datas *pt)
 		xdr_double(pt_xdr, &(pt->b)) && xdr_double(pt_xdr, &(pt->c)));
 }
 
-double getRand()
+double getRand(void)
 {
 	return (drand48() * 1000);
 }
 
 void *my_thread_process(void *arg)
 {
-	int i;
 	CLIENT *clnt = NULL;
 	struct datas vars;
-	static double result = 0;
 	struct timeval total_timeout;
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
@@ -90,7 +89,7 @@ void *my_thread_process(void *arg)
 	if ((struct netconfig *)nconf == NULL) {
 		//Test failed
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	svcaddr.len = 0;
@@ -99,13 +98,13 @@ void *my_thread_process(void *arg)
 
 	if (svcaddr.buf == NULL) {
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	if (!rpcb_getaddr(progNum, VERSNUM, nconf, &svcaddr, hostname)) {
 		fprintf(stderr, "rpcb_getaddr failed!!\n");
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	clnt = clnt_dg_create(RPC_ANYFD, &svcaddr,
@@ -113,11 +112,11 @@ void *my_thread_process(void *arg)
 
 	if (clnt == NULL) {
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	vars.a = getRand();
@@ -155,7 +154,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 0;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -180,8 +179,8 @@ int main(int argn, char *argc[])
 	for (i = 0; i < threadNb; i++) {
 		thread_array_result[i] = 1;
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -204,7 +203,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_mt.c
index fb9672d..420133d 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -61,7 +62,7 @@ void *my_thread_process(void *arg)
 	int i;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	tv.tv_sec = 0;
@@ -71,7 +72,7 @@ void *my_thread_process(void *arg)
 	if (nconf == (struct netconfig *)NULL) {
 		//syslog(LOG_ERR, "getnetconfigent for udp failed");
 		printf("err nconf\n");
-		pthread_exit(1);
+		pthread_exit((void*)1l);
 	}
 
 	svcaddr.len = 0;
@@ -79,14 +80,14 @@ void *my_thread_process(void *arg)
 	svcaddr.buf = addrbuf;
 
 	if (svcaddr.buf == NULL) {
-		pthread_exit(1);
+		pthread_exit((void*)1l);
 	}
 	//printf("svcaddr reserved (%s)\n", argc[1]);
 
 	if (!rpcb_getaddr(progNum + atoi(arg), VERSNUM, nconf,
 			  &svcaddr, hostname)) {
 		fprintf(stderr, "rpcb_getaddr failed!!\n");
-		pthread_exit(1);
+		pthread_exit((void*)1l);
 	}
 	//printf("svc get\n");
 
@@ -95,7 +96,7 @@ void *my_thread_process(void *arg)
 
 	if (client == NULL) {
 		clnt_pcreateerror("ERR");
-		pthread_exit(1);
+		pthread_exit((void*)1l);
 	}
 
 	for (i = 0; i < callNb; i++) {
@@ -123,7 +124,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -145,8 +146,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -169,7 +170,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_scalability.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_scalability.c
index 97c57d2..15a9aa6 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_scalability.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_scalability.c
@@ -128,7 +128,7 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int i, rthcreate;
+	int i;
 	long j;
 	int threadNb = atoi((char *)argc[3]);
 	int curThd = 1;
@@ -188,7 +188,7 @@ int main(int argn, char *argc[])
 			    (&pThreadArray[j], &thread_attr, my_thread_process,
 			     (void *)j) != 0) {
 				fprintf(stderr,
-					"pthread_create error for thread %d\n",
+					"pthread_create error for thread %ld\n",
 					j);
 				printf("1\n");
 				exit(1);
@@ -200,7 +200,7 @@ int main(int argn, char *argc[])
 			if ((pthread_t *) pThreadArray[j] != NULL) {
 				(void)pthread_join(pThreadArray[j], &ret);
 			} else {
-				fprintf(stderr, "pThread Join Err : %d\n", j);
+				fprintf(stderr, "pThread Join Err : %ld\n", j);
 			}
 		}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_stress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_stress.c
index 7168857..2040ac8 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_stress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/tirpc_bottomlevel_clnt_call_stress.c
@@ -68,8 +68,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 0;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_dg_create/tirpc_clnt_dg_create_limits.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_dg_create/tirpc_clnt_dg_create_limits.c
index 13ecedb..45cc057 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_dg_create/tirpc_clnt_dg_create_limits.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_dg_create/tirpc_clnt_dg_create_limits.c
@@ -64,7 +64,6 @@ int main(int argn, char *argc[])
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
 	char addrbuf[ADDRBUFSIZE];
-	bool_t rpcb_rslt;
 
 	//Test initialization
 	nconf = getnetconfigent("udp");
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_vc_create/tirpc_clnt_vc_create_limits.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_vc_create/tirpc_clnt_vc_create_limits.c
index facb3f5..9c71652 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_vc_create/tirpc_clnt_vc_create_limits.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_vc_create/tirpc_clnt_vc_create_limits.c
@@ -64,7 +64,6 @@ int main(int argn, char *argc[])
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
 	char addrbuf[ADDRBUFSIZE];
-	bool_t rpcb_rslt;
 
 	//Test initialization
 	nconf = getnetconfigent("udp");
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/tirpc_svc_dg_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/tirpc_svc_dg_create.c
index b93e4d6..955c9c6 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/tirpc_svc_dg_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/tirpc_svc_dg_create.c
@@ -38,7 +38,7 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	int test_status = 1;
 	SVCXPRT *transp = NULL;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/tirpc_svc_dg_create_limits.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/tirpc_svc_dg_create_limits.c
index 41ce772..54cb5b9 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/tirpc_svc_dg_create_limits.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/tirpc_svc_dg_create_limits.c
@@ -46,7 +46,7 @@ typedef struct {
 	int bufrec;
 } params;
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
@@ -57,7 +57,6 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	int run_mode = 0;
 	int test_status = 0;	//Default test result set to PASS
-	int progNum = atoi(argc[2]);
 	int i;
 	params paramList[NBCASE];
 	SVCXPRT *transp = NULL;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/tirpc_svc_vc_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/tirpc_svc_vc_create.c
index 491ac82..b4857da 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/tirpc_svc_vc_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/tirpc_svc_vc_create.c
@@ -38,7 +38,7 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	int test_status = 1;
 	SVCXPRT *transp = NULL;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/tirpc_svc_vc_create_limits.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/tirpc_svc_vc_create_limits.c
index a496c42..2718026 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/tirpc_svc_vc_create_limits.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/tirpc_svc_vc_create_limits.c
@@ -46,7 +46,7 @@ typedef struct {
 	int bufrec;
 } params;
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
@@ -57,7 +57,6 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	int run_mode = 0;
 	int test_status = 0;	//Default test result set to PASS
-	int progNum = atoi(argc[2]);
 	int i;
 	params paramList[NBCASE];
 	SVCXPRT *transp = NULL;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_pcreateerror/tirpc_clnt_pcreateerror.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_pcreateerror/tirpc_clnt_pcreateerror.c
index fb7f5af..a49e4b5 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_pcreateerror/tirpc_clnt_pcreateerror.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_pcreateerror/tirpc_clnt_pcreateerror.c
@@ -43,10 +43,6 @@ int main(int argn, char *argc[])
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
 	CLIENT *clnt = NULL;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perrno/tirpc_clnt_perrno_complex.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perrno/tirpc_clnt_perrno_complex.c
index b976a94..7c87100 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perrno/tirpc_clnt_perrno_complex.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perrno/tirpc_clnt_perrno_complex.c
@@ -55,7 +55,6 @@ int main(int argn, char *argc[])
 	char nettype[16] = "visible";
 	int sndVar = 0;
 	int recVar = -1;
-	struct timeval total_timeout;
 	enum clnt_stat rslt;
 
 	if (run_mode == 1) {
@@ -63,9 +62,6 @@ int main(int argn, char *argc[])
 		printf("Server # %d\n", progNum);
 		printf("Net : %s\n", nettype);
 	}
-	//Initialisation
-	total_timeout.tv_sec = 1;
-	total_timeout.tv_usec = 1;
 	/**/
 	    //Multiple test case
 	    rslt = rpc_call(argc[1], progNum, VERSNUM, PROCNUM,
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noproc/tirpc_svcerr_noproc.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noproc/tirpc_svcerr_noproc.c
index 3273a1c..15fd110 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noproc/tirpc_svcerr_noproc.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noproc/tirpc_svcerr_noproc.c
@@ -63,8 +63,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noprog/tirpc_svcerr_noprog.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noprog/tirpc_svcerr_noprog.c
index 99960b5..c2fb21e 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noprog/tirpc_svcerr_noprog.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noprog/tirpc_svcerr_noprog.c
@@ -63,8 +63,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_progvers/tirpc_svcerr_progvers.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_progvers/tirpc_svcerr_progvers.c
index 095fdb3..4722977 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_progvers/tirpc_svcerr_progvers.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_progvers/tirpc_svcerr_progvers.c
@@ -63,8 +63,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_systemerr/tirpc_svcerr_systemerr.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_systemerr/tirpc_svcerr_systemerr.c
index 6df46f7..b1407d4 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_systemerr/tirpc_svcerr_systemerr.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_systemerr/tirpc_svcerr_systemerr.c
@@ -63,8 +63,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_weakauth/tirpc_svcerr_weakauth.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_weakauth/tirpc_svcerr_weakauth.c
index 563c672..8a1614f 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_weakauth/tirpc_svcerr_weakauth.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_weakauth/tirpc_svcerr_weakauth.c
@@ -63,8 +63,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call.c
index 8a2e4ed..fa09f4c 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call.c
@@ -64,8 +64,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_complex.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_complex.c
index 07aa254..e33979d 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_complex.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_complex.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -66,17 +67,15 @@ bool_t xdr_datas(XDR * pt_xdr, struct datas *pt)
 		xdr_double(pt_xdr, &(pt->b)) && xdr_double(pt_xdr, &(pt->c)));
 }
 
-double getRand()
+double getRand(void)
 {
 	return (drand48() * 1000);
 }
 
 void *my_thread_process(void *arg)
 {
-	int i;
 	CLIENT *clnt = NULL;
 	struct datas vars;
-	static double result = 0;
 	struct timeval total_timeout;
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
@@ -90,7 +89,7 @@ void *my_thread_process(void *arg)
 	if ((struct netconfig *)nconf == NULL) {
 		//Test failed
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	svcaddr.len = 0;
@@ -99,13 +98,13 @@ void *my_thread_process(void *arg)
 
 	if (svcaddr.buf == NULL) {
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	if (!rpcb_getaddr(progNum, VERSNUM, nconf, &svcaddr, hostname)) {
 		fprintf(stderr, "rpcb_getaddr failed!!\n");
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	clnt = clnt_tli_create(RPC_ANYFD, nconf, &svcaddr,
@@ -113,11 +112,11 @@ void *my_thread_process(void *arg)
 
 	if (clnt == NULL) {
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	vars.a = getRand();
@@ -155,7 +154,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 0;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -180,8 +179,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -204,7 +203,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_mt.c
index ac6cfd1..5672575 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -61,7 +62,7 @@ void *my_thread_process(void *arg)
 	int i;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	tv.tv_sec = 0;
@@ -70,7 +71,7 @@ void *my_thread_process(void *arg)
 	nconf = getnetconfigent("udp");
 	if (nconf == (struct netconfig *)NULL) {
 		printf("err nconf\n");
-		pthread_exit(1);
+		pthread_exit((void*)1l);
 	}
 
 	svcaddr.len = 0;
@@ -78,13 +79,13 @@ void *my_thread_process(void *arg)
 	svcaddr.buf = addrbuf;
 
 	if (svcaddr.buf == NULL) {
-		pthread_exit(1);
+		pthread_exit((void*)1l);
 	}
 
 	if (!rpcb_getaddr(progNum + atoi(arg), VERSNUM, nconf,
 			  &svcaddr, hostname)) {
 		fprintf(stderr, "rpcb_getaddr failed!!\n");
-		pthread_exit(1);
+		pthread_exit((void*)1l);
 	}
 
 	client = clnt_tli_create(RPC_ANYFD, nconf, &svcaddr,
@@ -92,7 +93,7 @@ void *my_thread_process(void *arg)
 
 	if (client == NULL) {
 		clnt_pcreateerror("ERR");
-		pthread_exit(1);
+		pthread_exit((void*)1l);
 	}
 
 	for (i = 0; i < callNb; i++) {
@@ -120,7 +121,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -142,8 +143,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -166,7 +167,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_performance.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_performance.c
index aa1c64d..a89dd66 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_performance.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_performance.c
@@ -113,8 +113,6 @@ int main(int argn, char *argc[])
 
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 0;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_scalability.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_scalability.c
index 0d3c8b1..d32ef8d 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_scalability.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_scalability.c
@@ -123,7 +123,7 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int i, rthcreate;
+	int i;
 	long j;
 	int threadNb = atoi((char *)argc[3]);
 	int curThd = 1;
@@ -183,7 +183,7 @@ int main(int argn, char *argc[])
 			    (&pThreadArray[j], &thread_attr, my_thread_process,
 			     (void *)j) != 0) {
 				fprintf(stderr,
-					"pthread_create error for thread %d\n",
+					"pthread_create error for thread %ld\n",
 					j);
 				printf("1\n");
 				exit(1);
@@ -195,7 +195,7 @@ int main(int argn, char *argc[])
 			if ((pthread_t *) pThreadArray[j] != NULL) {
 				(void)pthread_join(pThreadArray[j], &ret);
 			} else {
-				fprintf(stderr, "pThread Join Err : %d\n", j);
+				fprintf(stderr, "pThread Join Err : %ld\n", j);
 			}
 		}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_stress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_stress.c
index 4d72b4f..6f99bc7 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_stress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/tirpc_expertlevel_clnt_call_stress.c
@@ -68,8 +68,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 0;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/tirpc_clnt_tli_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/tirpc_clnt_tli_create.c
index 3adf52d..b71b0ad 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/tirpc_clnt_tli_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/tirpc_clnt_tli_create.c
@@ -56,13 +56,10 @@ int main(int argn, char *argc[])
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
 	char addrbuf[ADDRBUFSIZE];
-	bool_t rpcb_rslt;
 
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	nconf = getnetconfigent("udp");
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/tirpc_clnt_tli_create_limits.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/tirpc_clnt_tli_create_limits.c
index 9a032b2..3285c09 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/tirpc_clnt_tli_create_limits.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/tirpc_clnt_tli_create_limits.c
@@ -64,13 +64,10 @@ int main(int argn, char *argc[])
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
 	char addrbuf[ADDRBUFSIZE];
-	bool_t rpcb_rslt;
 
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	nconf = getnetconfigent("udp");
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall.c
index 4409115..d8beba9 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall.c
@@ -52,7 +52,6 @@ int main(int argn, char *argc[])
 	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
-	CLIENT *client = NULL;
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
 	char addrbuf[ADDRBUFSIZE];
@@ -64,8 +63,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_complex.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_complex.c
index b3af076..cc4a639 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_complex.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_complex.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -66,17 +67,14 @@ bool_t xdr_datas(XDR * pt_xdr, struct datas *pt)
 		xdr_double(pt_xdr, &(pt->b)) && xdr_double(pt_xdr, &(pt->c)));
 }
 
-double getRand()
+double getRand(void)
 {
 	return (drand48() * 1000);
 }
 
 void *my_thread_process(void *arg)
 {
-	int i;
-	CLIENT *clnt = NULL;
 	struct datas vars;
-	static double result = 0;
 	struct timeval total_timeout;
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
@@ -90,7 +88,7 @@ void *my_thread_process(void *arg)
 	if ((struct netconfig *)nconf == NULL) {
 		//Test failed
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	svcaddr.len = 0;
@@ -99,17 +97,17 @@ void *my_thread_process(void *arg)
 
 	if (svcaddr.buf == NULL) {
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	if (!rpcb_getaddr(progNum, VERSNUM, nconf, &svcaddr, hostname)) {
 		fprintf(stderr, "rpcb_getaddr failed!!\n");
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	vars.a = getRand();
@@ -148,7 +146,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 0;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -173,8 +171,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -197,7 +195,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_mt.c
index f91f147..012550a 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -50,7 +51,6 @@ int callNb;
 
 void *my_thread_process(void *arg)
 {
-	CLIENT *client = NULL;
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
 	char addrbuf[ADDRBUFSIZE];
@@ -61,7 +61,7 @@ void *my_thread_process(void *arg)
 	int i;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	tv.tv_sec = 0;
@@ -71,7 +71,7 @@ void *my_thread_process(void *arg)
 	if (nconf == (struct netconfig *)NULL) {
 		//syslog(LOG_ERR, "getnetconfigent for udp failed");
 		fprintf(stderr, "err nconf\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	svcaddr.len = 0;
@@ -80,14 +80,14 @@ void *my_thread_process(void *arg)
 
 	if (svcaddr.buf == NULL) {
 		/* if malloc() failed, print error messages and exit */
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 	//printf("svcaddr reserved (%s)\n", argc[1]);
 
 	if (!rpcb_getaddr(progNum + atoi(arg), VERSNUM, nconf,
 			  &svcaddr, hostname)) {
 		fprintf(stderr, "rpcb_getaddr failed!!\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	for (i = 0; i < callNb; i++) {
@@ -116,7 +116,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -138,8 +138,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -162,7 +162,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_performance.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_performance.c
index 150b4f1..2b0667a 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_performance.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_performance.c
@@ -98,7 +98,6 @@ int main(int argn, char *argc[])
 	long long diff;
 	double rslt;
 	int progNum = atoi(argc[2]);
-	CLIENT *client = NULL;
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
 	char addrbuf[ADDRBUFSIZE];
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_scalability.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_scalability.c
index add33f9..f80644f 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_scalability.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_scalability.c
@@ -54,7 +54,6 @@ char *hostname;
 void *my_thread_process(void *arg)
 {
 	int i;
-	CLIENT *client = NULL;
 	struct netconfig *nconf = NULL;
 	struct netbuf svcaddr;
 	char addrbuf[ADDRBUFSIZE];
@@ -114,7 +113,7 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int i, rthcreate;
+	int i;
 	long j;
 	int threadNb = atoi((char *)argc[3]);
 	int curThd = 1;
@@ -174,7 +173,7 @@ int main(int argn, char *argc[])
 			    (&pThreadArray[j], &thread_attr, my_thread_process,
 			     (void *)j) != 0) {
 				fprintf(stderr,
-					"pthread_create error for thread %d\n",
+					"pthread_create error for thread %ld\n",
 					j);
 				printf("1\n");
 				exit(1);
@@ -186,7 +185,7 @@ int main(int argn, char *argc[])
 			if ((pthread_t *) pThreadArray[j] != NULL) {
 				(void)pthread_join(pThreadArray[j], &ret);
 			} else {
-				fprintf(stderr, "pThread Join Err : %d\n", j);
+				fprintf(stderr, "pThread Join Err : %ld\n", j);
 			}
 		}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_stress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_stress.c
index 927467d..63bbee3 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_stress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/tirpc_rpcb_rmtcall_stress.c
@@ -68,8 +68,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
 	}
 
 	tv.tv_sec = 0;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg.c
index 5fee7bc..bebb0b6 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg.c
@@ -53,12 +53,10 @@ int main(int argn, char *argc[])
 	int progNum = atoi(argc[2]);
 	SVCXPRT *transp = NULL;
 	struct netconfig *nconf = NULL;
-	struct netbuf svcaddr;
 
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("nconf : %d\n", nconf);
 	}
 
 	nconf = getnetconfigent("udp");
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg_mt.c
index c08ae2c..7f45e7d 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -49,18 +50,17 @@ void *my_thread_process(void *arg)
 {
 	SVCXPRT *transp = NULL;
 	struct netconfig *nconf = NULL;
-	struct netbuf svcaddr;
 	int i;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	nconf = getnetconfigent("udp");
 	if (nconf == (struct netconfig *)NULL) {
 		//syslog(LOG_ERR, "getnetconfigent for udp failed");
 		printf("err nconf\n");
-		pthread_exit(1);
+		pthread_exit((void*)1l);
 	}
 
 	transp = svc_tli_create(RPC_ANYFD, nconf, (struct t_bind *)NULL, 0, 0);
@@ -88,7 +88,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -109,8 +109,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -133,7 +133,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg_stress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg_stress.c
index b70a1fe..0fa0343 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg_stress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/tirpc_svc_reg_stress.c
@@ -54,7 +54,6 @@ int main(int argn, char *argc[])
 	int progNum = atoi(argc[2]);
 	SVCXPRT *transp = NULL;
 	struct netconfig *nconf = NULL;
-	struct netbuf svcaddr;
 	int nbCall = atoi(argc[3]);
 	int nbOk = 0;
 	int i;
@@ -62,7 +61,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("nconf : %d\n", nconf);
 	}
 
 	nconf = getnetconfigent("udp");
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/tirpc_svc_tli_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/tirpc_svc_tli_create.c
index d2d2da7..ebf646e 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/tirpc_svc_tli_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/tirpc_svc_tli_create.c
@@ -37,7 +37,7 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
@@ -48,14 +48,12 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int progNum = atoi(argc[2]);
 	SVCXPRT *transp = NULL;
 	struct netconfig *nconf = NULL;
 
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("nconf : %d\n", nconf);
 	}
 
 	nconf = getnetconfigent("udp");
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/tirpc_svc_tli_create_limits.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/tirpc_svc_tli_create_limits.c
index 1e8cf2c..b6de2ca 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/tirpc_svc_tli_create_limits.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/tirpc_svc_tli_create_limits.c
@@ -43,7 +43,7 @@ typedef struct {
 	int bufmax;
 } params;
 
-int main(int argn, char *argc[])
+int main(void)
 {
 	//Program parameters : argc[1] : HostName or Host IP
 	//                                         argc[2] : Server Program Number
@@ -54,7 +54,6 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	int run_mode = 0;
 	int test_status = 0;	//Default test result set to PASS
-	int progNum = atoi(argc[2]);
 	int i;
 	params paramList[NBCASE];
 	SVCXPRT *transp = NULL;
@@ -63,7 +62,6 @@ int main(int argn, char *argc[])
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("nconf : %d\n", nconf);
 	}
 
 	nconf = getnetconfigent("udp");
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg.c
index 0c2b790..d56b9bf 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg.c
@@ -53,12 +53,10 @@ int main(int argn, char *argc[])
 	int progNum = atoi(argc[2]);
 	SVCXPRT *transp = NULL;
 	struct netconfig *nconf = NULL;
-	struct netbuf svcaddr;
 
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("nconf : %d\n", nconf);
 	}
 
 	nconf = getnetconfigent("udp");
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg_mt.c
index 26da4bc..721739b 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -49,18 +50,17 @@ void *my_thread_process(void *arg)
 {
 	SVCXPRT *transp = NULL;
 	struct netconfig *nconf = NULL;
-	struct netbuf svcaddr;
 	int i;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	nconf = getnetconfigent("udp");
 	if (nconf == (struct netconfig *)NULL) {
 		//syslog(LOG_ERR, "getnetconfigent for udp failed");
 		printf("err nconf\n");
-		pthread_exit(1);
+		pthread_exit((void*)1l);
 	}
 
 	transp = svc_tli_create(RPC_ANYFD, nconf, (struct t_bind *)NULL, 0, 0);
@@ -92,7 +92,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -113,8 +113,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -137,7 +137,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg_stress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg_stress.c
index b4040c9..5516221 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg_stress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/tirpc_svc_unreg_stress.c
@@ -54,15 +54,12 @@ int main(int argn, char *argc[])
 	int progNum = atoi(argc[2]);
 	SVCXPRT *transp = NULL;
 	struct netconfig *nconf = NULL;
-	struct netbuf svcaddr;
 	int nbCall = atoi(argc[3]);
-	int nbOk = 0;
 	int i;
 
 	//Initialization
 	if (run_mode) {
 		printf("Before creation\n");
-		printf("nconf : %d\n", nconf);
 	}
 
 	nconf = getnetconfigent("udp");
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call.c
index d0ab7fc..29d8124 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call.c
@@ -45,10 +45,6 @@ int main(int argn, char *argc[])
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
 	int sndVar = 0;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_complex.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_complex.c
index 0038468..c9b578d 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_complex.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_complex.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -64,17 +65,15 @@ bool_t xdr_datas(XDR * pt_xdr, struct datas *pt)
 		xdr_double(pt_xdr, &(pt->b)) && xdr_double(pt_xdr, &(pt->c)));
 }
 
-double getRand()
+double getRand(void)
 {
 	return (drand48() * 1000);
 }
 
 void *my_thread_process(void *arg)
 {
-	int i;
 	CLIENT *clnt = NULL;
 	struct datas vars;
-	static double result = 0;
 	struct timeval total_timeout;
 	struct netconfig *nconf = NULL;
 
@@ -86,7 +85,7 @@ void *my_thread_process(void *arg)
 	if ((struct netconfig *)nconf == NULL) {
 		//Test failed
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	clnt = clnt_tp_create_timed(hostname, progNum,
@@ -95,11 +94,11 @@ void *my_thread_process(void *arg)
 
 	if (clnt == NULL) {
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	vars.a = getRand();
@@ -137,7 +136,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 0;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -162,8 +161,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -186,7 +185,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_dataint.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_dataint.c
index b83f242..d7d547f 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_dataint.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_dataint.c
@@ -49,7 +49,6 @@ int main(int argn, char *argc[])
 	int run_mode = 0;
 	int test_status = 0;	//Default test result set to PASSED
 	int progNum = atoi(argc[2]);
-	int recVar = -1;
 	CLIENT *client = NULL;
 	struct netconfig *nconf = NULL;
 	struct timeval tv;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_mt.c
index 29e44b1..0b08a29 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -56,7 +57,7 @@ void *my_thread_process(void *arg)
 	int i;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 	//First, test initialization : create client using intermediate level API
 	nconf = getnetconfigent("udp");
@@ -64,7 +65,7 @@ void *my_thread_process(void *arg)
 	if ((struct netconfig *)nconf == NULL) {
 		//Test failed
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	tv.tv_sec = 1;
@@ -76,7 +77,7 @@ void *my_thread_process(void *arg)
 	if (client == NULL) {
 		clnt_pcreateerror("ERR");
 		thread_array_result[atoi(arg)] = 0;
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 	//Call routine
 	for (i = 0; i < callNb; i++) {
@@ -104,7 +105,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -126,8 +127,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -150,7 +151,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_scalability.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_scalability.c
index 778e51b..4e759fb 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_scalability.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/tirpc_interlevel_clnt_call_scalability.c
@@ -63,7 +63,7 @@ void *my_thread_process(void *arg)
 	if ((struct netconfig *)nconf == NULL) {
 		//Test failed
 		printf("5\n");
-		pthread_exit((void *)5);
+		pthread_exit((void *)5l);
 	}
 
 	tv.tv_sec = 1;
@@ -74,11 +74,11 @@ void *my_thread_process(void *arg)
 
 	if (client == NULL) {
 		printf("5\n");
-		pthread_exit((void *)5);
+		pthread_exit((void *)5l);
 	}
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	for (i = 0; i < callNb; i++) {
@@ -105,7 +105,8 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int i, j, rthcreate;
+	int i;
+	long j;
 	int threadNb = atoi((char *)argc[3]);
 	int curThd = 1;
 
@@ -164,7 +165,7 @@ int main(int argn, char *argc[])
 			    (&pThreadArray[j], &thread_attr, my_thread_process,
 			     (void *)j) != 0) {
 				fprintf(stderr,
-					"pthread_create error for thread %d\n",
+					"pthread_create error for thread %ld\n",
 					j);
 				printf("1\n");
 				exit(1);
@@ -176,7 +177,7 @@ int main(int argn, char *argc[])
 			if ((pthread_t *) pThreadArray[j] != NULL) {
 				(void)pthread_join(pThreadArray[j], &ret);
 			} else {
-				fprintf(stderr, "pThread Join Err : %d\n", j);
+				fprintf(stderr, "pThread Join Err : %ld\n", j);
 			}
 		}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/tirpc_clnt_control.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/tirpc_clnt_control.c
index 501ea41..cfa2e8d 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/tirpc_clnt_control.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/tirpc_clnt_control.c
@@ -52,7 +52,6 @@ int main(int argn, char *argc[])
 	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
-	char nettype[16] = "visible";
 	CLIENT *client = NULL;
 	struct netconfig *nconf = NULL;
 	struct timeval tv;
@@ -77,8 +76,8 @@ int main(int argn, char *argc[])
 	//Call routine
 	rslt = clnt_control(client, CLGET_FD, (int *)&fd);
 	if (run_mode) {
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
+		printf("client : %p\n", client);
+		printf("nconf : %p\n", nconf);
 		printf("F. Desc. : %d\n", fd);
 	}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/tirpc_clnt_control_limits.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/tirpc_clnt_control_limits.c
index 9a38b7e..bcac163 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/tirpc_clnt_control_limits.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/tirpc_clnt_control_limits.c
@@ -40,13 +40,8 @@ int main(int argn, char *argc[])
 	//                                         argc[2] : Server Program Number
 	//                                         other arguments depend on test case
 
-	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 0;	//Default test result set to PASS
 	int progNum = atoi(argc[2]);
-	char nettype[16] = "visible";
 	CLIENT *client = NULL;
 	struct netconfig *nconf = NULL;
 	struct timeval tv;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create/tirpc_clnt_tp_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create/tirpc_clnt_tp_create.c
index 81c9b93..4988770 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create/tirpc_clnt_tp_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create/tirpc_clnt_tp_create.c
@@ -52,7 +52,6 @@ int main(int argn, char *argc[])
 	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
-	char nettype[16] = "visible";
 	CLIENT *client = NULL;
 	struct netconfig *nconf = NULL;
 
@@ -69,8 +68,8 @@ int main(int argn, char *argc[])
 				VERSNUM, (struct netconfig *)nconf);
 
 	if (run_mode) {
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
+		printf("client : %p\n", client);
+		printf("nconf : %p\n", nconf);
 	}
 
 	test_status = ((CLIENT *) client != NULL) ? 0 : 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create_timed/tirpc_clnt_tp_create_timed.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create_timed/tirpc_clnt_tp_create_timed.c
index 7d48032..dea54b9 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create_timed/tirpc_clnt_tp_create_timed.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create_timed/tirpc_clnt_tp_create_timed.c
@@ -51,7 +51,6 @@ int main(int argn, char *argc[])
 	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
-	char nettype[16] = "visible";
 	CLIENT *client = NULL;
 	struct netconfig *nconf = NULL;
 	struct timeval tv;
@@ -73,8 +72,8 @@ int main(int argn, char *argc[])
 				      VERSNUM, (struct netconfig *)nconf, &tv);
 
 	if (run_mode) {
-		printf("client : %d\n", client);
-		printf("nconf : %d\n", nconf);
+		printf("client : %p\n", client);
+		printf("nconf : %p\n", nconf);
 	}
 
 	test_status = ((CLIENT *) client != NULL) ? 0 : 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_svc_tp_create/tirpc_svc_tp_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_svc_tp_create/tirpc_svc_tp_create.c
index a5b4d37..a5acf0c 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_svc_tp_create/tirpc_svc_tp_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_interlevel_svc_tp_create/tirpc_svc_tp_create.c
@@ -43,9 +43,6 @@ static void exm_proc();
 int main(int argn, char *argc[])
 {
 	//run_mode can switch into stand alone program or program launch by shell script
-	//1 : stand alone, debug mode, more screen information
-	//0 : launch by shell script as test case, only one printf -> result status
-	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[1]);
 	SVCXPRT *transp;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_mt.c
index 699938f..b6f22d4 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -48,6 +49,7 @@ int callNb;
 int eachresult(char *out, struct sockaddr_in *addr)
 {
 	//Nothing to do for that test
+	return 0;
 }
 
 void *my_thread_process(void *arg)
@@ -58,7 +60,7 @@ void *my_thread_process(void *arg)
 	int i;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	for (i = 0; i < callNb; i++) {
@@ -87,7 +89,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -109,8 +111,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -133,7 +135,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_scalability.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_scalability.c
index 76deef5..c895683 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_scalability.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_scalability.c
@@ -87,7 +87,7 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int i, rthcreate;
+	int i;
 	long j;
 	int threadNb = atoi((char *)argc[3]);
 	int curThd = 1;
@@ -147,7 +147,7 @@ int main(int argn, char *argc[])
 			    (&pThreadArray[j], &thread_attr, my_thread_process,
 			     (void *)j) != 0) {
 				fprintf(stderr,
-					"pthread_create error for thread %d\n",
+					"pthread_create error for thread %ld\n",
 					j);
 				printf("1\n");
 				exit(1);
@@ -159,7 +159,7 @@ int main(int argn, char *argc[])
 			if ((pthread_t *) pThreadArray[j] != NULL) {
 				(void)pthread_join(pThreadArray[j], &ret);
 			} else {
-				fprintf(stderr, "pThread Join Err : %d\n", j);
+				fprintf(stderr, "pThread Join Err : %ld\n", j);
 			}
 		}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_stress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_stress.c
index a8022b4..6cc48d4 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_stress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/tirpc_rpc_broadcast_stress.c
@@ -42,6 +42,7 @@
 int eachresult(char *out, struct sockaddr_in *addr)
 {
 	//Nothing to do for that test
+	return 0;
 }
 
 int main(int argn, char *argc[])
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_mt.c
index 4cf21d0..760dca1 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -54,7 +55,6 @@ int eachresult(char *out, struct sockaddr_in *addr)
 void *my_thread_process(void *arg)
 {
 	enum clnt_stat rslt;
-	int sndVar = atoi(arg);
 	int recVar;
 	int i;
 
@@ -62,7 +62,7 @@ void *my_thread_process(void *arg)
 	int mTimeOut = 1;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	for (i = 0; i < callNb; i++) {
@@ -92,7 +92,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -114,8 +114,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -138,7 +138,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_scalability.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_scalability.c
index 3898d87..55c4b7b 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_scalability.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_scalability.c
@@ -87,7 +87,7 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int i, rthcreate;
+	int i;
 	long j;
 	int threadNb = atoi((char *)argc[3]);
 	int curThd = 1;
@@ -147,7 +147,7 @@ int main(int argn, char *argc[])
 			    (&pThreadArray[j], &thread_attr, my_thread_process,
 			     (void *)j) != 0) {
 				fprintf(stderr,
-					"pthread_create error for thread %d\n",
+					"pthread_create error for thread %ld\n",
 					j);
 				printf("1\n");
 				exit(1);
@@ -159,7 +159,7 @@ int main(int argn, char *argc[])
 			if ((pthread_t *) pThreadArray[j] != NULL) {
 				(void)pthread_join(pThreadArray[j], &ret);
 			} else {
-				fprintf(stderr, "pThread Join Err : %d\n", j);
+				fprintf(stderr, "pThread Join Err : %ld\n", j);
 			}
 		}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_stress.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_stress.c
index 326944b..cee249c 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_stress.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/tirpc_rpc_broadcast_exp_stress.c
@@ -42,6 +42,7 @@
 int eachresult(char *out, struct sockaddr_in *addr)
 {
 	//Nothing to do for that test
+	return 0;
 }
 
 int main(int argn, char *argc[])
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_complex.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_complex.c
index ececb8f..591b530 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_complex.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_complex.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -64,19 +65,17 @@ bool_t xdr_datas(XDR * pt_xdr, struct datas *pt)
 		xdr_double(pt_xdr, &(pt->b)) && xdr_double(pt_xdr, &(pt->c)));
 }
 
-double getRand()
+double getRand(void)
 {
 	return (drand48() * 1000);
 }
 
 void *my_thread_process(void *arg)
 {
-	int i;
 	struct datas vars;
-	static double result = 0;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	vars.a = getRand();
@@ -114,7 +113,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 0;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -139,8 +138,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -163,7 +162,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_mt.c
index 72ae47e..8a82b10 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -49,12 +50,12 @@ int callNb;
 void *my_thread_process(void *arg)
 {
 	enum clnt_stat rslt;
-	int sndVar = atoi(arg);
+	int sndVar = (long)arg;
 	int recVar;
 	int i;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 		fprintf(stderr, "%s\n", nettype);
 		fprintf(stderr, "%s\n", hostname);
 		fprintf(stderr, "Value sent : %d\n", sndVar);
@@ -87,7 +88,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -110,8 +111,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -134,7 +135,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_scalability.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_scalability.c
index 331447e..a5a7ffe 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_scalability.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/tirpc_rpc_call_scalability.c
@@ -80,7 +80,7 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int i, rthcreate;
+	int i;
 	long j;
 	int threadNb = atoi((char *)argc[3]);
 	int curThd = 1;
@@ -140,7 +140,7 @@ int main(int argn, char *argc[])
 			    (&pThreadArray[j], &thread_attr, my_thread_process,
 			     (void *)j) != 0) {
 				fprintf(stderr,
-					"pthread_create error for thread %d\n",
+					"pthread_create error for thread %ld\n",
 					j);
 				printf("1\n");
 				exit(1);
@@ -152,7 +152,7 @@ int main(int argn, char *argc[])
 			if ((pthread_t *) pThreadArray[j] != NULL) {
 				(void)pthread_join(pThreadArray[j], &ret);
 			} else {
-				fprintf(stderr, "pThread Join Err : %d\n", j);
+				fprintf(stderr, "pThread Join Err : %ld\n", j);
 			}
 		}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/tirpc_rpc_reg_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/tirpc_rpc_reg_mt.c
index ddfa3c3..a30165a 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/tirpc_rpc_reg_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/tirpc_rpc_reg_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -58,7 +59,7 @@ void *my_thread_process(void *arg)
 	int i;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	for (i = 0; i < callNb; i++) {
@@ -92,7 +93,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	//Thread declaration
 	pthread_t *pThreadArray;
 	void *ret;
@@ -114,8 +115,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -138,7 +139,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_complex.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_complex.c
index ab05940..6d927ca 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_complex.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_complex.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -64,17 +65,15 @@ bool_t xdr_datas(XDR * pt_xdr, struct datas *pt)
 		xdr_double(pt_xdr, &(pt->b)) && xdr_double(pt_xdr, &(pt->c)));
 }
 
-double getRand()
+double getRand(void)
 {
 	return (drand48() * 1000);
 }
 
 void *my_thread_process(void *arg)
 {
-	int i;
 	CLIENT *clnt = NULL;
 	struct datas vars;
-	static double result = 0;
 	struct timeval total_timeout;
 
 	total_timeout.tv_sec = 1;
@@ -84,11 +83,11 @@ void *my_thread_process(void *arg)
 
 	if (clnt == NULL) {
 		printf("5\n");
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 
 	vars.a = getRand();
@@ -126,7 +125,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 0;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -151,8 +150,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -175,7 +174,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_dataint.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_dataint.c
index c950f2e..a41db12 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_dataint.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_dataint.c
@@ -51,7 +51,6 @@ int main(int argn, char *argc[])
 	int progNum = atoi(argc[2]);
 	char nettype[16] = "visible";
 	CLIENT *clnt = NULL;
-	enum clnt_stat rslt;
 	struct timeval total_timeout;
 	//Sent variables
 	int intSnd;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_mt.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_mt.c
index 5f75007..5bdf5a6 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_mt.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_mt.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <time.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <tirpc/rpc/rpc.h>
 #include <tirpc/rpc/types.h>
@@ -56,7 +57,7 @@ void *my_thread_process(void *arg)
 	int i;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 	//Initialisation
 	total_timeout.tv_sec = 1;
@@ -68,7 +69,7 @@ void *my_thread_process(void *arg)
 	if (clnt == NULL) {
 		clnt_pcreateerror("ERR");
 		thread_array_result[atoi(arg)] = 0;
-		pthread_exit(5);
+		pthread_exit((void*)5l);
 	}
 	//Then call remote procedure
 	for (i = 0; i < callNb; i++) {
@@ -97,7 +98,7 @@ int main(int argn, char *argc[])
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int threadNb = atoi(argc[3]);
-	int i;
+	long i;
 	pthread_t *pThreadArray;
 	void *ret;
 
@@ -120,8 +121,8 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create thread %d\n", i);
-		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, i)
+			fprintf(stderr, "Try to create thread %ld\n", i);
+		if (pthread_create(&pThreadArray[i], NULL, my_thread_process, (void*)i)
 		    < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
@@ -144,7 +145,7 @@ int main(int argn, char *argc[])
 
 	if (run_mode == 1) {
 		for (i = 0; i < threadNb; i++) {
-			fprintf(stderr, "Result[%d]=%d\n", i,
+			fprintf(stderr, "Result[%ld]=%d\n", i,
 				thread_array_result[i]);
 		}
 	}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_scalability.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_scalability.c
index 895b215..12c65c6 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_scalability.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/tirpc_toplevel_clnt_call_scalability.c
@@ -57,7 +57,7 @@ void *my_thread_process(void *arg)
 	struct timeval total_timeout;
 
 	if (run_mode == 1) {
-		fprintf(stderr, "Thread %d\n", atoi(arg));
+		fprintf(stderr, "Thread %ld\n", (long)arg);
 	}
 	//Initialisation
 	total_timeout.tv_sec = 1;
@@ -95,7 +95,7 @@ int main(int argn, char *argc[])
 	//0 : launch by shell script as test case, only one printf -> result status
 	run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
-	int i, rthcreate;
+	int i;
 	long j;
 	int threadNb = atoi((char *)argc[3]);
 	int curThd = 1;
@@ -155,7 +155,7 @@ int main(int argn, char *argc[])
 			    (&pThreadArray[j], &thread_attr, my_thread_process,
 			     (void *)j) != 0) {
 				fprintf(stderr,
-					"pthread_create error for thread %d\n",
+					"pthread_create error for thread %ld\n",
 					j);
 				printf("1\n");
 				exit(1);
@@ -167,7 +167,7 @@ int main(int argn, char *argc[])
 			if ((pthread_t *) pThreadArray[j] != NULL) {
 				(void)pthread_join(pThreadArray[j], &ret);
 			} else {
-				fprintf(stderr, "pThread Join Err : %d\n", j);
+				fprintf(stderr, "pThread Join Err : %ld\n", j);
 			}
 		}
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create/tirpc_clnt_create.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create/tirpc_clnt_create.c
index 7d7905b..25e9c93 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create/tirpc_clnt_create.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create/tirpc_clnt_create.c
@@ -58,12 +58,11 @@ int main(int argn, char *argc[])
 		printf("Server : %s\n", argc[1]);
 		printf("Server # %d\n", progNum);
 		printf("Net : %s\n", nettype);
-		printf("Client : %d\n", (CLIENT *) clnt);
 	}
 	clnt = clnt_create(argc[1], progNum, VERSNUM, nettype);
 
 	if (run_mode == 1) {
-		printf("Client after creation : %d\n", (CLIENT *) clnt);
+		printf("Client after creation : %p\n", clnt);
 	}
 
 	test_status = ((CLIENT *) clnt != NULL) ? 0 : 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create_timed/tirpc_clnt_create_timed.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create_timed/tirpc_clnt_create_timed.c
index 877bf5b..658b58b 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create_timed/tirpc_clnt_create_timed.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create_timed/tirpc_clnt_create_timed.c
@@ -60,7 +60,6 @@ int main(int argn, char *argc[])
 		printf("Server : %s\n", argc[1]);
 		printf("Server # %d\n", progNum);
 		printf("Net : %s\n", nettype);
-		printf("Client : %d\n", (CLIENT *) clnt);
 	}
 
 	tv.tv_sec = 1;
@@ -69,7 +68,7 @@ int main(int argn, char *argc[])
 	clnt = clnt_create_timed(argc[1], progNum, VERSNUM, nettype, &tv);
 
 	if (run_mode == 1) {
-		printf("Client after creation : %d\n", (CLIENT *) clnt);
+		printf("Client after creation : %p\n", clnt);
 	}
 
 	test_status = ((CLIENT *) clnt != NULL) ? 0 : 1;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_destroy/tirpc_clnt_destroy.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_destroy/tirpc_clnt_destroy.c
index 330e4dc..ac1fd11 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_destroy/tirpc_clnt_destroy.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_destroy/tirpc_clnt_destroy.c
@@ -40,8 +40,6 @@
 #define PROCNUM 1
 #define VERSNUM 1
 
-static void exm_proc();
-
 int main(int argn, char *argc[])
 {
 	//Program parameters : argc[1] : HostName or Host IP
@@ -61,7 +59,6 @@ int main(int argn, char *argc[])
 		printf("Server : %s\n", argc[1]);
 		printf("Server # %d\n", progNum);
 		printf("Net : %s\n", nettype);
-		printf("Client : %d\n", (CLIENT *) clnt);
 	}
 	//first create client
 	clnt = clnt_create(argc[1], progNum, VERSNUM, nettype);
@@ -78,8 +75,3 @@ int main(int argn, char *argc[])
 
 	return test_status;
 }
-
-static void exm_proc(struct svc_req *rqstp, SVCXPRT * transp)
-{
-	//Nothing to do
-}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_svc_destroy/tirpc_svc_destroy.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_svc_destroy/tirpc_svc_destroy.c
index a327ab4..8ba5f7b 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_svc_destroy/tirpc_svc_destroy.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_suite/tirpc/tirpc_toplevel_svc_destroy/tirpc_svc_destroy.c
@@ -54,7 +54,6 @@ int main(int argn, char *argc[])
 	int run_mode = 0;
 	int test_status = 1;	//Default test result set to FAILED
 	int progNum = atoi(argc[2]);
-	char nettype[16] = "visible";
 	SVCXPRT *svcr;
 	struct netconfig *nconf;
 
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_svc_1/rpc_svc_1.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_svc_1/rpc_svc_1.c
index 3dd56d7..63dd2f1 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_svc_1/rpc_svc_1.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_svc_1/rpc_svc_1.c
@@ -60,9 +60,6 @@ union u_argument {
 //****************************************//
 int main(int argn, char *argc[])
 {
-	//Server parameter is : argc[1] : Server Program Number
-	//                                          others arguments depend on server program
-	int run_mode = 1;
 	int progNum = atoi(argc[1]);
 	SVCXPRT *transpTCP = NULL;
 	SVCXPRT *transpUDP = NULL;
@@ -77,11 +74,6 @@ int main(int argn, char *argc[])
 	transpTCP = svctcp_create(RPC_ANYSOCK, 1000, 1000);
 	transpUDP = svcudp_create(RPC_ANYSOCK);
 
-	if (run_mode) {
-		printf("SVC TCP : %d\n", transpTCP);
-		printf("SVC UDP : %d\n", transpUDP);
-	}
-
 	if (!svc_register
 	    (transpTCP, progNum, VERSNUM, (void *)rcp_service, IPPROTO_TCP)) {
 		fprintf(stderr, "svc_register: error (TCP)\n");
@@ -171,7 +163,7 @@ char *svcGetargsProc(union u_argument *in, SVCXPRT * transp)
 
 	if ((svc_getargs(transp, (xdrproc_t) xdr_int, (char *)&args)) == FALSE) {
 		svcerr_decode(transp);
-		return;
+		return NULL;
 	}
 	//printf("%s\n", result);
 	return (char *)&result;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_svc_2/rpc_svc_2.c b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_svc_2/rpc_svc_2.c
index 7a7c6a1..877db2a 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_svc_2/rpc_svc_2.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/rpc_svc_2/rpc_svc_2.c
@@ -72,8 +72,8 @@ int main(int argn, char *argc[])
 	transpUDP = svcudp_create(RPC_ANYSOCK);
 
 	if (run_mode) {
-		printf("SVC TCP : %d\n", transpTCP);
-		printf("SVC UDP : %d\n", transpUDP);
+		printf("SVC TCP : %p\n", transpTCP);
+		printf("SVC UDP : %p\n", transpUDP);
 	}
 
 	if (!svc_register
@@ -116,7 +116,6 @@ void rcp_service(register struct svc_req *rqstp, register SVCXPRT * transp)
 	xdrproc_t xdr_argument;
 	xdrproc_t xdr_result;
 	char *(*proc) (struct datas *, SVCXPRT *);
-	enum auth_stat why;
 
 	switch (rqstp->rq_proc) {
 	case CALCPROC:
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_11/tirpc_svc_11.c b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_11/tirpc_svc_11.c
index d71367b..d3b9388 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_11/tirpc_svc_11.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_11/tirpc_svc_11.c
@@ -50,12 +50,9 @@ int main(int argn, char *argc[])
 {
 	//Server parameter is : argc[1] : Server Program Number
 	//                                          others arguments depend on server program
-	int run_mode = 0;
 	int progNum = atoi(argc[1]);
-	bool_t rslt;
 	SVCXPRT *transp = NULL;
 	struct netconfig *nconf;
-	struct netbuf svcaddr;
 
 	//Initialization
 	svc_unreg(progNum, VERSNUM);
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_3/tirpc_svc_3.c b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_3/tirpc_svc_3.c
index e0dc94f..fd3787f 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_3/tirpc_svc_3.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_3/tirpc_svc_3.c
@@ -45,13 +45,7 @@ static void exm_proc();
 //****************************************//
 int main(int argn, char *argc[])
 {
-	//Server parameter is : argc[1] : Server Program Number
-	//                                          others arguments depend on server program
-	int run_mode = 0;
 	int progNum = atoi(argc[1]);
-	//char *simplePing_proc();
-	bool_t rslt;
-	//char nettype[16] = "visible";
 
 	SVCXPRT *transp;
 	struct netconfig *nconf;
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_6/tirpc_svc_6.c b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_6/tirpc_svc_6.c
index bd3b60a..7ddd83d 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_6/tirpc_svc_6.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_6/tirpc_svc_6.c
@@ -33,6 +33,7 @@
 #include <tirpc/rpc/xdr.h>
 #include <tirpc/rpc/svc.h>
 #include <errno.h>
+#include <pthread.h>
 #include <netinet/in.h>
 
 //Standard define
@@ -55,7 +56,7 @@ void *server_thread_process(void *arg)
 		printf("Server Nb : %d\n", progNum + atoi(arg));
 	}
 
-	svc_unreg(progNum + atoi(arg), VERSNUM);
+	svc_unreg(progNum + (long)arg, VERSNUM);
 
 	err = svc_create(exm_proc, progNum + atoi(arg), VERSNUM, "VISIBLE");
 
@@ -82,7 +83,7 @@ int main(int argn, char *argc[])
 	//                                          others arguments depend on server program
 	run_mode = 0;
 	int threadNb = atoi(argc[2]);
-	int i;
+	long i;
 	//Thread declaration
 	pthread_t *pThreadArray;
 	void *ret;
@@ -92,9 +93,9 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create Thread Server %d\n", i);
+			fprintf(stderr, "Try to create Thread Server %ld\n", i);
 		if (pthread_create
-		    (&pThreadArray[i], NULL, server_thread_process, i) < 0) {
+		    (&pThreadArray[i], NULL, server_thread_process, (void*)i) < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
 		}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_7/tirpc_svc_7.c b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_7/tirpc_svc_7.c
index bb31ecd..0399ddd 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_7/tirpc_svc_7.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_7/tirpc_svc_7.c
@@ -59,14 +59,9 @@ union u_argument {
 //****************************************//
 int main(int argn, char *argc[])
 {
-	//Server parameter is : argc[1] : Server Program Number
-	//                                          others arguments depend on server program
-	int run_mode = 0;
 	int progNum = atoi(argc[1]);
-	bool_t rslt;
 	SVCXPRT *transp = NULL;
 	struct netconfig *nconf;
-	struct netbuf svcaddr;
 
 	//Initialization
 	svc_unreg(progNum, VERSNUM);
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_8/tirpc_svc_8.c b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_8/tirpc_svc_8.c
index c736a1e..973a3d9 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_8/tirpc_svc_8.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_8/tirpc_svc_8.c
@@ -26,6 +26,7 @@
 */
 
 #include <stdio.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <sys/socket.h>
 #include <tirpc/rpc/rpc.h>
@@ -37,7 +38,7 @@
 
 //Standard define
 #define VERSNUM 1
-#define PINGPROC    	1
+#define PINGPROC	1
 #define PROGSYSERROR	10
 #define PROGAUTHERROR	100
 
@@ -49,10 +50,11 @@ void *server_thread_process(void *arg)
 {
 	//Server process in a thread
 	int err = 0;
+	int i = (long)arg;
 
 	if (run_mode == 1) {
-		printf("Server #%d launched\n", atoi(arg));
-		printf("Server Nb : %d\n", progNum + atoi(arg));
+		printf("Server #%d launched\n", i);
+		printf("Server Nb : %d\n", progNum + i);
 	}
 
 	svc_unreg(progNum + atoi(arg), VERSNUM);
@@ -82,7 +84,7 @@ int main(int argn, char *argc[])
 	//                                          others arguments depend on server program
 	run_mode = 0;
 	int threadNb = atoi(argc[2]);
-	int i;
+	long i;
 	//Thread declaration
 	pthread_t *pThreadArray;
 	void *ret;
@@ -92,9 +94,9 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create Thread Server %d\n", i);
+			fprintf(stderr, "Try to create Thread Server %ld\n", i);
 		if (pthread_create
-		    (&pThreadArray[i], NULL, server_thread_process, i) < 0) {
+		    (&pThreadArray[i], NULL, server_thread_process, (void*)i) < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
 		}
diff --git a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_9/tirpc_svc_9.c b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_9/tirpc_svc_9.c
index e8861b5..9ee1df4 100644
--- a/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_9/tirpc_svc_9.c
+++ b/testcases/network/rpc/rpc-tirpc/tests_pack/tirpc_svc_9/tirpc_svc_9.c
@@ -26,6 +26,7 @@
 */
 
 #include <stdio.h>
+#include <pthread.h>
 #include <tirpc/netconfig.h>
 #include <sys/socket.h>
 #include <tirpc/rpc/rpc.h>
@@ -62,10 +63,11 @@ void *server_thread_process(void *arg)
 {
 	//Server process in a thread
 	int err = 0;
+	int i = (long)arg;
 
 	if (run_mode == 1) {
-		printf("Server #%d launched\n", atoi(arg));
-		printf("Server Nb : %d\n", progNum + atoi(arg));
+		printf("Server #%d launched\n", i);
+		printf("Server Nb : %d\n", progNum + i);
 	}
 
 	svc_unreg(progNum + atoi(arg), VERSNUM);
@@ -95,7 +97,7 @@ int main(int argn, char *argc[])
 	//                                          others arguments depend on server program
 	run_mode = 0;
 	int threadNb = atoi(argc[2]);
-	int i;
+	long i;
 	//Thread declaration
 	pthread_t *pThreadArray;
 	void *ret;
@@ -105,9 +107,9 @@ int main(int argn, char *argc[])
 	pThreadArray = (pthread_t *) malloc(threadNb * sizeof(pthread_t));
 	for (i = 0; i < threadNb; i++) {
 		if (run_mode == 1)
-			fprintf(stderr, "Try to create Thread Server %d\n", i);
+			fprintf(stderr, "Try to create Thread Server %ld\n", i);
 		if (pthread_create
-		    (&pThreadArray[i], NULL, server_thread_process, i) < 0) {
+		    (&pThreadArray[i], NULL, server_thread_process, (void*)i) < 0) {
 			fprintf(stderr, "pthread_create error for thread 1\n");
 			exit(1);
 		}
-- 
1.8.5.5

