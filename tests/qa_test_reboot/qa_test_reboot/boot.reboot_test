#! /bin/sh
#
# Copyright (c) 2001-2002 SuSE Linux AG, Nuernberg, Germany.
# All rights reserved.
# Author:  Oliver Ries <ories@suse.de>, 2011
#
# /etc/init.d/boot.localnet
#
### BEGIN INIT INFO
# Provides:          boot.reboot_test
# Required-Start:    $sshd $network
# Required-Stop:     
# Default-Start:     3 5 
# Default-Stop:	     0 1 2 6	
# Short-Description: will constantly reboot your system, use with care!
# Description:       will constantly reboot your system, use with care!
### END INIT INFO

. /etc/rc.status
. /etc/sysconfig/cron

rc_reset

it_file=/tmp/reboot_iterations
it_default=200
iterations=$it_default
sleep_t=1
token=0

trap "finish 1" INT 

function finish {
	echo done
	#insserv -r $0
	rm $it_file >/dev/null 2>&1 
	exit $1
}

function msg {
	# static tmp file - FIX ME
	echo $@
	# replace with netcat once figured out how to keep listener running
	ssh -o StrictHostKeyChecking=no root@$ROLE_0_IP "echo \"$@\" >> /tmp/$token.log" 
}

function update_server {
	# static tmp file - FIX ME
	ssh -o StrictHostKeyChecking=no root@$ROLE_0_IP "echo  iterations=$iterations > /tmp/$token.prg" 
}


function get_session_token {
	ssh -o StrictHostKeyChecking=no root@$ROLE_0_IP reboot_token
#	echo 12345
}

function init_file {
	msg "init file: $token $iterations"
	echo -e "token=$server_token\niterations=$iterations" > $it_file
	token=$server_token
}

# get the current session from the server
server_token=$(get_session_token)

# server returned -1 as token
if (( server_token == -1 ));then
	# ohoh, no token available
	msg "Server token invalid (-1), aborting"
	finish 22
fi
	

# initialization / status files
if [ -f "$it_file" ]; then
	# see how many cycles are left
	# will populate $token and $iterations
	. "$it_file"
	msg "file found: $token $iterations"
else
	# file doesn't exist, so let's get the current token from the server and use
	# the default number of iterations
	msg "file not found"
	init_file
fi

if (( token != server_token )); then
	# we have been aborted before and need to start over
	msg "token mismatch - aborting - pls remove $it_file"
	finish 1
fi


case "$1" in
  start)
	# system came back up
	sleep $sleep_t

	if (( token == server_token ));then
		let iterations--;
		init_file
		msg "token match - rebooting with $iterations cycles left"
	else
		msg "token mismatch during execution - aborting with $iterations cycles left"
		finish 1
	 fi

	# check if we are done
	if (( $iterations <=0 )); then
		# made it through all iterations
		msg "0 iterations left - stoping the test"
		finish 0
	fi

	# update the server
	update_server	

	msg "token match - rebooting with $iterations cycles left"

	#reboot - DEBUG
	$0 start # remove me and add reboot code FIXME
	
	;;
    stop|restart)
        # skip / nothing to do
	;;
    status)
	# assume we have been run
	rc_reset
	rc_status -v
	;;
    *)
	echo "Usage: $0 {start|stop|status|restart}"
	exit 1
	;;
esac

rc_exit
	
