#!/bin/bash
# ****************************************************************************
# Copyright Â© 2013 Unpublished Work of SUSE, Inc. All Rights Reserved.
#
# THIS IS AN UNPUBLISHED WORK OF SUSE, INC.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
#
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************

BACKUP=/var/tmp/bind_backup.tar.gz
TESTCONFBASE=/usr/share/qa/qa_test_bind/data
BINDCTRL=/etc/init.d/named
PID_FILE=/var/run/named/named.pid
DATADIR=/var/lib/named
OSVERSION=`cat /etc/issue | cut -d" " -sf7`
CTLSTDWAIT=10

RES_OK=0
RES_FAIL=1
RES_FAIL_INT=11
RES_FAIL_SETUP=11
RES_SKIPPED=22

_HAVE_BACKUP=false

if [ ! -d "$DATADIR" ]; then DATADIR="/var/named"; fi
if [ ! -d "$DATADIR" ]; then exit $RES_FAIL_INT; fi

backup_config(){
	local BACKUP_PATHS
	if [ x$OSVERSION == 'x10' ]; then
		BACKUP_PATHS="/etc/named.conf /etc/named.conf.include /etc/named.d /etc/sysconfig/named $DATADIR"
	else
		BACKUP_PATHS="/etc/named.conf /etc/named.d /etc/sysconfig/named $DATADIR"
	fi

	tar -czf $BACKUP --one-file-system -C / --exclude=$DATADIR/proc $BACKUP_PATHS 2> /dev/null || exit $RES_FAIL_INT
	_HAVE_BACKUP=true
}

install_config(){
   test -z "$1" && exit $RES_FAIL_INT

   TESTCONFDIR="$TESTCONFBASE/$1"
   test -d "$TESTCONFDIR" || exit $RES_FAIL_INT

   sed "s#__DATADIR__#$DATADIR#" $TESTCONFDIR/named.conf > /etc/named.conf
   cp $TESTCONFDIR/sysconfig /etc/sysconfig/named
   cp -r $TESTCONFDIR/data/* $DATADIR
}

restore_config(){
	$_HAVE_BACKUP || return 0

	test -f $BACKUP
	tar -xzf $BACKUP -C / 2> /dev/null || exit $RES_FAIL_INT
	rm $BACKUP
}

restart_bind() {
   $BINDCTRL restart > /dev/null 2>&1
}

std_setup() {
	backup_config
	install_config $TEST_DATA

	$BINDCTRL restart

	sleep 10
}

# @FUNCTION: bctl_ww
# @DESCRIPTION:
# bind ctl with wait
bctl_ww() {
	$BINDCTRL $1
	sleep $CTLSTDWAIT
}

main() {
	if ! `type setup 2>&1 | grep -q 'is a function'`; then
		if [ -z "${TEST_DATA:-}" ] ; then
			echo "ERROR: missing setup() or TEST_DATA" >&2
			exit $RES_FAIL_INT
		fi
		setup() {
			std_setup
		}
	fi

	if ! `type cleanup 2>&1 | grep -q 'is a function'`; then
		cleanup() {
			restore_config
		}
	fi

	while getopts x name ; do
		case $name in
			x) set -x;;
			?) echo "invalid arg"; exit $RES_FAIL_INT;;
		esac
	done

	shift $((OPTIND - 1))

	if [ $# -eq 0 ]; then
		trap cleanup EXIT
		setup
		rc=$?
		[ ! $rc -eq 0 ] && exit $rc
		test_
		exit $?
	else
		$1
	fi
}

# vim: syntax=sh
