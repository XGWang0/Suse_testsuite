#! /bin/sh
# Copyright (c) 1997-2000 SuSE GmbH Nuernberg, Germany.  All rights reserved.
#
# Author: Carsten Hoeger <choeger@suse.de>, 1997-2001
#
# /etc/init.d/ldap
#
### BEGIN INIT INFO
# Provides:       slurpd
# Required-Start: $remote_fs ldap
# Required-Stop:
# Default-Start:  3 5
# Default-Stop:
# Description:    start the OpenLDAP2 Server
### END INIT INFO


SLURPD_BIN=/usr/lib/openldap/slurpd
test -x $SLURPD_BIN || exit 5

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num><num>
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status
. /etc/rc.status

# First reset status of this service
rc_reset

# Return values acc. to LSB for all commands but status:
# 0 - success
# 1 - generic or unspecified error
# 2 - invalid or excess argument(s)
# 3 - unimplemented feature (e.g. "reload")
# 4 - insufficient privilege
# 5 - program is not installed
# 6 - program is not configured
# 7 - program is not running
# 
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signalling is not supported) are
# considered a success.

case "$1" in
    start)
	echo -n "Starting slurpd"
	/sbin/startproc $SLURPD_BIN -t /var/lib/slurpd
	# Remember status and be verbose
	rc_status -v
        ;;
    stop)
	echo -n "Shutting down slurpd"
	/sbin/killproc -TERM $SLURPD_BIN
	# Remember status and be verbose
	rc_status -v
        ;;
    try-restart)
	## Stop the service and if this succeeds (i.e. the 
	## service was running before), start it again.
	## Note: try-restart is not (yet) part of LSB (as of 0.7.5)
	$0 status >/dev/null &&  $0 restart

	# Remember status and be quiet
	rc_status
	;;
    restart)
	## Stop the service and regardless of whether it was
	## running or not, start it again.
	$0 stop
	# sometimes slapd needs some time to stop
	sleep 3
	$0 start

	# Remember status and be quiet
	rc_status
        ;;
    force-reload)
	## Signal the daemon to reload its config. Most daemons
	## do this on signal 1 (SIGHUP).
	## If it does not support it, restart.

	#echo -n "Reload ldap replication daemon"
	# if it supports it:
	#killproc -HUP $SLAPD_BIN
	#touch /var/run/FOO.pid
	#rc_status -v

	## Otherwise:
	$0 stop; sleep 3;  $0 start
	rc_status
	;;
    reload)
        echo -n "Reload ldap replication daemon"

	# If it supports signalling:
	#killproc -HUP $SLAPD_BIN
	#touch /var/run/FOO.pid
	#rc_status -v
	
	## Otherwise if it does not support reload:
	rc_failed 3
	rc_status -v
        ;;
    status)
        echo -n "Checking for service slurpd: "
	## Check status with checkproc(8), if process is running
	## checkproc will return with exit status 0.

	# Status has a slightly different for the status command:
	# 0 - service running
	# 1 - service dead, but /var/run/  pid  file exists
	# 2 - service dead, but /var/lock/ lock file exists
	# 3 - service not running

	# NOTE: checkproc returns LSB compliant status values.

	checkproc  $SLURPD_BIN
	rc_status -v

        ;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload}"
        exit 1
esac
rc_exit
