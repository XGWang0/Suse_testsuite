#! /bin/sh
# Copyright (c) 1995-2001 SuSE GmbH Nuernberg, Germany.
#
# Author:   Burchard Steinbild <bs@suse.de>
#           Werner Fink <werner@suse.de>
#
# /etc/init.d/kbd
#
#   and symbolic its link
#
# /sbin/rckbd
#
### BEGIN INIT INFO
# Provides:       kbd
# Required-Start: $remote_fs fbset
# Required-Stop:
# Default-Start:  1 2 3 5 S
# Default-Stop:
# Description:    Keyboard settings (don't disable!)
### END INIT INFO

. /etc/rc.status
. /etc/sysconfig/console
. /etc/sysconfig/keyboard

MACHINE=`/bin/uname -m 2> /dev/null`
if [ "$MACHINE" = "sparc" -o "$MACHINE" = "sparc64" ]; then 
   # Test if we have a serial console. 
   (test -c /dev/tty1 && > /dev/tty1 ) > /dev/null 2>&1 || exit 0
fi

# The variable NON_SUSE_KERNEL determines whether we need to chvt 
# to a console before some console settings apply.
# We have no magic to find out about this (at boot time), so we 
# leave it to the user to read this comment and put NON_SUSE_KERNEL="yes"
# into /etc/sysconfig/console

KBDBASE="/usr/share/kbd"

KTABLE=${KEYTABLE%.map*}
KTABLE=${KTABLE##*/}
#
# first search the wanted keytable.
#
if [ $MACHINE = ppc -o $MACHINE = ppc64 ]; then
	test -f /proc/cpuinfo || mount -n -t proc proc /proc 2>/dev/null
	while read line; do
	       case "$line" in
		  *MacRISC*)	MACHINE="mac";;
		  *CHRP*)  	MACHINE="chrp";;
		  *PReP*)  	MACHINE="prep" ;;
		  *iSeries*)    exit 0 ;;
		esac
	done < /proc/cpuinfo
fi

case "$MACHINE" in
  i?86|ia64|alpha|prep|chrp|ppc64) KDBLIB="${KBDBASE}/keymaps/i386/*/"     ;;
  sparc*)    
     case "$KTABLE" in
        sun*) KDBLIB="${KBDBASE}/keymaps/sun/"        ;;
        *)    KDBLIB="${KBDBASE}/keymaps/i386/*/"     ;;
     esac
     ;;
  mac)       KDBLIB="${KBDBASE}/keymaps/mac/all/" ;;
  *)         echo "No available keymaps for machine $MACHINE found"; exit 1
     ;;
esac
case "${PREVLEVEL}${RUNLEVEL}" in
	N1|NS)
	test -f /etc/sysconfig/hotplug &&  . /etc/sysconfig/hotplug && test "$HOTPLUG_START_USB" = "yes" && {
	test -f /proc/cpuinfo || mount -n -t proc proc /proc 2>/dev/null
	test -d /proc/bus/usb || modprobe usbcore >/dev/null 2>&1
	mount usbdevfs >/dev/null 2>&1
	for i in $HOTPLUG_USB_HOSTCONTROLLER_LIST ;do echo -n $i" " ;modprobe $i >/dev/null 2>&1 ;done;echo
	sleep 3
	grep ^I: /proc/bus/usb/devices | grep HID && for i in input hid keybdev;do modprobe $i >/dev/null 2>&1 ;done
	}
	;;
esac

KEYMAP=""
if test -e /$KEYTABLE ; then
    KEYMAP=$KEYTABLE
else
    KEYTABLE=$KTABLE
    K="${KDBLIB}${KEYTABLE}"
    case "$KEYTABLE" in
	*.gz)  KDBPATH="${K}" ;;
	*.map) KDBPATH="${K} ${K}.gz" ;;
	*)     KDBPATH="${K} ${K}.gz ${K}.map.gz ${K}.map" ;;
    esac
    for K in ${KDBPATH} ; do	
	test -e "$K" || continue
	test -n "$KEYMAP" && KEYMAP="$KEYMAP $K" || KEYMAP=$K
    done
fi

rc_reset
case "$1" in
    start|restart|reload)
	if test -z "$KEYTABLE"; then
	    echo "No keyboard map to load"
	else
	    if test -z "$KEYMAP" ; then
		if test -r /etc/defkeymap.map ; then
		    echo "Can not find a keymap for ${KEYTABLE}, trying fallback."
		    KEYMAP=/etc/defkeymap.map
		else
		    echo "Can not find a keymap for ${KEYTABLE}, Exit."
		    rc_failed
		fi
	    else
		if test ! -e "$KEYMAP" ; then
		    echo "Found more than one keymap ${KEYTABLE}"
		    KEYMAP=$K
		    echo "Using $KEYMAP."
		    echo "If you want another one, please add complete path to"
		    echo "KEYTABLE in /etc/sysconfig/keyboard."
		fi
	    fi
	    rc_status && retmsg="`loadkeys $KEYMAP 2>&1`"
	    if test $? -eq 0 && ( > /var/run/keymap ) > /dev/null 2>&1 ; then
		echo "$KEYMAP"    > /var/run/keymap
	    else
		case "$RUNLEVEL" in
		    S|N|1|\#) true ;;
		    *) rc_failed ;;
		esac
	    fi
	    echo "Loading keymap ${retmsg#Loading*${KBDBASE}/keymaps/*/}"
	    rc_status -v1 -r
	fi

	# Load compose tables
	case "$RUNLEVEL" in
	    S|N|1|\#) COMPOSETABLE="" ;;
	esac
	if test ! -z "$COMPOSETABLE"; then
		unset COMPOSELOADED COMPOSECLEAR
		for name in $COMPOSETABLE; do
			# Test for compose clear flag
			if test "$name" = "-c" -o "$name" = "clear"; then
				COMPOSECLEAR=-c
				continue
			fi
			# Handle the first table differently ...
			if test -z "$COMPOSELOADED"; then
				echo -n "Loading compose table $name"
				loadkeys $COMPOSECLEAR compose.$name >/dev/null 2>&1
				rc_check
				if test $name = clear; then rc_reset; fi
				COMPOSELOADED=1
			else
				echo -n " $name"
				loadkeys compose.$name >/dev/null 2>&1
				rc_check
			fi
		done
		if test ! -z "$COMPOSELOADED"; then 
			rc_status -v -r
		fi
	fi
	
	case "$RUNLEVEL" in
	    S|N|1|\#) true ;;
	    *)
		dumpkeys=yes
		if type -p cmp > /dev/null 2>&1 && \
		   dumpkeys | cmp -s /etc/defkeymap.map
		then
		   dumpkeys=no
		fi
		if test "$dumpkeys" = "yes" ; then
		    ( dumpkeys > /etc/defkeymap.map ) > /dev/null 2>&1
		fi
	esac

	# setfont
	if test -z "$KBD_TTY"; then
		KBD_TTY="tty1 tty2 tty3 tty4 tty5 tty6 tty7 tty8 tty9 tty10 tty11 tty12 tty13 tty14 tty15 tty16 tty17 tty18 tty19 tty20 tty21 tty22 tty23 tty24"
	fi
	if test -d ${KBDBASE}/consolefonts -a \
		-n "$CONSOLE_FONT" -a "$CONSOLE_FONT" != "YAST_ASK"
	then
	    if test -x /usr/bin/setfont ; then
		echo Loading console font $CONSOLE_FONT
		FGCONS=`/usr/bin/fgconsole`
		for i in $KBD_TTY; do
			if test -w /dev/$i; then
				# The chvt is not needed for SuSE kernels
				test "X$NON_SUSE_KERNEL" = "Xyes" && chvt ${i#tty}
				/usr/bin/setfont -c /dev/$i $CONSOLE_FONT
				rc_status
			fi
		done
		if test "X$NON_SUSE_KERNEL" = "Xyes" ; then
			chvt $FGCONS
		fi
		rc_status -v1 -r
	    fi
	    # unimap
	    if test -n "$CONSOLE_UNICODEMAP" -a \
		    -x /usr/bin/setfont
	    then
		echo Loading unimap $CONSOLE_UNICODEMAP
		for i in $KBD_TTY; do
			if test -w /dev/$i; then
				# The chvt is not needed for SuSE kernels
				test "X$NON_SUSE_KERNEL" = "Xyes" && chvt ${i#tty}
				/usr/bin/setfont -c /dev/$i -u $CONSOLE_UNICODEMAP
				rc_status
			fi
		done
		if test "X$NON_SUSE_KERNEL" = "Xyes" ; then
			chvt $FGCONS
		fi
		rc_status -v1 -r
	    fi
	    # screenmap
	    if test -n "$CONSOLE_SCREENMAP" -a \
		    -x /usr/bin/setfont
	    then
		echo Loading screenmap $CONSOLE_SCREENMAP
		for i in $KBD_TTY; do
			if test -w /dev/$i; then
				# The chvt is not needed for SuSE kernels
				test "X$NON_SUSE_KERNEL" = "Xyes" && chvt ${i#tty}
				/usr/bin/setfont -c /dev/$i -m $CONSOLE_SCREENMAP
				rc_status
			fi
		done
		if test "X$NON_SUSE_KERNEL" = "Xyes" ; then
			chvt $FGCONS
		fi
		rc_status -v1 -r
	    fi
	    # console magic init string
	    if test -n "$CONSOLE_MAGIC" -a "$CONSOLE_MAGIC" != "none" ; then
		echo Setting up console ttys
		for i in $KBD_TTY; do
		    if test -w /dev/$i; then
			echo -en "\033$CONSOLE_MAGIC" > /dev/$i
			rc_status
		    fi
		done
		rc_status -v1 -r
	    fi
	fi

	;;
    stop)
	;;
    check|status)
	if test -r /var/run/keymap ; then
	    read current < /var/run/keymap
	    echo "Keymap $current is loaded."
	else
	    rc_failed 3
	fi
	;;
    *)
	echo "Usage: $0 {start|stop|restart|reload|status|check}"
	exit 2
	;;
esac
rc_exit
