
Revision:  WHATSTRING

*************************************************************************
This change log contains descriptions of changes (fixes & enhancements)
to Hazard that impact usage and behavior.  To be alerted to significant
matters concerning Hazard, you should frequently visit the Hazard web
page or, at least, subscribe to the "Hazard alerts" mailing list.  To do
so, see:
	http://teams1.sharepoint.hp.com/teams/Hazard_1/default.aspx
*************************************************************************

2010 Feb 08: 6.20 hpux
2010 Feb 08: 6.20 Linux
2010 Feb 08: 6.20 Solaris
2010 Feb 08: 6.20 Windows
2010 Feb 08: 6.20 Aix

+ iodisk (QXCR1001009927, Linux) : multipath command output has changed
  in SLES11 SP1. iodisk has been modified to adapt those changes.

+ idsys (QXCR1000955231, Linux) : added small changes to ensure that xfs
  testing is not done if XFS is not installed on an OS.
  
2010 Feb 01: 6.20.RC.02 hpux
2010 Feb 01: 6.20.RC.02 Linux
2010 Feb 01: 6.20.RC.02 Solaris
2010 Feb 01: 6.20.RC.02 Windows
2010 Feb 01: 6.20.RC.02 Aix

+ initdisk: (Linux) Minor changes to take care all possible cases of 
  eliminating Swap devices from the testable devices in RHEL 6.
+ diskall: Code Optimization changes to read the 'diskall_type' option 
  value correctly.
+ initdisk (QXCR1000919399, Windows) : sizeA calculation is changed 
  based on the actual disk geometry, this takes care of avoiding gdid 
  mismatch corruptions on Virtual LUNs presented to guest VMs on HPVM.
  
2010 Jan 08: 6.20.RC.01 hpux
2010 Jan 08: 6.20.RC.01 Linux
2010 Jan 08: 6.20.RC.01 Solaris
2010 Jan 08: 6.20.RC.01 Windows
2010 Jan 08: 6.20.RC.01 Aix

+ server/diskall (QXCR1000746348,hpux) : diskall process is enhanced to 
  read and verify what other diskall process across the machine wrote. 
  This behavior is made as default, option .o diskall_type=0 can be used 
  to turn off this behavior.
+ syspanic (QXCR1000959195,hpux) : option (-o crash_dump=1) is provided to 
  enable the crash dump during the syspanic. 
+ diskraw/diskall (JAGag10948) : changes are done to ensure data pattern 
  is written to disk is different between two consecutive writes.
+ diskraw/diskall/diskevery/diskfs (JAGag44870,JAGag44969 and JAGag48254) : 
  first I/O errors after open call are handled by exiting start-stop loops.
  Two new options 'cat6c' and 'cat5c' options are introduced to handle 
  EIO errors happening during the I/O operation.
+ idsys (JAGag14429, hpux) : Code optimization changes are done in idsys to 
  avoid repeated cmviewcl calls .
+ diskraw (JAGag11635) :changes are done to display the correct LBA in case 
  of count 0 corruption.
+ idsys (JAGag46249,hpux) : grep patterns in the swlist output are changed 
  in such a way that the correct names are displayed for VxVM and Fibre 
  Channel related bundles
+ server (QXCR1000976717) : server use to close all client socket connections 
  and exit with "none timed out" due to not resetting the alarm() to 0 when 
  manage_hazard start fails. This is fixed now.
+ diskres (JAGag15553) : when user has passed a value less than than 30 secs 
  to timesleepM, then minimum default value to timesleepM is set to 30 secs. 
  If user has not passed any value then default value will remain as 60 secs.
+ disksvt (JAGag09384, Linux) : When fstype is set as "reiserfs", file size 
  calculation was done incorrectly. This is fixed now. 
+ client (QXCR1000899261) : When client process exits with no devices to test. 
  Log use to report Process Timeout for the exited client gpid. This is fixed 
  now.
+ iodtc/iovm/initdisk/initvm/diskres/diskbdr/diskabrt (QXCR1000958863,Linux):
  Hazard support for KVM - (Kernel based Virtual Machine) is added.

    Note:
    The hazard test processes, diskbdr and diskres won't be supported on
    KVM as the traditional IOCTLs are not supported by the virtualization
    platform. As of now only linux guests are supported.
+ libcorr (JAGag37865) : Hazard now logs the offset of a corrupted block 
  normalized to the first block to make it handy to compare it with offsets in 
  history entries.
+ libcorr (QXCR1000784905): Logging of the first 32 bytes of good blocks in case 
  of a corruption can now be enabled using the option caall=1.
+ libcorr (QXCR1000784938): The offset header printed during the corruption 
  analysis has been made to have a single pattern, i.e

		Expected/Recv'd
		Pattern Offsets

+ server (JAGag46515): The count of pings between a client and server will be 
  restarted if the client system is unresponsive to the server's commands.
+ diskfs (JAGag00819): Added a new value to option "unlink", which allows 
  a user to unlink a file always when a short write or diskfull condition 
  has occured.  Thus the options for unlink are,
	-1 -> unlink ocassionally
         0 -> never unlink
	 1 -> unlink always ( i.e when disk full or short write occurs)
+ server (JAGag19981): Number of file/socket descriptors are now set to 
  maximum available limit in hazard server. So that more number of client 
  systems are supported. 
+ diskfs (QXCR1000965358): Enahanced diskfs to control the Percentage of 
  Writes to Reads with in a start-stop loop. User can decide what percentage 
  of the total IO (reads + writes) must be writes by using a new command line 
  option "-o writperc".

  Example: 
   -o writeperc=33
      if writeperc is given this value then diskfs will try to limit the 
      no. of writes to be 33% of the total IO, i.e. (no. of reads + no. of writes).
+ diskfs  (JAGag11343): Diskfs has been modified to update history when a
  read or write is skipped when a file truncate fails.
+ sysprobe/anycmd (JAGag15555n): One of the Hazard options "-o scale=N" has be 
  deprecated.
+ diskfs (JAGag22317, hpux) : The unnecessary FSUmount call in HP-UX diskfs has 
  been removed.
 
  This action has a consequence, such that if a prior run ends awkwardly, 
  and if -s! is used for the next run, there's a risk that for some devices 
  the first newfs/mkfs will fail. So, the user should ensure that if exitdisk 
  script is not executed at the end of a run, no Hazard file systems are left 
  mounted on the client system(s).
+ iodisk (QXCR1000960055): iodtc has been renamed to iodisk.
+ svtseek/svtfse (QXCR1000910943, windows) : svtseek and svtfse were not starting 
  on Windows 2003 itanium Boxes. This is fixed now.  
+ idsys (QXCR1000960055,windows) : "bcdedit" instruction messages are added in 
  idsys script to help user load the unsigned syspanic driver.
+ diskfs (QXCR1000955231, Linux) : Hazard now supports testing XFS filesystem 
  on RHEL6.
+ iodisk/initdisk (QXCR1000770639, Solaris): Hazard now supports iSCSI device 
  testing on Solaris platforms.


2009 November 10: 6.19.11.10 hpux
2009 November 10: 6.19.11.10 Linux
2009 November 10: 6.19.11.10 Solaris
2009 November 10: 6.19.11.10 Windows
2009 November 10: 6.19.11.10 Aix

+ diskfs/diskmount (QXCR1000899028, Aix): When JFS2 filesystem is shared 
  across Aix clients, errors were observed during mount and umount 
  operations.This has been fixed.

+ idsys-ax.sh (QXCR1000919389, Aix): Load Balancing Option is now enabled 
  for Aix clients during the ID phase has been fixed.The user can pass an 
  option, -o io_loadpolicy=round_robin|fail_over to enable load balancing 
  with the appropriate algorithm.

+ server.c (QXCR1000983476): Hazard running HA test configurations (c6, 
  c13-16) with a single client, now reports an ERROR.

+ (QXCR1000899026, Aix): Shared Device Testing between Aix 5.3 and Aix 6.1 
  is now supported.

+ diskfs (QXCR1000955224, Linux): Ext4 File System support on RHEL6 Beta (Six) 
  Release has been enabled.

+ Idsys (QXCR1000955223, Linux): Support for RHEL6 Beta (Six) Release has 
  been enabled.
  Note: 1. Testing has been done only on RHEL6 Beta (Six) Release.
        2. rieserfs file system testing is yet to be supported.

+ diskfs (QXCR1000965357, windows): Diskfs on volumes without 
  mount/unmounting in c8/c3 test configuration. A new command line option 
  "-o mountopts_no" been provided. 
  Usage:
    a)Syntax:
      -o mountopts_no="mountpoint1@sizeMB1,mountpoint2@sizeMB2...."
       Volume list is separated by "," symbol & each volume's path & its 
       size are separated using "@" symbol.
      Example:
       To test volume mounted on "e:" of size 1000 MB and "f:" of size 1000 MB
      -o mountopts_no="e:\\@1000,f:\\@2000" 

    b) If the following option is chosen Hazard tests all the available volumes.
      Syntax:
      -o mountopts_no="all"

+ diskraw (QXCR1000918292, hpux): btags support has been provided for async 
  I/O operation. User can pass the -o btags=1 for async I/O operation and 
  view the block tag incase of corruption.

+ diskraw (QXCR10000918302, hpux): Different types of async test cases has 
  been implemented to test the async driver's I/O operation.
     1.User can mention the number of async blocks or async write requests 
       to be written on async driver during a write operation. Number of 
       async blocks to be written per single write, can be passed using the 
       option '-o asyncblocks'. Number of async write requests per single 
       write, can be passed using the option -o asyncrequests.
     2.Async read operation is introduced test the async drivers read 
       operation capability. By passing -o async=2 one can stress the 
       async driver's read operation.

+ initdisk/scandisk( QXCR1000939285, hpux) : On HP-UX 11.31 INIT and SCAN 
  phase scripts are optimised to improve the performance in test rings with 
  large luns. Also, a new option '-o path_cnt' is introduced to report the 
  number of paths for each LUN .
  Usage:
          -o path_cnt=1   #Report the number of paths for each LUN.
          -o path_cnt=0   #Don't report the number of paths to each LUN.

2009 September 30: 6.19.09.30 hpux
2009 September 30: 6.19.09.30 Linux
2009 September 30: 6.19.09.30 Solaris
2009 September 30: 6.19.09.30 Windows
2009 September 30: 6.19.09.30 Aix

+ initdisk (QXCR1000960648, Linux): Hazard overwrites /root partition in 
  case of SAN boot disk in SLES10,this has been fixed.

+ idsys(QXCR1000969317, hpux): When SCSI attribute values to the LUNs 
  are not set, Hazard throws stack empty error while using empty values
  to dc,this has been fixed.

+ diskraw/diskevery/diskall/diskfs (QXCR1000954746, Windows): Added feature
 "issue user defined CDBs to the device under test" support in windows.

+ diskall/diskfs/diskraw/diskevery/diskdt/diskmiwr/disksvt (QXCR1000947669, hpux): 
  Setting the qdepth value to lvm/vxvm/evfs volumes use to give an ERROR, this has
  been fixed.

+ syspanic (QXCR1000821586, AIX): Fixed a bug in syspanic to
  successfully panic the AIX 5.3 and AIX 6.1 systems.
 
  Also ...
  syspanic (QXCR1000962033, AIX): Enhanced syspanic to enable system 
  dump collection during Corruption Ananlysis.  

+ diskall (QXCR1000972485): Added an enhancement to log corruption 
  details like block number and count number, when the client is set 
  to PANIC or HALT, with a cat1 option .

+ sysmon (QXCR1000972467, windows): Sysmon has been modified to handle 
  event messages more than 1024 characters long in Windows 2003.


2009 August 24: 6.19 hpux
2009 August 24: 6.19 Linux
2009 August 24: 6.19 Solaris
2009 August 24: 6.19 Windows
2009 August 24: 6.19 Aix

The following fix has been reverted in the latest release.

+ diskfs (QXCR1000916145, windows): The "format system drive in C:" pop 
  up messages on Windows vista and longhorn OS  while running Hazard has 
  been avoided by removing the mount points from the system drive. We now 
  use the volume directly to create the files during testing.


2009 July 24: 6.19.RC.01 hpux
2009 July 24: 6.19.RC.01 Linux
2009 July 24: 6.19.RC.01 Solaris
2009 July 24: 6.19.RC.01 Windows
2009 July 24: 6.19.RC.01 Aix

+ server (QXCR1000756072): The license checks for category-1 has been 
  modified that ease the user experience with Hazard.
+ server/conf (JAGaf63556): Hazard behavior is changed to allocate 
  raw & file system expectation memory duly based on Hazard test 
  configuration(c[0-19]) that needs expectations to be stored at 
  Hazard server.
+ diskres/diskbdr/diskabrt (QXCR1000937103) New Hazard option 
  "disktrouble_type" is added to specify whether disk reset/bdr/abort 
  operations to happen cluster-wide (or) per client system. 
  By default, the reset/abort operation will be cluster wide.
	Usage:
		-o disktrouble_type=0 #cluster-wide (default).
		-o disktrouble_type=1 #per client system.

+ initdisk (QXCR1000920180, hpux): The alternate boot partitions with 
  EFI label are now excluded from Hazard testing.

+ diskraw/diskevery/diskall/diskfs (QXCR1000748692,hpux,Linux): 
  Added support to issue user defined CDBs to the device under test.
  The user defined CDBs are specified using the `-o catN=11 -o cdb="..."` 
  options. 
  For example:
   -o cat2=11 -o cdb="0x12,0x00,0,0x00,0xfe,0"
   
   Each byte of the CDB value must be either in hexadecimal or decimal 
   format and comma separated, as shown above.

  The value of this Hazard enhancement is recognized to be:

  1. The ability to use the CDB as an analyzer trigger.
     Using the given example above, an analyzer could be set to trigger 
     on a standard Inquiry (0x12) with a specified transfer length 
     of 254 (0xfe) bytes.

  2. The ability to use the CDB as a trigger to the device under test 
     (if the device supports such a trigger). This would be similar 
     to the EVA controller "dropdead" [Hazard "-o catN=6"] feature.

+ server (QXCR1000908417): Hazard point release will now expire after 
  2 months of its release date. 

+ diskfs (QXCR1000916145, windows): The "format system drive in C:" pop 
  up messages on Windows vista and longhorn OS  while running Hazard has 
  been avoided by removing the mount points from the system drive. We now 
  use the volume directly to create the files during testing.

+ libcorr (QXCR1000918306) : During Corruption Analysis with btags enabled, 
  BTAG analysis messages that were reported in ERROR level are now reported 
  in LOG level. LBA information is also added to these log messages.

+ ioscan (QXCR1000900380, linux): Hazard can now handle upto 1024 CCISS 
  disk devices.


2009 July 07: 6.18.07.07 hpux

+ server (QXCR1000939285): Timeout factor can now be applied to ID phase
  using -T<scale> option. The default timeout duration for id phase is 
  30 minutes.

  Also...
  idsys/iodtc (hpux): For HP-UX, Performance optimization changes are made 
  to ID and IO phase scripts to reduce the time taken while retrieving 
  the H/W details connected to a Client system. 

+ idsys (QXCR1000774911; hpux): For HP-UX 11.31 systems, different 
  IO load balance policies can now be set using a new command line 
  option "-o io_loadpolicy=" in the ID phase itself.
  Ex: -o ip==hazuxpa6?io_loadpolicy=weighted_rr
      -o io_loadpolicy="round_robin"

  Also...
  exitdisk (hpux) : For HP-UX 11.31, new scripts are introduced to report 
  below mentioned SCSI Statistics during the EXIT phase of Hazard run.
  - SCSI Services Global Statistics
  - Sum of SCSI Statistics for all Controllers
  - Sum of SCSI Statistics for all target paths
  - Sum of SCSI Statistics for all LUNs

2009 Jun 30: 6.18.06.30 hpux
2009 Jun 30: 6.18.06.30 windows
2009 Jun 30: 6.18.06.30 linux
2009 Jun 30: 6.18.06.30 solaris

+ (QXCR1000813814, hpux): Hazard c8,c16,c5,c7,c18 and c19 has been verified 
  on HPUX 11.31 Virtual Machines on HPVM.
+ initvm (QXCR1000937873, windows): Hazard was reporting gdid_error for 
  dynamic volumes. This has been fixed.
+ initvm, hazard.pl (QXCR1000779181, windows): Hazard was limiting the size 
  of dynamic volumes to 4GB. This has been fixed.
+ (JAGaf81904; solaris) Hazard support for testing larger lun(> 2TB) on 
  Solaris clients.
+ iovm (QXCR1000782399; hpux): Hazard IO phase was timing out on HP-UX 11.31 
  clients having large number of VxVM disks. IO phase scripts are optimized 
  to fix this issue.
+ server (QXCR1000940476; common): Currently, Hazard server will fail to start 
  the Test phase when rsh to itslef fails during Hazard management thread 
  start-up. This behavior is changed to notify the user about the issue 
  at WARN level instead of ERROR level.
+ hazard.h/diskraw/diskevery/diskall/diskfs (QXCR1000748692, hpux,linux): 
  Added support in hazard to pass the user defined cdb's. User defined cdb's 
  can be passed through '-o cdb' option.
  (Ex: catN=11 -o cdb="0x12,0x01,0x83,0x00,0xfe,0x00") 
  These cdb's will be executed as scsi command. Each cdb byte value must 
  be in hexadecimal format as shown above.     
+ sysmon (QXCR1000914432, linux): As per the Device Mapper test team in STSD, 
  path failure messages should be reported as ERRORs instead of DIAGs. 
  This is incorporated now.
+ (QXCR1000893560, windows): Hazard c8 and c16 Test configurations are run 
  successfully on Windows 2003, Windows 2008 operating systems running as 
  virtualized guests on Citrix Xen Virtualization platform. The diskfs 
  mounting issues were not seen. 

  Note: The hazard test processes, diskabrt and diskres won't be supported on 
  Citrix Xen as the traditional IOCTLs are not supported by the hypervisor.

+ (QXCR1000907472, windows): Hazard c8, c16 and c5 test configurations are run 
  successfully on Windows 2008 server r2, enterprise edition running as virtualized
  guests on Hyper-V platform with Windows 2008 server r2 enterprise edition.

2009 May 25: 6.18.05:25 hpux
2009 May 25: 6.18.05:25 linux
2009 May 25: 6.18.05:25 solaris
2009 May 25: 6.18.05:25 windows

+ diskinfo/diskbdr/diskabrt/diskres (QXCR1000873796, linux) Direct attached SATA
  devices were not considered for Hazard testing on Linux clients. This support 
  is added now.

+ initdisk (QXCR1000880470, hpux) When ioscanB option is specified on HP-UX 11.31 
  clients, only persistent dsf's involved in swap are getting eliminated from 
  testing whereas the corresponding legacy dsf's were considered and thus leading
  to corruptions. This is fixed.

+ initdisk (QXCR1000926815, hpux) When ioscanB option is specified on HP-UX 11.31 
  clients, only persistent dsf's involved in boot are getting eliminated from 
  testing whereas the corresponding legacy dsf's were considered for testing. 
  This is fixed.

+ server/scandisk (QXCR1000776025, hpux) As per Waheed Sami, the number of paths to
  the disk needs to be computed using scsimgr utility on HP-UX 11.31 clients. 
  This is incorporated now.

+ diskinfo (QXCR1000922422, linux) The format specifier was wrongly specified as "^s"
  instead of "%s" in some printf messages. This is fixed.

+ iodtc/iovm/initdisk/diskbdr/diskres/diskabrt (QXCR1000907478, linux) Added Hazard 
  support for testing Xen Linux virtual machines. By default, virtual block devices 
  will be exported with the device notation "/dev/xvd[a-z]*" and Hazard will consider
  this xen virtual block disks for testing on Linux virtual machines. 

+ diskbdr/diskres/diskabrt (QXCR1000922423, linux) The test process like diskbdr, 
  diskres & diskabrt should ignore "md" devices from performing their respective 
  operation. This is taken care.

+ diskfs (QXCR1000821585, sunos) Hazard log is flooded with "SolarisDIO: ZFS dont have
  Direct IO" messages during ZFS testing. This is fixed.

+ initvm (QXCR1000819367, sunos) The model name of zpool device is changed from 
  "zpool_zpool" format to "zpool_poolname" format.

+ diskinfo/diskfs/initdisk (QXCR1000887644; linux): Added Hazard support for Large LUN
 (32 TB) testing on Linux clients. Due to current limitation on Linux OS, file system
  partition size is limited to 16 TB size & file system size is limited to 8TB size 
  on all supported architectures.

+ idsys(QXCR1000920181, hpux): Lanscan can fail with errors sometimes, this has been 
  handled.

+ sysmon (QXCR1000929727, hpux) : As per the HPUX 11.31 Test team, BCS the following 
  message need to be Logged at CRIT level instead of DIAG level.CISS: RAID SA P800 
  driver at 0/4/0/0/0/0 is being taken offline due to an unexpected condition.

+ hazard (QXCR1000907447, windows): Added Hazard support for testing Windows 7 
  clients(desktop version).

+ server/log (QXCR1000925910): The server which used to host Hazard website 
  "hazard.boi.hp.com" was taken off HP network and now Hazard website is hosted on 
  SharePoint. Also while verifying licenses, we ping some well known hosts, 
  hazard.boi.hp.com was one of the well known hosts. With this change all the 
  occurrences of hazard.boi.hp.com has been  changed.

2009 April 8: 6.18.04.08 hpux

+iodtc/hazard.h (QXCR1000918695, hpux): The alternate boot disks on EFI 
partitioned disks were getting wiped off, So the partition testing has 
been made optional. The following option can be used.
	-o partition=1/0
1 - turn on partitions testing
0 - turn off partitions testing (default)

2009 Mar 31: 6.18.03.31 Windows
2009 Mar 31: 6.18.03.31 Linux
2009 Mar 31: 6.18.03.31 hpux
2009 Mar 31: 6.18.03.31 Aix

+ diskinfo (QXCR1000910077, Windows): The total number of bytes (disk size)
  on a disk was reported using an incorrect format specifier. This has been 
  corrected.

+ hazard.h/diskinfo/diskmount (QXCR1000905418, Aix): Hazard support for 
  testing up to 32TB size luns on Aix has been added.

+ server/mkparts/initdisk/scandisk (QXCR1000887623, Windows): Hazard support 
  for testing up to 32TB size luns on Windows has been added.

+ server (QXCR1000830623): Descriptions of License categories 2 and 3 has 
  been modified on the license web page to get a clarity about their usage.

+ iovm (QXCR1000776213,Linux): Hazard can now test Logical volumes of size >4TB
  on Linux.

+ server (QXCR1000776025; common): Hazard is enhanced to display "Total number 
  of paths(connections)" to each testable device in the Hazard test summary. 
   
+ initdisk/idsys(QXCR1000907439; Linux): Hazard support for SLES11 distribution 
  has been added.

+ iovm (QXCR1000910434; Linux): When MD configuration is done on cciss device, 
  some testable cciss device were wrongly classified as MD device and not 
  considered for Hazard testing. This is fixed.

+ diskraw/diskfs (QXCR1000910453; Linux): Unwanted OpenSgDevice() failure 
  messages were reported during corruption analysis on MD device, This is fixed.

+ initdisk (QXCR1000911387; Linux): Some testable devices were wrongly classified 
  as LVM volumes and not considered for Hazard testing. This issue is fixed. 

+ initdisk (QXCR1000911387; Linux): Size calculation logic for DM device was not 
  being used so far, hence removed the same.

+ initdisk (QXCR1000865306; Linux): parted utility had an issue in applying disk 
  label in earlier RHEL5 release, this is resolved now in latest RHEL5 release. 
  Appropriate changes were made in Hazard to reflect the same.

2009 Feb 16: 6.18 Windows
2009 Feb 16: 6.18 Unix

+ server (QXCR1000899386): Hazard server process continues to check for 
  packets from "mgmt_hazard" thread, even if it is exited abruptly.
  This is fixed.

2009 Jan 29: 6.18.RC.02 hpux
2009 Jan 29: 6.18.RC.02 Linux
2009 Jan 29: 6.18.RC.02 Solaris
2009 Jan 29: 6.18.RC.02 Windows
2009 Jan 29: 6.18.RC.02 Aix

+ diskall (QXCR1000896763): while testing the specific portions of a disk
  using diskall test process, All the disk_blocks were not allocated to
  (tested by) the avaialble test processes, hence some of the disk slices 
  were left untested. This is fixed now .

+ diskraw (QXCR1000896344): diskraw process was exiting silently when server
  process has given no blocks for doing IO. This is fixed now.

2009 Jan 13: 6.18.RC.01 hpux
2009 Jan 13: 6.18.RC.01 Linux
2009 Jan 13: 6.18.RC.01 Solaris
2009 Jan 13: 6.18.RC.01 Windows
2009 Jan 13: 6.18.RC.01 Aix

+ diskfs/diskraw/diskall (QXCR1000772802): Hazard BTAG structure is 
  enhanced to support the checksum for BTAG contents, BTAG size is 
  increased from 16 bytes to 32 bytes. Now, Hazard validates the BTAG 
  contents by using this checksum field.
+ diskfs/diskraw/diskall/diskevery (QXCR1000767687): disk* IO related 
  test processes are modified to log all open failures in similar way.
+ diskfs (QXCR1000754635; hpux): On HP-UX 11.31, Filesystems use to 
  hung when there were too many IO Errors, this is fixed by counting 
  the consecutive IO Errors to a limit and after exceeding the limit 
  unmount the filesystem.
+ initdisk/init.lun/iodtc (QXCR1000774785; hpux): On HP-UX, Hazard now 
  detects the partitions and test them. The partitions on bootdisk will 
  be excluded.
+ io-time-stats (QXCR1000840656): io-time-stats utility applies the 
  log filter "test==diskraw" only when additional filter is provided 
  by the user, otherwise this condition will not be passed to log 
  utility for getting I/O statistics. Hence, I/O statistics from diskfs 
  process were also gathered by io-time-stats utility to generate 
  the report. This issue is fixed.
+ diskfs (QXCR1000819369; Aix): Hazard retries infinitely if there 
  are intermediate failures during filesystem creation and this leads 
  to "Process timed out" issue. This issue is fixed by limiting the 
  retries to 10 times.
+ ioscan (QXCR1000785210; Linux): The debug option(-d) is not parsed 
  correctly in Linux ioscan utility, this issue is fixed.
+ ioscan/initdisk/iovm/diskres/diskbdr/diskabrt (QXCR1000770649; Solaris): 
  Hazard support for LDOM - Solaris Virtualization technology is added. 
  Ioscan utility can now identify the disks with "vdc" driver and support 
  Hazard testing on the same. Disk resets, aborts and BDR's cannot be 
  performed on certain exported VDC disk types and this is taken care.
  Some known issues observed with LDOM testing:
    1) Hazard testing with Shared memory data contents is leading to "zero bytes" 
       corruption. Till this issue is resolved, Hazard can be tested with Local 
       data buffer by enabling btags option(i.e., -o btags=1).
    2) System crash can be expected with SVT testing (i.e., -c18 & -c19). 
    3) VxVM testing is not currently supported.

+ mgmt_hazard (QXCR1000891304): Hazard manager thread "mgmt_hazard" exits, 
  when it encounters any conditional expression specified by the users 
  that cannot be evaluated and this behavior suppress the user from performing 
  any managerial operation later. This issue is fixed.
+ server (QXCR1000892114): In Hazard 6.17.14.11 release, If Hazard is started 
  from a directory other than the directory where server bits are extracted, 
  then creation of Hazard's management thread "mgmt_hazard" will fail. 
  This may lead to fill the log file with lot of unexpected "IoGet" messages. 
  This is fixed.


2008 Nov 24: 6.17.11.24 hpux
2008 Nov 24: 6.17.11.24 Linux
2008 Nov 24: 6.17.11.24 Solaris
2008 Nov 24: 6.17.11.24 Windows
2008 Nov 24: 6.17.11.24 Aix

+ server/manage_hazard/mgmt_hazard/diskraw/diskfs/diskall/disksvt/diskdt
  /syshalt/diskabrt/diskbdr/diskres/sysprobe/diskevery/sysboot/syspanic
  (QXCR1000774777; QXCR1000716801; QXCR1000776618; QXCR1000857908):
  Added new utility called "manage_hazard" to Hazard for supporting
  "dynamic update of options" and "User driven syshalt, sysboot, syspanic
  on the clients". Also, stopserver functionality is integrated into
  this utility. Henceforth, stopserver utility will not be available
  in the Hazard package.

  Dynamically updating and adding Hazard options can be performed by invoking
  "manage_hazard" utility. It will open the file containing existing Hazard
  options in the "vi" editor, user can make necessary changes in this file
  and save & exit the file with vi's ":wq!" command. 

  Snippet of option file opened in "vi" editor by manage_hazard:
                ha=1
                test==sysmon?diags=1
                test==syshalt?usermode=1
                test==sysboot?usermode=0
                test==diskraw?timeio=7
                test==diskfs?sync=3

  Note: 
        1. For the Hazard option to which string value has to be passed,
           specify the string without quotes(""). If string is passed within
           quotes, then it will be taken as such and passed to its option.

        2. Hazard options like: btags, fsiobuf, riobuf, syncpanic, fstype, 
           replay, jfile & disk_blocks cannot be added/changed dynamically 
           during Hazard run using feature. 

        3. The dynamic change/addition of option like bdr, lun_reset, 
           cold_reset, abort & other client specific options (ex: maxdevs, 
           deviceset,etc.,) will have impact only after the client machine 
           reboot/panic.

  New Hazard option "usermode" is added - Syshalt, sysboot, syspanic process 
  checks if usermode  option is set to 1, if so then it will wait for user to 
  signal to perform its respective operation. Otherwise, it will follow the 
  current default behavior. User should make use of "manage_hazard" utility to
  send his/her signal to trigger syshalt/syspanic/sysboot operations on the 
  client setups.

  Specifying usermode option globally (i.e., -o usermode=1) will apply
  to all test process. So, if user wants to restrict the behavior to
  specific process then "usermode" options has to be passed with
  conditional expression(ex: test==syshalt?usermode=1).

        Snippets of manage_hazard:
          ./manage_hazard
          PID      WorkDir         Testconfiguration  Clients
          11367    /tp/test/test1  -c16               haznt3 haznt33 haznt21

          Enter the PID of the server : 11367

            ****************** Menu ************************
                 1. Stop the server
                 2. Update/Add Hazard options
                 3. Send signal to halt I/O on the clients
                 4. Send signal to boot the clients
                 5. Send signal to panic the clients
                 6. Exit
            ************************************************
          Enter the choice(1-6) :

  User can monitor the failures of Hazard managerial operations in the file
  called "haz.errmgmt" under Hazard working directory. 
+ install (QXCR1000875877): "install" utility is modified to prompt the user 
  for selecting the Hazard package to extract, if there are multiple Hazard 
  packages in the directory.
+ initdisk (JAGag38757,QXCR1000867052; Linux): initdisk script is enhanced to
  detect the DM devices which are configured over cciss devices.
+ ioscan (QXCR1000826702; Linux): ioscan is enhanced to detect 256 bus instance
  numbers. Earlier it was detecting only 16 bus instance numbers.
+ initdisk (QXCR1000826653; Linux): Hazard is enhanced to support new DM 
  naming notation for DM partitions on SLES9 SP4.
+ hazard.sh/server (QXCR1000860818,QXCR1000860827): When replay option is set 
  to 1 (1)  Hazard server is enhanced not to reboot/panic the client machine 
  till we finish the journal entries for that reboot cycle (2)  Hazard server 
  is enhanced to handle the Hazard option values which has space 
  (ex: -L "-lip -ltest -ldid") correctly.
+ diskfs (QXCR1000760978): If mkdir() fails with EIO error then diskfs 
  process logs that failure at CRIT level.
+ sysprobe.c (JAGag50387): sysprobe's ioscan miscompares have been changed
  from errors to warnings.
+ diskmount (QXCR1000775422):All mkfs/newfs and format/hformat failures will
  be logged as Errors
+ server/client/hazard.h/log/liballoc (QXCR1000752373): The client will now 
  exit if there are no devices to test.
+ diskinfo/mkparts/initdisk (QXCR1000741197, Windows): The size of disk is
  now independent of the disk geometry, we now consider the size using scsi
  pass through
+ scandisk (QXCR1000870127, Windows): The path which reports the volume 
  details incorrectly will be excluded from testing
+ diskfs/diskraw/diskall/diskevery/diskdt/disksvt/diskmiwr (QXCR1000767672):
  All open/read failures in VerifyGdid() are now logged at ERROR level.
+ hazard.pl (QXCR1000876821, Windows): The space separator in Hazard "os" 
  scan attribute value is replaced with "." separator. Example: 
     "os=5.2.Service Pack 2" is changed to "os=5.2.Service.Pack.2".

2008 Sep 30: 6.17.09.30 hpux
2008 Sep 30: 6.17.09.30 Linux
2008 Sep 30: 6.17.09.30 Solaris
2008 Sep 30: 6.17.09.30 Windows
2008 Sep 30: 6.17.09.30 Aix

+ diskall: (QXCR1000772920) Diskall process is modifed to support the 
  testing of specific portions of a device. A new option 'disk_blocks' is 
  introduced to pass the start, end disk blocks of specific portions of 
  disk. User can pass as many slices/portions as possible on a device for
  testing, but not exceeding the total no of diskall test processes sharing
  that device.
  Ex:
  -o disk_blocks=X1,Y1:X2,Y2:X3,Y3 
  # disk_blcoks value is applied to all the Testable devices.
  
  -o "gdid==XYZ?disk_blocks=X1,Y1:X2,Y2:X3,Y3" 
  # disk_blocks value will be applied to a specific device whose gdid is 
    equal to XYZ.
+ server/diskfs/diskraw/diskall/diskevery/hazard (QXCR1000768855): 
  Enhanced Hazard to support the replay option. Added two new options 
  namely "replay" and "jfile" for the same. The possible values to replay
  option are

  -o replay=-1 # Hazard continues with normal random behavior
  
  -o replay=0  # Hazard captures all the journal events into "jfile"
  
  -o replay=1  # Hazard uses the journal file, i.e "jfile" and replay's the 
                 old Hazard run. Hazard gets the old Hazard run command line 
                 options from "jfile" and it pass the same options to 
                 current Hazard run (including client names).
  
  The default value of replay option is: -1
  
  By using "jfile" option we can tell the journal file name. The default 
  value of "jfile" option is "journal". The following examples explains 
  more on "jfile" and "replay" options.
  Examples:
  
  -d mytest                  # Hazard continues with normal random behavior.
 
  -d mytest -o replay=-1     # Hazard continues with normal random behavior.

  -d mytest -o jfile=JFILE1  # Hazard creates a file with name "JFILE1" under
  -o replay=0                  "mytest" directory and it stores all the events
                               in that file.

  -d mytest -o jfile=JFILE1  # Hazard uses the file JFILE1 under "mytest"
  -o replay=1                  directory (i.e. mytest/JFILE1) and replays the
                               the old Hazard run as per journal file.

  -d mytest -o replay=0      # Hazard creates a file with name "journal" under
                               "mytest" directory and it stores all the events 
                               in that file.
  -d mytest -o replay=1      # Hazard uses the file "journal" under mytest 
                               directory and replays the old Hazard run. 
  -o replay=0                # Hazard creates a file with name "journal" under 
                               "/hazard" directory and it stores all the events 
                               in that file. In case if user had set any value 
                               to "HAZARD" environment variable or if user had 
                               mentioned any value to "-d" option through 
                               "HAZARDSERVER" environment variable then it 
                               creates the "journal" file in appropriate 
                               directory.
  -o replay=1                # Hazard uses the file "journal" under "/hazard"
                               directory and it replays the old Hazard run. In 
                               case if user had set any value to "HAZARD" 
                               environment variable, then Hazard searches for 
                               "journal" file in $HAZARD/ directory. If user
                               had mentioned any value to "-d" option through
                               the environment variable "HAZARDSERVER" then 
                               Hazard searches for "journal" file in 
                               corresponding directory and it replays the old 
                               Hazard run.
+ iodtc (QXCR1000857338; hpux): Code changes to avoid taking longer times 
  during IO Phase on HP-UX 11.31 machines.
+ diskraw: (QXCR1000807292; hpux) Performance statistics for async writes in
  HP-UX were not captured correctly, hence leading to bogus performance 
  statistics in the log. This issue is fixed.
+ diskinfo: (QXCR1000839396; Windows) Serial number of WDC hard drives 
  contains special " " (space)characters, but handling space characters is 
  not taken care in Hazard during formatting serial number of IDE attached 
  hard drives. Thus leading to scan failures while testing Hazard with WDC 
  hard drives. This issue is fixed.
+ diskraw/diskfs/diskall: (QXCR1000807294) Conversion from milliseconds to 
  seconds was not performed while computing IO/seconds metric, this is 
  fixed now. Also, the performance report for diskall process is modified 
  according to its iomode(read-only, write-only & read-write) operation. 
+ diskraw/diskfs/diskall: (QXCR1000807287) Calculation of number of opens,
   reads, writes and close operations for disk test process is optimized. 
+ diskraw: (QXCR1000807285; hpux) Max I/O time check was added some time back 
  to help SISL team to debug a certain issue. They have not used it again and 
  the presence of this code adds to code clutter. Also, maxiotime option was 
  also added as part of this functionality. This functionality is removed and 
  maxiotime option is no longer supported in Hazard.
+ stopserver: (QXCR1000821568) 'stopserver' script is modified to not list 
  and send a kill signal to the fake server processes that exited abruptly.
+ diskinfo: (QXCR1000835096; Windows) Due to a coding error in diskinfo 
  utility, junk numeric values were getting printed next to disk serial number.
  This issue is fixed now.


2008 Jul 04: 6.17 Windows
2008 Jul 04: 6.17 Unix

+ cvmquorum: (QXCR1000824313; Windows) cvmquorum exits with an application
  fault on 64 Bit systems due to wild pointer being used in free(2).
  The fix is to initialize the "Res" Pointer to NULL.
+ diskfs: (QXCR1000818337; Solaris) Fixed a coding error to not run fsck 
  command on zpools.
+ server: (QXCR1000823518) The log utility when invoked with -f option
  does not terminate when Hazard detects an invalid command line option.
  However, Hazard run was terminated. This is fixed.
+ exitdisk: (QXCR1000822580) Exit phase takes long time to complete, 
  when the newly added Hazard option "failfscklglvl" is passed for 
  testing.This issue is fixed.
+ hazard: (QXCR1000823520) Hazard supported options "iomode" and "Seed" 
  were not considered as valid options. This is fixed.
+ disksvt: (QXCR1000823098; Solaris): Hazard c18 and c19 tests were 
  failing on zpool volumes due to GDID verification failure. This 
  issue is fixed.

2008 Jun 06: 6.17.RC.01 hpux
2008 Jun 06: 6.17.RC.01 Linux
2008 Jun 06: 6.17.RC.01 Solaris
2008 Jun 06: 6.17.RC.01 Windows
2008 Jun 06: 6.17.RC.01 Aix

+ iovm/initdisk/initvm/diskabrt/diskbdr/diskres: (QXCR1000747643; hpux) 
  Added Hazard support to EVFS (Encrypted Volume File System) on HP-UX 
  11.23 and 11.31
+ diskall: (JAGag49069) Diskall process is modifed to support the compare 
  option in readwrite mode. Compare option controls the data comparisons. 
  The possible values to compare option is
   -o compare=0 (disable comparisons) 
   -o compare=1 (enable comparisons). 
    The default value is 1.
+ diskinfo: (QXCR1000779676; windows) IOCTL for fetching vendor ID on a
  segate disk gives you its product ID. We find whether "ST" prefix is 
  there and then formulate the VendorID as SEGATE_.
+ iodtc/initdisk/scandisk: (JAGag44405; hpux) Added Hazard support to 
  RAM disc driver.
+ diskfs: (QXCR1000760979; hpux,Linux,Solaris) diskfs behavior is 
  changed as follows:
   1. For Non-HA tests  always do minimal fsck. If and only if minimal fsck 
      fails, then try full fsck with repair options. If full fsck fails two 
      times, then we create new file system.
   2. For HA tests always do full fsck with repair options. If full fsck 
      fails two times, then we create new file system.
   3. Added a new option "failfscklglvl" to control the log level of fsck 
      failure.  The possible values to failfscklglvl is 
      -o failfscklglvl=CRIT  (logs the fack failures at CRIT level) 
      -o failfscklglvl=ERROR (logs the fsck failures at ERROR level).
         The default value is ERROR.
   4. fsckfreq option is  dropped.
+ diskbdr: (JAGag45858) Diskbdr behavior is changed in such a way that at 
  any point of time through out the cluster only one diskbdr process will 
  do device resets.
+ diskres: (JAGag45856) Diskres behavior is changed in such a way that 
  at any point of time through out the cluster only one diskres process 
  will do resets.
+ diskabrt: (JAGag45865; Linux, Windows)  Diskabrt behavior is changed in 
  such a way that at any point of time through out the cluster only one 
  diskabrt process will do aborts.
+ diskfs/diskall/diskevery/diskraw/diskmiwr/disksvt: (JAGag15963) All the 
  disk related IO test process will log an ERROR message if they doesn't 
  find atleast one appropriate interface for their testing.
+ ioscan: (JAGag33232; Linux) Fixed an issue to print the emulex hba driver 
  name properly on SLES 10.
+ diskfs/diskraw/diskbdr/diskabrt/diskres/diskall/diskevery/diskdt/server/
  initdisk/initvm/iovm: (JAGag42446,JAGag42445; Solaris): Hazard support 
  for ZFS file system is changed as follows.
  1. When user wants to test ZFS file system, he has to create zpools on 
     available LUNs and the zpool name should start with "hazpool" and any 
     zpool name should be unique through out the cluster.
  2. Hazard detects all the zpools, whose name starts with "hazpool" and it
     considers all these zpools as testable.
  3. From its testing Hazard excludes all the LUNs which are part of zpools.
  4. No raw IO on any zpool.
+ iodtc: (QXCR1000747057; hpux) Earlier on hpux 11.31 client machines we are
  printing Lun hw path in '/' notation, now it is changed to '.' notation.
+ server: (QXCR1000716023) The print notation of server process data segment 
  size is modified.
+ idsys: (QXCR1000739344; hpux) The print notation of File Cache min/max 
  value is changed from Bytes to Mega Bytes.
+ idsys: (QXCR1000739341; hpux) The print notation of Disk Buffer cache 
  min/max is modified. Now we are printing Disk Buffer cache min/max values 
  in percentage of physical memory.
+ idsys: (QXCR1000739339; hpux) The idsys is modified to print the max IO 
  transfer size of various luns in Kilo Bytes. Earlier we were  reporting it 
  in Bytes.
+ idsys: (QXCR1000757654; hpux) Idsys is modified to retain the same SCSI 
  log mask value across the reboots.
+ diskfs/diskevery/diskall/diskraw (QXCR1000763396) While executing a CRIT 
  action on a device and while setting scsi queue depth of a device, the 
  OpenDevice() call retry's the open() for 10 times before logging open() 
  failures at ERROR level.
+ server: (JAGag45842) Currently Hazard does not validate the command line 
  option passed using -o option, it will just accept whatever test option 
  specified by user. This issue is fixed.
+ client: (QXCR1000741314) Added one more factor 'T' to represent the 
  total devices connected to the client. Now, this factor will also be 
  used in calculating the maximum devices that Hazard can test on the client.
+ server: (QXCR1000774152) In Hazard, the test option passed using -o options 
  are either applied to all the test process (or) some test process which 
  satisfies the condition specified along with that. Now, Hazard is enhanced 
  to support test option to be applied to specific client (like passing maxdevs 
  option to apply on one client among the set of clients specified). Example: 
  Say If the user specifies -o ip==client1?maxdevs=100, then maxdevs=100 option 
  will be applied only on client1 and the option wil be ignored for rest of the 
  clients.
+ hazard/install: (JAGaf71302) Hazard packages are now bundled with tar/gzip 
  utilities in order to reduce the size of  the Hazard bundles and to avoid 
  sharutils dependencies that are required for starting Hazard. In addition to 
  Hazard bundle, "install" script will be provided to the user. This script can 
  be used to unpack the Hazard bundle.
+ io-time-stats: (QXCR1000765774) Percentage representation of IO completion for 
  different range of time has  been changed now. Percentage value >= 0.001 will 
  be printed as xxx.xxx(7 chars wide, 3 digits after decimal point) and  
  percentage value < 0.001 will be listed in scientific notation.
+ client: (QXCR1000769187; Solaris) In Solaris, Shared memory creation will 
  fail with "Invalid argument"  error if the kernel tunable parameter "shmmax" 
  value is set too low. Hazard behavior is changed to log the corresponding 
  information to alert the user for recovery action.
+ client: (QXCR1000782077) Hazard defunct process cleanup was too slow, hence 
  the system was idle for a longer time. Now, this is fixed by dynamically 
  balancing wait3 and packet receive function calls.
+ iovm/initdisk: (JAGag22126,JAGag10059; Solaris) Added Hazard support for 
  Veritas Volume Manager 5.0( VxVM  5.0) on Solaris clients.
+ iovm/initdisk: (JAGag24838l; Solaris) In Solaris, VxVM initialized disks 
  without disk group were eliminated from Hazard testing. This behavior is 
  changed to consider the disks which are VxVM initialized but no disk group 
  for Hazard testing.
+ hazard: (QXCR1000772296) When Hazard is started from remote machine using rsh 
  (or) remsh, ping command fails. This is because remote shell do not get the 
  same PATH definition. This issue is fixed by using absolute path of the ping 
  executable in the script.
+ hazard: (QXCR1000791934) In Hazard script, error messages thrown by the ping 
  and cat commands were not redirected to the null special device. Hence, this 
  messages were getting printed on the console directly. Now, this issues is 
  fixed by displaying just the pass/fail result and ignoring the intermediate 
  errors.
+ hazard: (QXCR1000781038; Linux) On Linux, while downloading new Hazard bundle 
  to the client, hazard script incorrectly locates client checksum file under 
  "/tmp/hazard" directory for deletion instead it should locate the file under 
  /var/tmp/hazard directory. This issue is fixed now.
+ ioscan: (QXCR1000761235; Solaris) When the physical/hardware path of the 
  devices were too long (more than 80 characters), ioscan core dumps due to the 
  current limitation of buffer size to 80 characters. This is fixed now.
+ sysmon: (JAGag40657; hpux) Diagnostic message coming from fclp driver with 
  "unexpected condition" string in the message will be logged as a CRIT message.
+ diskraw: (JAGag24140; hpux) Async write history messages were not captured 
  properly and hence leading to incorrect async write history information on the 
  log file. This is fixed by handling double pointers correctly. 
+ ioscan: (JAGag28877; Solaris) In Solaris ioscan, the emulex driver was 
  categorized as type "other" instead of "ext_bus".  Hence, the devices connected 
  to emulex HBA were not initialized by Hazard. This problem is now fixed by 
  categorizing  "emlxs" driver as type "ext_bus".
+ initdisk/iovm: (QXCR1000754442; hpux) When there are large number of devices 
  (4000 or more) connected to a client, Init phase use to take long time and 
  timeout before reporting the testable devices from the total devices. This is 
  fixed by reporting the Init status of bunch of devices without waiting for 
  completion of Init status of all the devicesm.
  Also...
  (QXCR1000754225; hpux) Init phase scripts use to call multiple instances of 
  'ioscan -m dsf' to obtain a mapping between legacy dsf names and new dsf names. 
  Mutiple instances of ioscan commands use to take long time to complete. This is 
  fixed now by running the 'ioscan -m dsf' only once and capturing the output in 
  a temporary file.
  Also...
  (QXCR1000714518; hpux) Sometimes if initdisk has trouble with the devices, the 
  Error/Log messages were not captured promptly due to some incorrect redirection 
  of messages to the log files. So, changes have been made to clean that up.
+ ioscan: (JAGag47839,JAGag42711; hpux) Hazard's own ioscan  utility use to core 
  dump on HP-UX 11.23 and 11.31 client systems due to an incorrect string search 
  operations. This is fixed.
+ diskmount/diskfs/disksvt: (QXCR1000755654; Windows) Hazard fails to format 
  volume greater than 4 TB. Change is made to use different Format Cluster Sizes, 
  which is calculated depending on the LUN size prior to doing the format.


2008 Feb 1: 6.16.14.1 hpux
2008 Feb 1: 6.16.14.1 Linux
2008 Feb 1: 6.16.14.1 Solaris
2008 Feb 1: 6.16.14.1 Windows
2008 Feb 1: 6.16.14.1 Aix

+ diskall: (JAGag20510,JAGag20511) Read only and write only modes are now 
  supported in diskall. A new option "iomode" is added for the same.
   -o iomode=read          # diskall runs in read-only iomode
                           # (no writes and no comparisons)
   -o iomode=write         # diskall runs in write-only mode
                           # (no reads and no comparisons)
   -o iomode=rw            # diskall runs in read/write mode
                           # (writes, followed by reads, followed by comparisons. 
                           #  This would be the default behavior)
+ diskfs: (JAGag46057) Diskfs is changed to log read() failures
  in FsReRead() at CRIT level; earlier it was logged at ERROR level.
+ diskfs: (JAGag18583; Linux) The option fstype supports multiple file systems;
  earlier by using fstype option we can test all file systems or only
  one file system. Now user can specify multiple fstypes, each fs name
  should be separated by ",". By default diskfs tests all the supported 
  file systems.-o fstype=ext2,ext3      #diskfs tests ext2 and ext3 
  file systems only
+ diskfs: (QXCR1000747725,QXCR1000741487): For HA/recovery-type runs (e.g., -c16), 
  When a device is shared between multiple clients, diskfs is modified to 
  always run full fsck (fsck -fy) instead of running minimal fsck 
  followed by full fsck to repair any file system errors.
+ hazard.sh: (QXCR1000766004; aix) Enabled testing of AIX 6.1 machines
+ hazard.sh: (QXCR1000752043; Windows) Made changes to avoid the 
  Warning/Error message"A duplicate file name exists,  or the file cannot be found" 
  that used to appear while renaming syspanic.bin file during the client 
  bits downloading.
+ server.c: (QXCR1000750676) Removed logging the 'number of tape devices
  to test' message.
+ diskdt.c: (QXCR1000739461) If a cluster or dynamic volume, diskdt would exit
  since raw testing is not supported on these volumes.
+ io-time-stats/log/diskraw: (QXCR1000764374) When timeio option is set, empty STAT
  lines were getting logged on read/write failures, because of which the 
  log command dumps core when invoked from io-time-stats. This is 
  fixed by changing test process to log STAT lines only  after successful 
  read/write operations. Log utility is also changed to skip the empty 
  STAT lines (if any) from statistic computation.
+ io-time-stats: (JAGag50401) Statistics value for the read/write operations
  consuming (90-180 seconds) were collected wrongly by io-time-stats script.
  This is now fixed.
+ diskraw/diskall/diskfs: (QXCR1000767691) Parsing arguments for IoStop()
  function used for  I/O statistics computation is optimized.
+ initdisk: (QXCR1000740350;Linux) In initdisk as  part of disk partitions 
  cleanup, Hazard removes partitions (1 & 2) before creating the fresh partitions. 
  This results in a disk partition failures when there are already more 
  than 2 partitions in the disk. This is now fixed by deleting all existing 
  disk partitions before Hazard partition creation.
+ initdisk: (QXCR1000757154;Linux) Parted utility in RHEL5 version misbehaves
  by prompting user for input when invoked with -s option. Hence applying
  disk labels failing on RHEL5 version. This is now fixed by introducing
  new expect utility (hazparted) which provides user input for parted utility
  to apply the labels on the disk.
+ initdisk: (QXCR1000742669;Solaris) Some testable disks were getting eliminated 
  from hazard testing saying "part-of-svm volume" during initdisk execution. The
  pattern matching without whole word (-w) option in svm volume check was
  leading to this failure in initdisk utility. This is now fixed.


2007 Nov 26; 6.16 Windows
2007 Nov 26; 6.16 Unix

+ idsys: (QXCR1000744114;hpux) On HP-UX 11.31, When there are large no of 
  devices connected to a client, scsimgr command use to take lot of time 
  to poll all the devices causing the ID phase to timeout. script is modified to 
  poll only few initial devices and report their attributes.
+ initdisk: (QXCR1000747788; solaris) For EFI label disks, reserved space 
  on slice 8 (i.e., 16384 sectors) should also be excluded from testing 
  in addition to EFI label space. This is taken care.
+ initdisk: (QXCR1000740931; linux) Due to the wrong boundary values
  given to the partitions, partition creation was failing for EFI label disks.
  This issue is fixed by calculating correct boundary values for the partitions.
+ diskfs: (QXCR1000743408) chkdsk was failing because the cluster would 
  failover the resource to another node on 'isAlive' timeout. This is handled 
  by setting the timeout to a very high value.


2007 Nov 05; 6.16.RC.02 Windows
2007 Nov 05; 6.16.RC.02 Unix

+ diskdt: (QXCR1000739526) Found that diskdt code had some problems 
  due to an incorrect macro usage. This is fixed by replacing the macro
  definition AIX with _AIX.
+ initdisk: (QXCR1000740931; linux) Due to the wrong boundary values
  given to the partitions, running hazard with -s! option leads to 
  gdid mismatch error. This issue is fixed by calculating correct 
  boundary values for the partitions.
+ diskinfo: (QXCR1000740008; hpux) SIOC_VPD_INQUIRY ioctl returns 
  strange disk serial value.  Hence, os specific ioctl SIOC_VPD_INQUIRY 
  is skipped and pass through ioctl is used to get the serial 
  attribute value.
+ diskinfo (QXCR1000739541;windows) On Windows Vista memory related 
  operations are very sensitive, diskinfo was reporting an error while 
  freeing a NULL pointer. This is fixed by adding a check.
+ cpuspeed/idsys: (JAGag46194; hpux) In idsys script, Reporting format
  of the CPU clock speed is modified.
+ log/diskraw/diskfs/diskall: (JAGag43607) log utility when used with 
  -s option, does not report RawKbReads/sec, RawKbWrites/sec, 
  FsKbReads/sec, FsKbWrites/sec metrics anymore. Only the following metrics
  are reported - RawReadMbytes, RawWriteMbytes, RawMbReads/sec, RawMbwrites/sec 
  for diskraw & diskall test processes and FsReadMbytes, FsWriteMbytes, 
  FsMbReads/sec,FswMbwrites/sec for diskfs test process.
+ scandisk/scanvm: SCAN attribute 'serial' representation in scan.client file 
  is reverted back to old model i.e., single 'serial' attribute instead of 
  per-path 'serial' attribute.

2007 Oct 24; 6.16.RC.01 Windows
2007 Oct 24; 6.16.RC.01 Unix

= (JAGag50050; windows) Hazard support for Windows 2000 is dropped.
= (JAGag45299; hpux) Hazard support for HP-UX 11.00 is dropped.
= (QXCR1000716892; solaris) Hazard support for Solaris 7/SunOS 5.7 is 
  dropped.
+ idsys: (JAGag42603; hpux) On HPUX 11.31 idsys captures the Maximum
  I/O size value for each of the LUNs incorrectly. This is taken care 
  by using right option to scsimgr and fetch the correct value.
+ syshalt: (JAGag04114) Maximum retries to obtain system or cluster 
  semaphore has been increased from 2 to 4 considering the increased 
  values of OFFn in diskmount-xx.c in the previous releases of Hazard.
+ disksvt/svtfse/svtseek: (JAGag11429) Integrated the latest source code 
  for svtfse (c19) and svtseek (c18).
+ diskfs: (JAGaf93768; Linux) On 2.6 kernel (not on 2.4) machines, 
  diskfs is modified to create the different file systems on different 
  devices in a parallel fashion unlike creating the filesystems serially 
  on devices one after the other.

  Also...
  (JAGag44971) When mkfs/newfs fails on a disk, mkfs retries will
  go on forever. This issue is fixed by limiting the mkfs retry count 
  to 10, And Report these mkfs failures as Warnings till the maxretry 
  times. After that the test process exits with an ERROR message.

  Also...
  (JAGag45255; unix) In diskfs, fsck failures were reported with magic
  prefix(OFF). This prefix is removed.

  Also...
  (JAGag49506; solaris) Format specifier %d was missed accidentally in 
  one of the RpcLog statement which logs zpool create command failure. 
  This is corrected accordingly.
+ ioscan: (JAGag43050; Linux) Current Hazard linux client machines support 
  only 256 sd devices. It is increased to 4096 sd device (only 2.6 kernel 
  machines).
+ idsys/scansys: (JAGag47217; Linux) At present, in ID phase, idsys reports 
  all the different speeds of processors, and in SCAN phase, scansys reports 
  only the model name of processor.  Scripts are modified to report both 
  model name and clock speed.
+ server: (JAGag49014) Hazard 6.15 category 0 license was not working with 
  SVM volumes. This is fixed.
+ diskraw: (JAGag48683) During a -c15 run, Number of times the i/o operations
  (the problem was seen with close()) completed in the time range of 0 to 2
  seconds is counted incorrectly. This is corrected.
+ diskdt/dt: (JAGag35157) When dt detects a data corruption, dt source 
  is modified to log a "CORRUPTION" message just like diskfs and diskraw.
+ diskfs (JAGag45673; Linux):  For both HA and non-HA type test configurations
  current diskfs performs minimal fsck frequently and full fsck (fsck -fy) 
  occasionally. Now the fsck behavior is changed in such a way that
   1. For HA/recovery-type runs (e.g., -c16), Hazard always runs full fsck.
   2. For non HA type tests,if minimal fsck fails then full fsck will be 
      called to repair the file system errors.
+ diskdt/dt: (JAGag42428/JAGag42429) Integrated the latest dt source.
+ diskinfo: (JAGag42426,JAGaf65469; Linux) Added support for testing 
  >2TB size LUNS on linux.
+ diskfs/diskraw/diskall: (JAGag50400) While doing the corruption analysis 
  for >2TB, some of the parameters are not printed correctly in the Log file. 
  Format specifiers are modified to print the parameters correctly.
+ diskinfo/dmlst/hazard/ioscan/mkparts/rwgdid/: (JAGag42415;windows) 
  Hazard Windows support for >2TB Lun testing.
+ hazard: (JAGag35447; windows) Fix to correctly grep the hazard client.exe 
  on the windows host

  Also...
  (QXCR1000714482; hpux) Now, Hazard client bits for 11.11 and 11.23 PA64 bit 
  Architecture are build and packaged separately in side the hazard bundle.
+ initdisk/scandisk/diskall/diskdt: (JAGaf81168; solaris) Added EFI label 
  disk support. Also added new scan parameter "label" (in scan.client file) 
  to indicate whether the disk is SMI or EFI labeled.
+ log/diskraw/diskfs/diskall: (JAGag43607) Added support for log utility
  (when used with -s option) to report new performance metrics like 
  RawReadMbytes,RawWriteMbytes,RawKbReads/sec,RawKbWrites/sec for 
  diskraw & diskall test processes. And FsReadMbytes,FsWriteMbytes,
  FsKbReads/sec,FsKbWrites/sec for diskfs test process.
+ statuschk:(JAGag46976;solaris) In statuschk script, grep command with -q 
  option and environment variable SECOND usage were leading to erroneous 
  reporting of system uptime.  This is corrected.
+ statuschk:(JAGag42969) Many Hazard users have requested for capturing the 
  intermediate results of statuschk script for debugging purpose, this is 
  now incorporated in haz.errlog file.
+ cpuspeed/idsys: (JAGag46194; hpux)In idsys script, Calculation of the CPU 
  clock speed is not reliable. Hence, Added a new utility new utility, cpuspeed,
  to obtain the list of running processors and their respective clock speeds.
+ scandisk/scanvm/scanchgr/io-time-stats/initdisk/initvm:(JAGag14376) Scan 
  attributes like bus,tgt and tgtlun are no longer used. Currently the serial 
  attribute value is treated unique to lun irrespective of the path used to 
  access the lun which is not correct. The following changes are made to 
  meet the above requirements -
    1. Serial scan attribute is now captured per path (i.e serial0,serial1..)
    2. Scan attributes like bus,tgt and tgtlun are dropped.
    3. Scan attribute 'sw' is supported only on HP-UX.
+ initdisk/iovm: (JAGag47431/JAGag48545; hpux) Added hazard support for new 
  LVM (LVM L2) on HPUX 11.31.



2007 Sep 07: 6.15.09.07 hpux
2007 Sep 07: 6.15.09.07 Linux
2007 Sep 07: 6.15.09.07 Solaris
2007 Sep 07: 6.15.09.07 Windows
+ Server(JAGag42712): Hazard "-r" behavior is the default/standard 
  behavior(i.e. not to release any resources of a client, when it dies 
  un expectedly) and Hazard no longer supports "-r" option.
+ diskfs/diskraw/diskall(JAGag30097): 1.Hazard skips the BTAGS comparisons only in
  pass=0 and in rest all passes Hazard compares the BTAGS. 2.In Corruption 
  Analysis; An offset of 0 is considered for diskfs but not for diskraw 
  (for diskraw process an offset of '0' means no expectations).
+ iovm/diskmount/diskabrt/diskbdr/diskres/initvm/initdisk/client
  (JAGaf67140) : Hazard support for SVM.
+ diskraw/client: (JAGag39479;hpux) libutil's IoPut function (called by
  PacketSend) was returning ENOBUF error during write to socket, this was 
  causing the diskraw test process to Time Out. IoPut funtion is modified
  to retry the write's for a maximum of 5 times when there is an ENOBUF 
  error before reporting it as an Error in the Log. 
+ hazard: (JAGag44784) Client's shar and csums files presence is checked 
  under the current directory where the test is started. Issue is fixed by
  using absolute path for checking client shar and csum files.
+ diskbdr/diskabrt: (JAGag44157;hpux)  - Macro UX1131 definition should be
  checked for the corresponding 1131 device reset and abort operation, 
  instead macro SYS_CCR_INCLUDED definition was checked. This is fixed.
+ diskbdr/diskabrt: (JAGag16897,JAGag15427; linux) Introduced new function
  for performing cciss device reset and abort operation.
+ initdisk/scandisk/diskall/distdt: (JAGaf81168; linux) Added EFI GPT label
  disk support. Partitioning will be done accordingly based on msdos or EFI
  label.Also added new scan parameter "label" to indicate whether the disk 
  is msdos or EFI labeled. In GPT disks,first 34 sectors should not be used 
  for I/O and this is taken care in diskall and diskdt.
+ diskbdr/diskabrt/diskres/syshalt/sysboot/syspanic: (JAGaf95108) 
  timesleep option is no more supported for this 6 test procs. So, removed 
  timesleep option and will be using timesleepR value with appropriate error 
  message if timesleep option is specified.
+ diskfs: (JAGag42916) During read failures, read operation will be 
  retried  just like open retries in VerifyGdid() fn.And, verifyDiskSignature() 
  name is changed to VerifyDiskSignature() to meet hazard coding standard.
+ libcli2: (JAGag42917) Data type of variable bp is changed from (char *) to 
  (uchar *).
+ libcli2: (JAGag43400) Return value of VerifyGdid() fn must be 0 for success 
  and 1 for failure, but we are returning no. of errors as return value.This 
  is fixed.
+ diskfs: (JAGag42914,JAGag05417) Changed RpcPerror() to RpcLog() for logging 
  "Exiting bacause gdid ..." message.
+ diskfs: (JAGag42919) Changed RpcPerror() to RpcLog() for logging 
  "Lead process exiting because ..." message.

2007 Jul 12: 6.15.07.12 hpux
2007 Jul 12: 6.15.07.12 Linux
2007 Jul 12: 6.15.07.12 Solaris
2007 Jul 12: 6.15.07.12 Windows
+ diskall: (JAGag41489) When there is read/write failure Hazard is 
  not seeking to the appropriate location. This is fixed by setting
  seek pointer at appropriate location when there is a read/write 
  failure.
+ diskall: (JAGag41520) Irrespective of the last write call status, 
  Hazard was comparing the read data with expected data. Now Hazard 
  will compare only when write call succeeds.
+ libcli: (JAGag12390) When test process reports Error/Crit messages 
  to the log file at server side, timing issues are taken care by 
  restoring the sleep() statements.
+ hazard: (JAGag44204) On Longhorn x86_64 machines, the architecture 
  in the PROCESSOR_IDENTIFIER is 'Intel64'. Check for this string 
  and the download of respective shar file is included.   
+ initdisk: (JAGag38054,hpux) On HPUX 11.31 with Willow 5.0 v3, 
  Hazard was not recognizing the disks with vxvm volumes. This 
  script is changed to identify the disks on which vxvm volumes 
  are present and eliminate them from testable device list. But, 
  the vxvm volumes are considered for testing.
+ initdisk: (JAGag42416;Solaris) Changed SizeR calculation to avoid 
  malloc failures in server.
+ ioscan/initdisk: (JAGag43408;Solaris) EFI disks were getting 
  eliminated from testing by awk_reject check condition and not 
  by the desired efi_device check condition. The issue was found 
  to be due the non-existence of slice 2 for EFI disks. The files are 
  modified to consider the entire disk name instead of slice2 for EFI 
  disks.
+ initdisk: (JAGag43409;Solaris) While checking for the EFI devices
  ADEV was incorrectly used inplace of RDEV. This is fixed. 
+ stopserver/server: (JAGaf88344) Introduced a new script for stopping 
  a specific server process. 
+ hazard: (JAGaf96633) Removed package list check from hazard script.
+ idsys: (JAGag42605)On HPUX 11.31 idsys captures the SCSI queue 
  depth value incorrectly. The script is changed to use right option to 
  scsimgr to fetch the correct value for SCSI queue depth.

2007 May 6; 6.15 Windows
2007 May 6; 6.15 Unix
+ disevery: (JAGag38493) When LUN size is very small, diskevery was 
  running into some segmentation fault errors due to some uninitialized 
  variables. This is fixed.
+ server: (JAGag38497) Resolved a problem by increasing the size of a 
  buffer used to store the serial number of the device that hazard is testing .
+ initdisk: (JAGag38494;hpux) when there are no devices in a test ring 
  to test, initdisk was entering into an infinite loop. This is fixed.
+ libcorr: (JAGag37889) During raw IO corruption analysis, usage of incorrect
  data format causes SIGSEGV  This is fixed by using the correct format. 
+ diskdt: (JAGag38108)Fixed a small coding error in the diskdt that has crept 
  in while doing 2 TB support changes in Hazard.

2007 Apr 02; 6.15.RC.02 Solaris
+ initdisk: (Solaris) Modified exclude rule for the machines on which zfs is not
  installed.  

2007 Mar 28; 6.15.RC.01 Windows
2007 Mar 28; 6.15.RC.01 Unix
+ diskfs/diskmount/diskraw/idsys/humountall/initdisk/server: (JAGaf57099;Solaris)
  Support for ZFS file system is added.
  The user can use "ftruncate" option to control the behaviour of short writes.
        -o ftruncate=1 truncate the file to N bytes
        -o ftruncate=0 unlink/remove the file and there is no expectation on it.
		       This is the default behaviour.	
  The user can use "P" option to control the hazard stress/load on FS space.
        -P=90 At any point of time, Max of 90% FS space is occupied by hazard data,
	      default is 80%
+ ioscan/diskinfo: (JAGaf44117; Linux) code change to replace deprecated scsi 
  ioctls with SG_IO.
+ client/libcli/libutil/diskmount/exitdisk/humount: (JAGag00319;Windows)The IOs 
  are quiesced prior to sysboot, similar to unix. 
+ server/libutil/libcli/hazard.h/diskmount/initdisk/initvm: (JAGag22464;Windows,Unix)   
  Hazard now creates a fresh file system when a test is started. The "trash" and 
  "fscreate" options are no more supported.
+ diskfs/initdisk/libcli2/mkparts/scandisk/scanvm: (JAGag23059;Windows) Disk Signatures 
  on Win2k3 may get changed across reboots leading to mount errors. Incorporated 
  verification of disk signature. 
+ initdisk: (JAGag33584;Windows) Fixed dmlist usage errors which occurs because of RDEV
  getting NULL.
+ idsys: (JAGag21206;hpux) The Kernal parameters that Hazard displays/set for
  11.31 & 11.23 are corrected.
+ makefile/hmake/mk.shars: (JAGaf76321;Solaris) Dropped support for Solaris 2.6. 
+ initdisk: (JAGae86202,JAGaf96522,JAGag05570,JAGag07154;hpux)  Added two new scripts -  
  init.lun, init.catfiles and initdisk script is modified to check many devices parallelly
  and identify those that can be used for testing. This parallel invocations of scripts
  minimizes the time spent in INIT and SCAN phases when there are large number of LUNs to
  be tested.
  The user can specify the number of threads using 
	-o thrds=N; N = Number of instances of init.lun scripts that we
	            can start in parallel.
+ (JAGaf81904;hpux) Hazard now supports testing of Devices/LUNs whose size is >=2TB on hpux.
+ diskfs/diskraw/diskall/diskevery: (JAGag31399) - For all cat options the sub values 
  preceede the absolute values. The check sequence would be cat[5/6/7]a, cat[5/6/7]b and 
  then cat[5/6/7]. similarly cat3a would be checked before cat3.

2007 Feb 15: 6.14.14.15 hpux
2007 Feb 15: 6.14.14.15 Linux
2007 Feb 15: 6.14.14.15 Solaris
2007 Feb 15: 6.14.14.15 Windows
+ iovm: (JAGag24858;Linux) Code changes to detect LVM volumes correctly on RHEL4.
+ initdisk/initvm: (JAGaf97346;Solaris) Code changes to excludes swap devices 
  from testing. 
  User Notes:
  1. If swap device is internal device (it has only one path), hazard will 
     take care to exclude it from testing 
  2. If the test plan requires swap on an externally connected device, User 
     has to remember the following points in mind.
     (a) Users has to enable MPxIO software so that it will expose only one 
         path to the external world and use that path for configuring swap
     (b) If a Client machine don't have MPxIO software, users has to 
         configure their swap so that it uses a logical volume. When 
         initdisk runs on the  client machine that configured swap, it should 
         see that the various paths are configured into volume management and 
         skip each path, leaving the device alone. When initvm runs on the  
         system it exclude the volumes which are configured for swap.
     (c) If a client machine have neither MPxIO software nor Volume management 
         software, physically users has to comment out all the physical paths 
         to all swap devices in the io.client files.
+ initdisk: (JAGag13789;Windows) When multiple paths are there to a LUN and 
  securepath or MPIO is installed, hazard gives "-" for bdev and rdev entries
  when it probes through alternate(second) path to the LUN. This appears as
  warning messages in the log. initdisk.pl is modified to eliminate these
  warning messages.
+ diskfs: (JAGag05418) The 'Mount=mount_path' message is changed to be more 
  clear.
+ log: (JAGag16029) The log command reports the test Passed/Failed or 
  Passing/Failing message only during the test phase. In the initial phases it
  doesn't print this message.
+ client: (JAGag08516;unix) The "maxdevs" calculation based upon memory has been
  revised to allow a bit more memory (240MB vs 192MB) for the base OS's needs in
  systems with 320MB or more of memory.
+ libcli2: (JAGag24314;hpux) VerifyGdid() function is modified to report the 
  open() failures as Warnings till the maxretry times, after that the RpcPerror
  message is reported as an ERROR.
+ diskraw: (JAGag25976;hpux) Fixed a bug in calculating the elapsed time in 
  milli seconds between two gethrtime() calls.
+ diskfs: (JAGag22317;unix) The code that does umount on every path as one of 
  the early actions in diskfs is removed. Because, this is no longer necessary.
  Also, the users of Hazard are perplexed and distracted by umount messages
  when they are looking at logs. 

2006 Nov 29: 6.14.11.29 hpux
2006 Nov 29: 6.14.11.29 Linux
2006 Nov 29: 6.14.11.29 Solaris
+ idsys: (JAGag20483;hpux) Fixed a bug in loading haztest module, -K option 
  to kcmodule was no more supported in the latest ICs of HPUX 11.31. Also,
  if it is a perf flavour of 11.31 IC then load the haztest.perf module 
  otherwise load haztest.debug module .
+ initdisk/hazard.i: (JAGag00966;Linux) Hazard support for RHEL5 .
+ initdisk: (JAGag23318;Solaris) Fixed a bug in the Hazard Init phase to not 
  report invalid devices as valid devices by initializing SIZEF and SIZER 
  variables to zero.
+ idsys/diskres/diskbdr: (JAGag21207;hpux) Changed the task field of 
  sioc_task_mgmt_t from 
  LUN_RESET
  WARM_TARGET_RESET 
  to:
  SIOC_TM_LUN_RESET
  SIOC_TM_WARM_TGT_RESET
  SIOC_TM_COLD_TGT_RESET
  (as per /usr/include/sys/scsi.h). 

  In idsys-ux.sh,  Modified the way of setting and getting the scsi_log_mask 
  attribute by using scsimgr utility .

+ supershar.mk: Included the windows shar files in the hazard.xx bundle 
+ diskinfo:(hpux) Fixed a bug to build Hazard successfully on IC150 of HPUX 11.31, 
  by including the correct declaration for struct 'scsi_serial'.

2006 Oct 9; 6.14 Windows
2006 Oct 9; 6.14 Unix
+ diskraw: (JAGag19379;hpux) added error checking for gethrtime function.
  Also checks & warns the user if system time go backwards.

2006 Sep 28; 6.14.RC.03 Linux
+ hazard.i: (JAGag15188, JAGag16828) Fixed a bug in reporting the kernel 
  minor number on latest 2.6 kernel versions. 
+ initdisk-lx: (JAGag17684) Fixed a bug in the calculation of  SIZEF and 
  SIZER  for DM devices on SLES10. 
+ idsys-lx (JAGag17094) Enhanced to report the speed of each  processor 
  on a new line in a multiprocessor system.

2006 Sep 06; 6.14.RC.02 Linux
+ initdisk-lx: (JAGag15624) Calculation of SIZER is set right, for SLES10
  which was causing gdid verification failure.
  
2006 AUG 31; 6.14.RC.01 Windows
2006 AUG 31; 6.14.RC.01 Unix
+ server: (JAGab15701 and JAGae64508) New functionality is added to halt the 
  Hazard test when the Errors and Crits that are generated during the Hazard 
  run exceeds a specific Limit Value. User can pass the values to these Limits
  using '-H' option at the hazard command line as shown below.

       -H "Limit1=Value1;Limit2=Value2;.......;LimitN=ValueN"

  User can Pass one or more Limit=value pairs separated by a ';'without any 
  spaces as command line options to Hazard. Following 12 are the valid strings
  that can be used as Limits.

      clusterCrits=<Maximum no of Crits per Cluster> 
      systemCrits=<Maximum no of Crits per Client System> 
      deviceCrits=<Maximum no of Crits per Device in the Cluster> 
      clusterErrors=<Maxumum no of Errors per Cluster> 
      systemErrors=<Maximum no of Errors per Client System> 
      deviceErrors=<Maximum no of Errors per Device in the Cluster>

      ****Following options are meant for HA type tests*****

      clusterCritRate=<Maximum no of Crits per Cluster per hour> 
      systemCritRate=<Maximum no of Crits per Client System per hour> 
      deviceCritRate=<Maximum no of Crits per Device in the Cluster per hour> 
      clusterErrorRate=<Maximum no of Errors per Cluster per hour> 
      systemErrorRate=<Maximum no of Errors per Client System per hour> 
      deviceErrorRate=<Maximum no of Errors per Device in the Cluster per hour>

  Example : 
      For halting the test if total errors = 20 OR total crits = 5

      Shell>> hazard -d tmp -H "clusterCrits=5;clusterErrors=20" client1 client2


+ log: (JAGaf86559) New Functionality is added to report PASS or FAIL status 
  of the Hazard test Run at every CHO message. For non HA tests a single CRIT 
  or ERROR is considered as a failure. For HA tests only CRITs are considered 
  as FAILURE. The  User can specify the error rate or no of errors that can 
  be allowed using the command line options 
  
     '-F errors=J'  
     '-F errorRate=K' 
     
   as the Limit for Errors in HA tests. When this Limit is exceeded then Log 
   command will report the Test as Failure.
+ diskvxfs: (JAGaf69693;hpux) The VxFS metadata prowler supports orgtype3
  inodes.
+ initdisk: (JAGag13622;hpux) redirected error stream of 'find /dev/rscsi'
  command to /dev/null. 
+ libhist/diskfs: (JAGaf57326; hpux) - Async I/O history support is added. The
  History can store upto 4 async write I/O requests.
+ diskfs/diskraw/diskall/diskevery: (JAGag10944) - For all cat options the 
  absolute values preceede the sub values. For example cat5a/cat5b follows cat5.
+ idsys: (JAGaf98428;hpux) Reports the kernel tunable 'scsi_maxphys' on HP-UX
  11.23. 

+ Initdisk/initvm/diskmount/diskfs: (JAGae90032; linux) Support for reiserfs 
  file system is added. To test reiserfs file system use "fstype" option.
  
  -o fstype=reiserfs         #  all  devices will be tested with reiserfs 
  -o fstype=all  (default)   #  all supported file systems - ext2,ext3,reiserfs 

= Dropped support for AIX 5.1
= Dropped support for RedHat Enterprise Linux 2.1 (JAGaf95137)
= Added support for SuSe Linux Enterprise Server 10 (JAGaf88647,JAGaf99693)
+ hazard: (JAGaf96256;linux) Support for pdksh and ksh packages added.
  (JAGag08754) printf made OS/Distro independent.
+ hazard.i: (JAGaf99533;linux) Added a work around for a bug/feature in echo 
  command in SLES 10. "-e" option is used to interpolate backslash characters.
+ initdisk: (JAGaf96339;linux) -  Parted command is used instead of sfdisk on
  SLES 10 (all platforms) for disk partitioning.
  (JAGag09387;linux) -  Fixed a bug in loading dm partitions when 'trash' 
   option is set.
+ ioscan: (JAGag10201;linux) On 2.6 kernel HBA driver information is obtained
  from sysfs file system ("/sys/class/scsi_host/hostX/proc_name").
+ diskmount: (JAGag09399;linux) Fixed a bug in calculation of fsblks during
  fsck/mkfs/mount retry attempts.

  
2006 Jul 24: 6.13.07.24 Windows
= Added Support for Microsoft Windows Vista/Longhorn OS (JAGaf83868)
+ chkdrv/idsys: Load/Check if syspanic driver is loaded
+ diskmount : Volume name is passed as argument instead of 
  mount point for  Format, chkdsk commands.
+ sysprobe : Added error handling for events which does not have
  registry entries in HKLM\SYSTEM\CurrentControlSet\Services\EventLog. 
+ ioscan : IDE devices information on Vista/Longhorn is obtained using
  IOCTL_SCSI_GET_INQUIRY_DATA as IDE information is not present in
  HKLM\DEVICEMAP\SCSI registry key.
+ mkparts: GPT drive support is added for Windows 2003/Vista/Longhorn
  for IA64 and x86_64 platforms. 
+ vgdisplay: Added support for Vista/Longhorn dynamic volumes.
+ rwgdid: Block size is taken as an argument rather than assuming it
  to be 512 bytes.
= Support for Microsoft Windows NT 4.0 is dropped.  
+ hazard: shar bundle name for IA32 plaform is renamed from
  i386-windowsnt40-client.shar to i386-windowsnt50-client.shar

2006 May 08: 6.13.05.08 hpux
+ haztest/idsys: (JAGag00730,JAGag00113,JAGaf98883 ) Build 11.31 haztest 
  bits on ic139 build environment. Debug and perf version of haztest modules 
  are build and bundled.
  idsys: finds the flavor of the kernel and loads the appropriate haztest
  driver module.
+ sysprobe: (JAGaf99396,JAGaf99649) Fixed ioscan compare errors by re-adding 
  code accidentally missed out in 6.13.

2006 Apr 19: 6.13.04.19 hpux
+idsys-ux: (JAGaf98694) Fixed a bug in loading haztest module.

2006 Mar 28; 6.13 Windows
2006 Mar 27; 6.13 Unix
2006 Mar 24; 6.13.RC.04 Unix
= Please note that io.client files built for HP-UX client systems using
  Hazard 6.13 are not compatible with built using 6.12 or previous
  versions of Hazard. And vice-versa.  If you switch from one version
  to the other, be sure to re-create these files.
+ diskfs: (JAGaf86561(b)) Due to problems with certain file systems that
  misbehave (cause corruptions) when data blocks are exhausted (or
  nearly so), the sizes chosen for files is normalized again, just as it
  was in Hazard 6.07 thru 6.11.

2006 Mar 16; 6.13.RC.03 Unix
+ diskall: (JAGaf94706) A calculation need to be adjusted, to avoid an
  IO error, when "-M16384" was used on the 'hazard' command line.

2006 Mar 10; 6.13.RC.01 Windows
+ diskfs: (JAGaf78399) Similar to fsck on unix, chkdsk will 
  be done before formating the volume.

2006 Mar 10; 6.13.RC.02 Unix
+ initdisk: (JAGaf93981;hpux) Changes to the io.client file require a
  change to how utility rscsi_open is called.
  Also...
+ initdisk/initvm/initchgr: (JAGaf92984;unix) Sometimes if initdisk has
  trouble with devices, utility rwgdid can be called with incorrect
  arguments.  The sequelae from that was not handled well, so changes
  have been made to clean that up.

2006 Feb 27; 6.13.RC.01 Unix
+ idsys: (JAGaf83969;unix) If "rmdir /diskfs/*/*" fails, the user is
  provided with instructions on how to proceed.
+ idsys/humountall/diskfs/disksvt: (JAGaf85486) File systems are now
  mounted under /diskfs in a sub-directory that reflects the file
  system type.  For example, on HP-UX, a VxFS file system will be
  mounted on /diskfs/vxfs/didxxxxx.
+ hazard: (JAGaf90314;sunos) Support both sun4u and sun4v architectures.
+ hazard.rc: (linux) Upon reboot, "modprobe sg" is performed.  In some
  distros, the sg driver is not automatically loaded.
+ client: (JAGaf85485) In support of CFS testing (but available on all
  platforms), the user can specify how the "devices under test" are
  selected on client systems:
    -o deviceset=sameset	# all clients start at the beginning of
				# their set and work their way thru; the
				# desired behavior for CFS testing
    -o deviceset=dividedset	# each client starts at a distinct point
				# and progresses from there; the only
				# behavior since something like 6.04
    -o deviceset=randomset	# each client randomly selects the
				# devices to test; the behavior in 6.03

  Of course, this only comes into play when the total number of devices
  to test exceeds "Maxdevs".
+ initdisk/initvm/scandisk/scanvm/diskfs: (JAGaf54143;hpux) Support for
  CFS and CVM (Veritas Cluster File System and Cluster Volume Manager)
  on HP-UX 11.23 has been added.  We believe the code should work as-is
  for HP-UX 11.31, but CFS and CVM are not available for 11.31 as of
  this writing.
  The user can use 'cfs' option to enable/disable CFS testing.
    -o cfs=0			# disable CFS testing(default)
    -o cfs=1			# enable CFS testing

  Using fstype and cfs options
    -o fstype=hfs  -o cfs=[1/0]	# all devices will be tested with HFS
    -o fstype=vxfs -o cfs=0	# all devices tested with VxFS
    -o fstype=vxfs -o cfs=1	# CFS and vxfs tested on alternate CVM 
				# volumes and VxFS tested on other devices

+ initdisk/initvm/diskfs: (JAGaf82337,JAGaf86862) In order to minimize
  the number of file system makes, logic was introduced into diskfs in
  Hazard 6.07 to make them only when necessary (e.g., a FS does not
  already exist on a testable device).  In support of that logic,
  initdisk/initvm were changed (6.06.04.36) to scribble over the first
  few MB's of a device/volume (some folk refer to this as "trashing" the
  disk, altho the trash command was not used to do this).  This worked
  fine until folk started booting from shared devices where some of the
  systems sharing the devices did not understand EFI format devices.
  The result was that systems not EFI-aware scribbled on EFI boot
  devices.  To help users avoid this, the "trash" option was introduced
  in Hazard 6.12 (see notes for 6.11.06.30).  If the user specified
  "-otrash=0", then no scribbling would occur (the default being to
  scribble away).  Unfortunately, an HP-UX defect on PA platforms broke
  things so that EFI disks got scribbled anyway.  That's been fixed and/
  or worked around, but a strong plea from folk with influence has led
  to two changes:
  a) The default value for the "trash" option is now 0/off.  So, if you
  want initdisk to scribble devices/volumes, so that diskfs will make a
  new file system (but only once!), specify:
    -o trash=1
  in a run that includes the Init phase.
  b) If you want default "trash" behavior (no scribbling), but you _do_
  want diskfs to create a new file system, specify:
    -o test==diskfs?fscreate=1
  Just be aware that diskfs will make a file system not just once, but
  several times, on any disk that's shared, or when maxdevs < totalDevs,
  or during a -c16 run.  These "gratuitous" file system makes, by the
  way, were standard behavior prior to Hazard 6.07.
+ initdisk/scandisk: (JAGae86440;hpux) Have been adapted to handle both
  legacy and new DSF's on HP-UX 11.31.
+ sysprobe/ioscan: (JAGaf87045(b);hpux) The device probing code in
  legacy HP-UX kernels does not retry (or at least not enough),
  resulting in "false positive" ioscan miscompares when testing arrays
  with modest command input queues (when under a heavy-enough load, a
  probe, TUR, or Inquiry may easily be rejected by such an array).  For
  those who would like to avoid these false positives, an alternative
  now exists on HP-UX platforms by a new option ("ioscan") to zero (0).
  Also...
  (JAGae86439;hpux) This same option can also be used, via a value of
  three (3), by users testing on HP-UX 11.31 to specify that both legacy
  and new DSF's shall be reported (vs. the default of new DSF's only):
    -o test==sysprobe?ioscan=0 # Hazard's own ioscan
    -o test==sysprobe?ioscan=1 # HP-UX ioscan; legacy DSF's
    -o test==sysprobe?ioscan=2 # HP-UX ioscan; new DSF's (11.31 default)
    -o test==sysprobe?ioscan=3 # HP-UX ioscan; both DSF's
  Also...
  (JAGaf87656;linux) Hazard's own ioscan is now invoked with -v so that
  any errors are listed in /tmp/ioscan.err (backup in /tmp/ioscan.ebk).
  Also...
  (JAGaf66541(a);linux) Failed TUR's (TestUnitReady) and Inquiries are
  retried up to 3 times.
+ iodtc: (JAGae80166;hpux) Similar to changes to sysprobe (above), users
  testing on HP-UX 11.31 can request that /sbin/ioscan list new, legacy,
  or both types of DSF's (device special files).  As with sysprobe, the
  default is to list only new DSF's.  If the user wants any systems to
  have legacy DSF's (only) be listed, specify the list of clients by
  hostname in a comma-separated list:
    -o legscan="client1[,..]"
  And if the user wants any systems to have both new and legacy DSF's be
  listed, specify the list of clients by hostname in a comma-separated
  list:
    -o ioscanB="client1[,..]"
  None of these options are necessary on pre-11.31 systems.  However,
  the format of io.client files for all HP-UX systems has changed.
+ diskall/diskfs/diskraw: (JAGaf88437) If a block has any corruption,
  both expected and received (read) btags are pretty-printed, not just
  the received btag (block tag).
+ diskfs: (JAGaf71105;hpux) A bug in handling output from fsdb(1m) was
  corrected.
  Also...
  (JAGaf83970) If the gdid verification fails, it needs to alert the
  sibling processes before exiting. (It was not doing so, and this led
  to files on the root disk and PTO's.  In addition, the open's and
  read's of the gdid verification have been made more robust.)
  Also...
  (JAGad64556;unix) An "fsck -y" (full fsck) failure during a recovery-
  type run is an ERROR, but a CRIT otherwise (because metadata should
  not be mangled during, say, a -c8 run).
+ syspanic: (JAGaf43741;linux) Hazard provides a pre-compiled module for
  panicking a Linux system.  Unfortunately, some distros reject this
  module, resulting in a panic failure (granted, shutdown will be used,
  instead).  To enable users to build a module that should work, we now
  provide panic_module.c and (a) makefile.
+ sysboot/exitdisk/humountall: (JAGaf80195;unix) The code that does a
  "best effort" to ensure that diskfs processes have terminated before
  attempting to unmount/umount Hazard's file systems is now inside
  humountall, a "worker" script shared by exitdisk and sysboot.
+ scu: (JAGaf91520,JAGaf91892;hpux) Support new IO stack DSF's.

2006 Jan 10; 6.12.13.10 Unix
= (JAGaf67167;hpux) Improved method for building the 'haztest' DLKM for
  HP-UX 11.31.
+ iovm/initdisk: (JAGaf70513;sunos,hpux) If a shared lun is managed by
  VxVM on one client system, the other systems will recognize this and
  leave it alone, considering it untestable.  While this was already
  being done on HP-UX, the code has been improved and made consistent
  across platforms.
+ server: (JAGaf86561(a)) Due to problems with certain file systems that
  misbehave (cause corruptions) when data blocks are exhausted (or
  nearly so), the calculation of the number of files that a file system
  can presumably support ("bcount") is now less aggressive than in 6.12,
  and in line with that of versions 6.07 to 6.11. (cf. ver. 6.06.04.44)
+ diskfs: (JAGaf87529;hpux,linux,sunos) Even if not apparently needed,
  a "full" fsck is occasionally performed as part of the "fsck before
  mount" protocol.  If the user wishes to control the frequency, they
  may do so via:
    -o test==diskfs?fsckfreq=#
  A value for "#" of 0 means "only if necessary, but not normally".
  The default value varies by device ID ("did") so as not to cause
  clusters of fsck's.

2006 Jan 5; 6.12.13.05 Unix
+ sysmon: (JAGaf74134;sunos) We decided to take a completely different
  approach to logging diagnostics on Solaris, one that takes advantage
  of the categorization already provided by the kernel.  Specifically:
    kern.emerg	-> CRIT
    kern.alert	-> CRIT
    kern.crit	-> CRIT
    kern.err	-> ERROR
    kern.warning-> DIAG/diag, as appropriate
    kern.notice -> DIAG/diag, as appropriate
    kern.info	-> DIAG/diag, as appropriate
+ sysprobe: (JAGaf87045(a);hpux) To avoid gratuitous "ioscan compare
  failed" ERRORs (which can occur if an array is under a heavy IO load
  and so rejects some IO requests, which the kernel does not retry),
  we have implemented a Hazard-specific "ioscan" for sysprobe to call.
  It will retry open's, TUR's, and Inquiries.

2005 Dec 22; 6.12.12.22 Unix
= (JAGaf82311;hpux) Dropping support for local-bus SCSI tape drive
  testing.  Scantape and taperaw are no longer bundled.
+ iodtc/sysprobe/ioscan: (JAGaf80405;linux) In order to avoid "false
  positive" ioscan miscompares, if the device class is "cdrom" and
  the driver is "ide-default", then force the driver to "ide-cdrom".
+ coverage.pl: (JAGaf43427) Diskall is now supported, in addition to
  diskraw and diskfs.
+ initdisk/iodtc/ioscan: (JAGaf69898;linux) DeviceMapper devices
  (/dev/mapper/*), as reported by the 'multipath' tool, are now
  supported.
+ initdisk: (JAGaf70257/partial;sunos) EFI disks are now detected.
  For the interim, they are declared untestable.
  Also...
  (JAGaf81452;hpux,linux,sunos) EFI disks are detected in a consistent
  manner across these three platforms (see JAGaf38753, ver. 6.10.09.09).
  In particular, the use of idisk on HP-UX has been dropped as it's
  unreliable on PA and unnecessary on IA.
+ diskres: (JAGaf85208) In a slight amendment to JAGaf40854's fix, if
  the ioctl returns EINVAL, this harmless event is reported at "log"
  level.
+ diskfs: (JAGaf85303;linux) The "short" fsck now uses the same OFFn
  value as other platforms.
+ scu: (JAGaf85693;linux) Add support for bus and device reset.

2005 Dec 21; 6.12.12.21 Windows
+ idsys/sysmon (JAGaf78404) uptime now checked in idsys and any problems
  in retriving uptime is notified to the user. sysmon uses improved uptime.
+ diskfs/scandisk (JAGaf81005) Fixed a broken code in diskfs to support 
  dual path testing. Scandisk modified to use the same path for fs and 
  different paths for raw testing if only a single fs path is available.

2005 Nov 16; 6.12.11.16 Unix
= (JAGaf56354;linux) Hazard now supports file system IO and raw IO
  testing for LVM (2.4 kernel systems) and LVM2 (2.6) volumes, using
  alternate did's (volumes). Support for shared logical volumes has been
  demonstrated.  To configure a device into volume management, we
  recommend:
    1. Use fdisk to delete any partitions on the device (DSF).
    2. pvcreate DSF
    3. vgcreate VG DSF  # where VG is the name of the volume group
    4. vgdisplay -v VG | grep Total.PE
       Take the total number of PE's (physical elements), divide by 2.
       N = PE/2
    5. lvcreate -l N VG
    6. lvcreate -l N VG
  This gives you two equal-sized logical volumes on one device.
  Note:  Should anyone wish to test simultaneous FS and raw IO to a
  given volume, please get in contact so we can build special bits.
= (JAGaf81916) Code cleanup / simplification.
= X86 Linux server-side bits are now compiled on RH 7.2 (2.4 kernel).
= io-time-stats/logstat:  Output now assumes a screen that is at least
  100 characters wide.
+ client: (JAGaf79427;unix) If the server process does not start the
  Test phase due to ERRORs during previous phases, the client process
  may record (in haz.errlog) some (harmless) error messages regarding
  shared memory.  This has been claned up so that shared memory is only
  detached and removed if it was created in the first place.
+ initdisk/diskinfo: (JAGaf52274;hpux) Changes to HP-UX 11.31 include
  files, including data structures, require a change to our diskinfo.
+ diskinfo: (JAGaf80825/partial;hpux) If diskinfo is invoked with the
  -v flag, and if the disk is an EFI/GPT disk, fields from the GPT
  header and the partition entries following are printed.
+ diskinfo: (JAGaf81168/partial;linux) For Linux as for HP-UX.
+ diskdt/diskmiwr/disksvt/libspawn: (JAGaf78391) If a SIGTERM signal is
  received, don't log it as an ERROR.
+ sysmon: (JAGaf77288,JAGaf79825;hpux) Treat any diagnostic with the
  word/substring "fatal" in it as a CRIT.  Filter out an innocuous VxVM
  message that contains the word/substring "reset".
+ server: (JAGaf80196) When a client system is about to go ALIVE after
  a panic or reboot, four different times will be logged:
  . seconds since reboot, per "uptime" on the client system
  . seconds since DYING; that is, since the reboot/panic proces started
  . seconds since the last "heartbeat"
  . seconds since the client system was declared DEAD
+ diskfs: (JAGaf80492;unix) For the same reason that reboots/panics are
  not permitted during a file system make, so they are also not done
  while an fsck that might repair file system metadata.  In addition,
  during HA/recovery-type runs (e.g., -c16), full fsck's are performed
  more frequently than previously, in order to catch any metadata issues
  before they degenerate into major trouble.
+ diskraw: (JAGaf81760;linux) If it appears during a -c15 run that the
  system's clock is being running backwards (negative difference between
  succeeding calls to gettimeofday()), treat IO completion time as 1 ms.

2005 Sep 29; 6.12.09.29 Unix
= (JAGaf74020) Copyright lines added to scripts.
+ diskall/diskfs/diskraw: (JAGaf75178) A more efficient way of writing
  btags has been implemented.
+ initvm: (JAGaf74467;sunos) Turned out to be a build area symlink
  problem that missed the correction made for JAGaf69027.

2005 Sep 27; 6.12.09.27 Unix
+ diskall/diskfs/diskraw: (JAGaf74449) Corruption analysis is now more
  aware of when it can and cannot compare block tags (aka "btags");
  to whit, it can if it knows what to expect, and cannot when it
  does not.

2005 Sep 23; 6.12.09.23 Unix
= (JAGaf74021) Netware-specific code removed.
+ diskall/diskevery/diskfs/diskraw: (JAGaf76022) As a consequence of
  addressing JAGaf72019, btag bytes were not getting displayed (in hex)
  during corruption analysis output.  Several Hazard users have asked
  for these (first 16) btag bytes to be displayed, and so now we do.
+ diskfs/initdisk/initvm: (JAGaf65724;hpux) Diskfs is not using labelit
  any more to mark VxFS file system as "created by Hazard" (for the
  benefit of initdisk and initvm); rather, the presence of a "gdid" is
  sufficient.
  IMPORTANT NOTE:  Now, more than ever, please remember that if you
  take a device out of (Hazard) testing, you should first scrub it
  with the 'trash' command before putting it into service for some
  other purpose.
+ diskall/diskevery: (JAGaf74983) Regularized certain ERROR and CRIT
  messages so they're the same as in diskraw.

2005 Sep 20; 6.12.09.20 Unix
= (JAGaf76305) Support for AIX 4.3.3 has been dropped as HP no longer
  supports that platform.  Hazard versions that supported it were:
  6.06, 6.09, 6.10, 6.11, and 6.12.
+ disfks: (JAGaf74691;AIX) ReportDeviceID is no longer called as part
  of the documentation surrounding a corruption, because the raw device
  must be opened, and that's not possible for diskfs to do on AIX.
+ diskall/diskevery/diskfs/diskraw: (JAGaf59022(b)) Replaced value
  alignment function with macro calls.

2005 Sep 1; 6.12 Unix
2005 Sep 1; 6.12 Windows
= Formal release.  Please see the Release Notes posted to the Hazard web
  site.  In particular, known issues and limitations are described in
  the notes.
= Please note that io.client files and scan.client files built for client
  systems using Hazard 6.12 are not compatible with built using 6.11 or
  previous versions of Hazard. And vice-versa.  If you switch from one
  version to the other, be sure to re-create these files.
= Support for Netware has been dropped.  Hazard versions that supported
  it were:  6.09, 6.10, and 6.11.  Kudos go to the Hazard team in India
  for their excellent work in developing support for this OS.

2005 Aug 24; 6.12.RC.03 Windows
2005 Aug 23; 6.12.RC.05 Unix
+ diskall/diskevery/diskraw: (JAGaf70724) Same cat3a code as for diskfs
  (see 6.11.08.05) added to these others.
+ diskfs: (JAGaf72776(b);linux) If an ENOSPC write occurs, truncate the
  file (we've seen an ext3 issue we're trying to work around).

2005 Aug 17; 6.12.RC.04 Unix
+ diskres: (JAGaf72774) The "is my lifetime finished?" test was in the
  wrong place, causing delayed exits.  Delayed exits caused problems in
  non-rebooting nodes for any test configiguration involving diskres.
  The problem was that over the course of the run, if and when maxdevs
  was less than "totalDevs", ever fewer devices were getting tested.
+ client: (JAGaf72777;unix) Log "nice" and "wait" option values if
  they're non-default (i.e., specified by the user).  Correct slightly
  the frequency of calling wait3() (vs. doing socket reads).
+ diskfs: (JAGaf72776(a)) If short/ENOSPC writes occur, FileTruncate()
  needs to verify size by calling stat() (because we've seen a case
  where X bytes were written (short write) but 0 bytes were read, and
  stat said 0 bytes).  Also, be more aggressive in limiting write sizes
  if short/ENOSPC writes start to occur.

2005 Aug 15; 6.12.RC.03 Unix
+ diskfs: (JAGaf56051-reprise) The timestamp in a diskfs block tag will
  be printed in human-readable format in the event of a corruption.

2005 Aug 11; 6.12.RC.02 Windows
+ diskfs: (JAGaf72246) Fixed open device failures while retrieving the
  device ID.

2005 Aug 9; 6.12.RC.02 Unix
+ diskfs: (JAGaf72019) A read corruption when btags are in effect was
  mis-characterized as a read-and-write corruption because btags were
  not taken into consideration in some parts of corruption analysis.

2005 Aug 9; 6.12.RC.01 Windows
+ diskfs: (JAGaf71821) Handle the bogus exit status reported by the
  mountvol command.

2005 Aug 8; 6.12.RC.01 Unix
2005 Aug 5; 6.11.08.05 Unix
+ diskfs: (JAGaf71532) Limit the set size for file allocations to 1024;
  this is the historic size.
  Also...
  (JAGaf70724) Introduced option "cat3a" to permit a sequence of actions
  after corruption analysis.
    -o test==diskfs?cat3a=#
  Whatever action the user requests for "cat3a" will be executed right
  after the action for "cat3" (if any).
  Also...
  (JAGaf71821;windows) Adjusted Win API call.
+ diskdt/dt: (JAGaf71506) Slight adjustment so as not to overwite the
  "gdid area".

2005 Aug 2; 6.11.08.02 Unix
+ hazard: (JAGaf71305;sun) Support for x86 Solaris 10 has been added;
  support for x86 Solaris 9 has been dropped.
+ diskall/diskevery/diskfs/diskraw: (JAGaf56051) Basically a re-write
  of the corruption analysis function. Pls see Haz-RFC-Corruptions.doc
  in Hazard's SharePoint or the 6.12 Release Notes for details.
  Also...
  (JAGaf71222) Certain devices (e.g., on Sun systems) do not support
  the device ID page (see JAGaf68122); this case is now handled.
  Also...
  (JAGaf67860) Since the virtual memory page size can vary from OS to OS
  the hard-coded numbers used during corruption analysis have been
  replaced with a variable whose value is obtained from the OS.
+ diskall: (JAGaf70850) The IO size selection strategy is now akin to
  mi_wr's; i.e., randomly selected sizes that are powers-of-2 X 1K.
+ diskfs: (JAGaf56782) If a "metadata prowler" exists to re-read a file,
  the LBA information is saved so that it can be listed during
  corruption analysis.
  Also...
  (JAGaf71047;hpux) A too-small buffer could sometimes cause a SIGSEGV
  during the re-read of a VxFS file.
  Also...
  (JAGaf55010;unix) The restriction on combining the direct IO and
  sync IO flags has been removed. {see 6.07.09.05, where it was stated:
  It is invalid to request that all opens use both O_DIRECT & O_*SYNC.}
  Also...
  (JAGaf62762) If the file sync during the read-only pass (see version
  6.10.12.08) should fail, it's most prudent to have no expectation
  for the while when it's next read. (This completes the trilogy; the
  other two were JAGs 61855 and 62250.)
  Also...
  (JAGaf70455;linux) The ext2 metadata re-reads are unreliable on 2.4
  kernels.  Sometimes the requested read returns all zeros, causing an
  incorrect result in corruption analysis (reporting "read and write
  failure"), and analysis of re-read data (which is incorrect).  Also,
  the lba reported by the metadata prowler is a partition lba, rather
  than the real lba, causing confusion to end users.
  Updates:
  . add "zero byte" detection logic and warnings so users aren't alarmed.
  . report the real lba, rather than the partition lba.
  . improve the error checking done on pread() calls.
  . changed %25s to use new AROF define added to hazard.h
  . change RpcLog(6," to "RpcLog(rpcLevelSpecial," (use enum definition)
  . add Direct I/O on 2.4, for distro's which implement it.
    (for example, 2.4.21-4.ELsmp on hazx8600 supports DIO, and thus
    resolves the unreliable pread()'s previously excountered.)
  Also...
  (JAGaf46267,JAGaf68113;linux) Ext3 files may now be re-read using a
  "metadata prowler", just as with ext2 files, in case of a corruption.
+ scanchgr/scandisk/scanvm/diskraw: (JAGaf67863) The "async" attribute
  is generic, and not path-specific, so the manner of listing it has
  changed.
+ diskres: (JAGaf40854) Some code organization changes that should not
  affect how diskres does its job, altho users will see a message if
  a SCSI bus reset cannot be performed by the subject HBA/driver.
+ diskinfo: (JAGaf24601;linux)
  SCSI disk vendor ID/product ID is prefixed with "SEAGATE_" if it starts with "ST"
+ syspanic/haztest: (JAGaf68366;hpux) Code refinements.

2005 Jul 15; 6.11.07.15 Unix
+ diskall/diskevery/diskfs/diskraw: (JAGaf34639) To provide driver
  developers with finer-grained control over actions to take in the
  event of an open, read, or write failure, the members of the "cat"
  family (Crit Action Time family) can be summarized as:
    -o cat5a=#		# ERROR_IO_DEVICE (Win) / EIO (Unix)
    -o cat5b=#		# ERROR_DEVICE_NOT_CONNECTED (Win) / ENXIO (Unix)
    -o cat5=#		# any failure (the general case)
    -o cat6a=#		# ERROR_IO_DEVICE (Win) / EIO (Unix)
    -o cat6b=#		# ERROR_DEVICE_NOT_CONNECTED (Win) / ENXIO (Unix)
    -o cat6=#		# any failure (the general case)
    -o cat7a=#		# ERROR_IO_DEVICE (Win) / EIO (Unix)
    -o cat7b=#		# ERROR_DEVICE_NOT_CONNECTED (Win) / ENXIO (Unix)
    -o cat7=#		# any failure (the general case)
  This extends what was done in 6.05.06.14, 6.05.13.50, 6.07.nw.09, and
  6.07.09.17.
+ diskall/diskraw: (JAGaf68911) The "e" count in a "stop" message
  reflects the number of errors encountered between "start" and "stop".
  In most IO failure cases, the error count is incremented ("e++;");
  however, this was not being done for lseek-type failures.
+ diskall: (JAGaf42603) Block tagging ("btags") is now supported.
  To make use of this feature, specify:
    -o btags=1
  on the command line of your -c5/-c6 Hazard run.  The block tag used
  is the same as for diskraw (see versions 6.06.04.D4 and 6.11.03.18).
+ diskraw: (JAGaf67954;aix) It's acceptable for diskraw's rawOffset to
  start at "sizeA - sizeR" on AIX.  Doing so simplifies a bunch of code.
+ diskraw/io-time-stats/logstat: (JAGaf23849) SISL and the HA folks
  revised the acceptable vs. unacceptable IO completion times.  So,
  while this change is HP-UX-related, we implement for all platforms
  because HP-UX is the "gold standard" for -c15 IO completion times.
  The IO completion time "buckets" are now as follows:
    # of ops that took <=2 second to complete
    # of ops that took > 2 but <=17 secs to complete
    # of ops that took >17 but <=32 secs to complete
    # of ops that took >32 but <=45 secs to complete
    # of ops that took >45 but <=60 secs to complete
    # of ops that took >60 but <=90 secs to complete
    # of ops that took >90 but <=180 secs to complete
    # of ops that took >180 seconds to complete
+ diskfs: (JAGaf67431) Windows is more sensitive than Unix.  If a read
  system call offers to read more bytes than are in the file (which is
  OK, in general) but the buffer wouldn't be big enough if there were
  more bytes than there are, Windows returns a failure.  In other words,
  Windows checks before the call, but Unix checks during the call.
  Hazard code sometimes caused a read failure on Windows where it never
  did on Unix.  Code has been adjusted to work on Windows, so naturally
  it also works on Unix.
  Also...
  (JAGaf60177;unix) In the case of apparent metadata corruption, lots
  more information is being printed.  Feedback is welcome.
+ server: (JAGaf65148) A semantic difference between HP-UX/Tru64 and
  Linux regarding the handling of alarm signals had made Linux systems
  poor Hazard servers for -c15/-c16 runs.  By switching from using
  signal() to sigaction() we believe we have remedied this problem.
+ ioscan/iodtc/diskinfo/initdisk: (JAGaf69414;linux) A change to the
  CCISS driver means more controllers and luns per controller are
  supported.
  Also...
  (JAGae66262;linux) IDE-type devices (/dev/hd*) are now supported.
+ initvm: (JAGaf69027) The changes to sizeA/sizeR described for
  JAGaf64375 missed this script.  The oversight has been corrected.

2005 Jul 13; 6.11.07.13 Unix
+ server/initchgr/initdisk/initvm*/diskall/diskevery/diskfs/diskraw/
  diskdt/disksvt: (JAGaf64375) The calculations for attributes "sizeA"
  and "sizeR" are adjusted so that the "gdid area" (the last 8K of a
  device) lies outside (i.e., just past) the areas defined by the
  attributes. [*] But see JAGaf69027, above.
+ diskall/diskevery/diskfs/diskraw/diskdt/diskmiwr/disksvt:
  (JAGaf68122) Upon data corruption detection, get / display a device's
  WWID (world-wide ID or device identifier). (In the case of volumes,
  nothing is printed.)
+ diskall/diskevery/diskfs/diskraw: (JAGae83235,JAGae86911,JAGae87974)
  The read / write history was not printed correctly during data
  corruption analysis performed by diskall.  A major revamp was
  performed, affecting all the test processes that use Hazard's data
  pattern.
  Also...
  (JAGaf68335) Code changes (var names) with no change to behavior.
+ diskmiwr/mi_wr: (JAGaf66623;hpux) Since mi_wr does not take a command-
  line parameter to control the extent of its IO (unlink 'dt' and the
  SVT* tools), mi_wr needed adjusting so that it won't scribble data
  over the so-called "gdid area".
+ server: (JAGaf67857) Corrected error in calculation of "ralloc".
+ initdisk/trash: (JAGaf63234;linux) Improvements were made to the
  scripts to better support trashing the file systems on devices.
  Also...
  (JAGaf68630;linux) Any failures of the 'raw' command are caught and
  reported.
+ diskbdr: (JAGaf66798;hpux) The 11.31 IO stack has alterted the task
  management commands supported.  They are now: WARM_TARGET_RESET,
  COLD_TARGET_RESET, and LUN_RESET.  The user who is testing on HP-UX
  11.31 may select any or all of these commands via:
    -o test==diskbdr?bdr=1		# warm target reset
    -o test==diskbdr?cold_reset=1	# cold target rest
    -o test==diskbdr?lun_reset=1	# lun reset
  For a given reset, the reset to apply is randomly selected.

2005 June 30; 6.11.06.30 Unix
+ client/server/diskall/diskevery/diskfs/diskraw/diskdt/disksvt/
  init*/scan*: (JAGae68415,JAGaf61531,JAGaf66937) Supported added to
  Hazard for maximum IO sizes other than 256KB; specifically, from
  128KB to 16384KB (16MB).  The user specifies the maximum IO size
  via:
    -M #
  where '#' is the size in kilobytes (KB); the size must be a power
  of 2.  For maximum IO sizes other than a power of 2, choose the next
  highest power and pass that as -M's argument, while limiting the
  IO sizes via -oriomax and/or -ofsiomax.
+ client: (JAGaf62777;aix) Had a case where processes were being
  respawned ad infinitum.  Corrected handling of maxfsdevs and maxdevs
  for AIX.
+ diskall/diskevery/diskfs/diskraw/diskdt/disksvt: (JAGaf64366) If
  the gdid found does not match the gdid expected, what was found was
  printed, but there was a glitch in the format string, which has
  been corrected.
+ diskfs/initchgr/initdisk/initvm: (JAGaf51693;unix) The "trash"
  option is now supported.  If the user specifies:
    -o trash=0
  on the command line, then TBD...Robin
  And if the user specifies.
    -o test==diskfs?trash=1
  on the command line, then TBD...Robin
  The default value is 0/off for diskfs and 1/on for the Init phase
  scripts.  Therefore, -otrash=0 should _only_ be used when also
  specifying -S on the command line.
  {See subsequent changes in 6.13.RC.01.}
+ diskfs: (JAGaf12097) When "# bytes read != # bytes written", we take
  a look at file's size as returned by stat().  If stat's size matches
  the expected size, it's not metadata corruption but short/long read.
  Also...
  (JAGaf52065) Since support for direct IO was added to diskfs, users
  have suggested it would be appropriate to have an option whereby file
  IO's are not split.  As in diskraw, this is now supported via option:
    -o test==diskfs?splitio=0
  Since the default behavior is to split IO's, the default value for
  this option is obvious.
  Also...
  (JAGaf64847;unix) The values of i-node fields were not being printed
  correctly in certain 32-bit binaries.  Fixed thru type casting.
+ syspanic/haztest: (JAGaf60814;hpux) Changes in HP-UX 11.31 required
  changes in Hazard code.
+ log: (JAGaf66337) The -S option was not working quite right when
  combined with the -I option.  Corrected.

2005 Jun 21: 6.11.06.21 Windows
+ diskres/libnt: (JAGaf67429) Added support for bus reset on Win2003.

2005 Jun 09: 6.11.06.09 Windows
+ diskfs/diskmount: Windows 2003 c16 tests: reverted back Unmount code to
  6.10.10.28; does not re enable the volume after unmount.
  Also...
  (JAGaf60366) Added Cluster resource fail over support.
+ diskres/diskabrt: (JAGaf23893) Added support for MS Cluster Disks.
+ sysmon: (JAGaf52667,JAGaf53666,JAGaf28866) Report only system event log
  messages since the last reboot.
+ libcli: (JAGaf41630;Win) Added catN=6; sends EVA "Drop Dead" command.

2005 May 5; 6.11.05.05 Unix
+ diskraw: (JAGaf62122) Similar to diskall's "start" message (see
  JAGaf52182), diskraw's message now lists the DSF being opened.
+ diskfs: (JAGaf62250) If a file's truncation fails, it is probable
  that any follow-on write (if it succeeds) will yield a false file
  size expectation, so it's wiser to just skip the write entirely.

2005 May 4; 6.11.05.04 Unix
+ diskall: (JAGaf50978) Added a "seconds-per-IO" statistic, just like
  diskraw's.
+ diskabrt/diskbdr/diskres: (JAGae86445;hpux) HP-UX 11.31 adds two new
  ioctl commands:  SIOC_TASK_MGMT and SIOC_IO_EXT.  The latter is used
  for pass-thru IO in diskabrt; the former is used in diskbdr and
  diskres to provide a wider array of reset types.
+ diskfs: (JAGaf61855) If a file's removal (unlink) fails, all bets are
  (apparently) off for the file's size and contents, so have no
  expectation for it.  OTOH, if the unlink succeeds, expect a size of
  0 bytes.
  Also...
  If a file write fails, there's no need to unlink the file (as was
  done previously).  Rather, since all bets are off for the file's size
  and contents, simply have no expectation for it.

2005 Apr 29; 6.11.04.29 Unix
+ diskfs: (JAGaf61225) Option "unlink" controls whether or not files
  are occasionally removed/deleted/unlinked.  The default is to do so.
  If the user wishes for files never to be removed, specify:
    -o test==diskfs?unlink=0
  Also...
  (JAGaf61543) If there's a "long read" (n > expSize), check if need
  to truncate.

2005 Apr 27; 6.11.04.27 Unix
+ diskfs: (JAGae73819) Per-block "btags" are supported.  And pursuant
  to this change, the size of a "block" during corruption analysis is
  now the "natural" blocksize, just like diskraw, diskall, et al,
  instead of the traditional 1k block.  PLEASE NOTE THIS IMPORTANT
  CHANGE.  The fields of a diskfs btag (block tag) differ from
  diskraw's (see version 6.06.04.D4); they are:
    ts 	  // 4 bytes - time stamp of write
    count // 2 bytes - blocks/file written on this pass
    block // 2 bytes - relative offset of this block
    np    // 1 byte  - path instance # used in IO
    gpid  // 3 bytes - test process that did the write
    file  // 4 bytes - file #
  To make use of this feature, specify:
    -o test==diskfs?btags=1

2005 Apr 19; 6.11.04.19 Unix
+ diskall/diskdt/diskevery/diskfs/diskmiwr/diskraw/disksvt: (JAGaf26669;
  hpux) The user may now specify a persistent ("sticky") per-lun SCSI
  queue depth via command line option:
    -o qdepth=#
  where '#' is the desired SCSI queue depth.
  {Note: There are many factors to consider in deciding an "ideal" value
  for SCSI queue depth, too many to describe here.  In general, we can
  say that lower values reduce IO load and higher values increase IO
  load.  The risk to higher values is that the receiving device will be
  overwhelmed.}
+ diskall/diskevery/diskfs/diskraw: (JAGaf59022(a)) Further refinements
  implented relative to the value alignment code changes for JAGaf43665.
+ disksvt: (JAGaf58434) Use bs= value instead of riomin/riomax option
  values when these latter have the same value.
+ trash: (JAGae91589;unix) The trash command (binary) has been replaced
  with a script. The script will call 'dt'. The interface is unchanged.

2005 Apr 12; 6.11.04.12 Unix
+ diskall/diskdt/diskevery/diskfs/diskmiwr/diskraw/disksvt: (JAGae91672)
  When a user specifies that a script be invoked at any one of the
  "Critical Actions - Time N" points in time via command line options:
    -o catN=5 -o ccmdN=/absolute_path_to_script
  (where 'N' is one of the times, 0 - 7), a series of arguments are now
  passed to the script.  These are:
    test	The test process calling the script.
    callpt	The point in time; e.g., DETECT, REREAD, ANALYSIS, etc.
    file	The corrupted file (diskfs).
    error	The errno/GetLastError() value.
    bdev	The block DSF.
    rdev	The raw DSF.
    bus		The "bus" scan attribute for this DSF.
    tid		The "tgt" scan attribute for this DSF.
    lun		The "lun" scan attribute for this DSF.
    /* next three are Linux only */
    adev	The "all device" DSF (vs. partition DSF).
    wdev	The /dev/raw/raw* DSF.
    gdev	The /dev/sg* DSF.
  Also...
  (JAGae93961,JAGaf41630;unix) A user now has additional choices when
  specifying an action to be taken at any one of the "catN" points in
  time.  The general syntax for this command line option is:
    -o catN=#
  where '#' is one of ten (10) possible actions:
    1 -> panic the system
    2 -> halt the hazard run on all systems
    3 -> write block's worth of "0xdeaddead"
    4 -> issue a SCSI bus reset
    5 -> invoke a script (specified via -occmdN=..)
    6 -> issue the EVA "drop dead" command
    7 -> issue a SCSI controller reset
    8 -> issue a SCSI device reset (BDR)
    9 -> issue a SCSI LUN reset
   10 -> issue all SCSI resets until one succeeds (tried in this order:
	 lun, device, bus, controller)
  {Note: The code implementing this is complete for HP-UX and most other
  Unix platforms, but is still under development for some platforms.}
+ diskfs: (JAGaf24575) When a user specified that a SCSI bus reset be
  issued at any one of the "catN" points in time via command line
  option:
    -o catN=4
  there was a problem when the file descriptor passed in was for a file.
  The interface has been adjusted to permit passing in useful data, so
  that the reset can be done, insofar as possible on a given platform.
+ diskabrt: (JAGaf43297;linux) Code has been changed to use data
  structures defined in <scsi/sg.h>.
+ diskraw: (JAGaf57326(a);hpux) Certain internal improvements to the
  async IO-related code have been made.  The changes should help diskraw
  perform more async IO per write request.
+ server: (JAGaf24155) The "System summary" (including the # devices
  being tested by each system) is listed after the "Devices under test
  summary".  The placement is such that the listing will be seen if the
  user has invoked the 'log' command using option -N.
  Also...
  (JAGaf28867) If all client systems die unexpectedly, the server
  process will terminate the run.
  Also...
  (JAGaf58309) There were some unintended limitations to the directory
  path that a user could specify via -d; the limitation is now gone.
+ sysmon: (JAGaf32144;hpux) The command-line option:
    -o vmunix=/absolute_path_to_kernel
  is now obsolete.  The path to the kernel is now a "scan attribute" for
  the "type=system" line in the scan.client file for an HP-UX client
  system.
  Also...
  (JAGaf43443;linux) Linux kernel diagnostics have an inherent "level".
  These levels, 0 - 7, can be found in the man page for klogctl(2) (aka
  syslog(2)).  The user may specify the lowest level of diagnostics that
  sysmon shall log to the Hazard log via command line option:
    -o test==sysmon?diagfilter=#
  where '#' is a value in the range 0 -7; the default value is 7.

2005 Mar 23: 6.11.03.23 Windows
+ libnt/libcli: (JAGafTBD) Using Windows C library routines _popen and
  _pclose was resulting in lot of zombie processes.  This has been solved
  by implementing win_popen/win_pclose routines.

2005 Mar 18; 6.11.03.18 Unix
+ sysboot: (JAGaf52546;linux) When calling reboot(8), need to use -f
  option to get desired effect.
+ diskfs: (JAGaf53265;aix) While we seem to be getting it for "free",
  we're explicitly defining _ALL_SOURCE just so it's clear that O_DIRECT
  will be in effect.
  Also...
  (JAGaf55011;unix) Any file re-reads performed using O_DIRECT also use
  O_DSYNC and O_RSYNC.
+ diskraw: (JAGaf56055) The first field of a block tag ("btag") is now
  the LBA of the block itself, rather than the LBA of the write (4bytes,
  as ever).  And the "count" field (2 bytes) immediately follows.  This
  is per the request of the EVA firmware team.

2005 Mar 15; 6.11.03.15 Unix
+ diskraw: (JAGae76621) If there's expected content for a given block,
  RpcOffset() will return 0. For developer's working on corruption
  analysis this should facilitate providing more intelligent output.
  Also...
  (JAGaf51697) Improved what gets printed during corruption analsysis
  when optional btags are in effect.
+ diskraw/diskall/diskdt/diskmiwr/disksvt: (JAGaf22421) Before
  testing a device, its gdid is verified.  This will help catch cases
  where array luns are getting remapped to different DSF's (device
  special files) across reboots.
+ diskfs: (JAGaf53248) Have taken some precautions to ensure that we
  track specific error codes better across certain function calls that
  might reset it.  Have also adjusted and made more consistent certain
  log messages (these are subject to change as we consider their
  content).
+ syspanic: (JAGaf43741,JAGaf45602;linux) The "Known defects" mentioned
  just below have been remedied, we believe.  Thanks to Warren Sypteras
  for his contributions.
+ syspanic/haztest.prep: (JAGaf53117;hpux) An error in haztest.prep for
  HP-UX 11.31 has been corrected.
+ server: (JAGaf56127) If there are no devices to test (per the "Devices
  under test summary"), the run terminates.
  Also...
  (JAGaf56756) Test configuration -c1 ("monitor diagnostics, don't do
  any testing") has been removed.  We're not aware of anyone using it in
  our years of Hazard development since 1996.  Therefore, it's moribund.

2005 Mar 11: 6.11 Windows
2005 Mar 11: 6.11 Netware
2005 Mar 11; 6.11 Unix
= The release of Hazard 6.11 was delayed for 3 weeks beyond what we
  originally anticipated while we worked to identify a strange
  corruption occuring only during -c15 testing.  No one outside of Boise
  was seeing this issue, yet it seemed imprudent to release Hazard until
  the matter was better understood.  Gary eventually tracked the problem
  down to a case where luns were mapped to DSF's differently across
  reboots; for example, /dev/rdsk/cXtYdZ would be mapped to one lun
  prior to reboot but then another lun after reboot.  Why this behavior
  is occuring has yet to be understood, but at least Hazard is
  exonerated.
= Known defects: (linux) The panic functionality does not work on x86_64
  Linux systems with 2.4 and 2.6 kernels, nor does it work on x86 and
  ia64 Linux 2.6 kernel systems. For those cases, if you're running -c6,
  -c15, or -c16, you must also specify -Csyspanic.
= (linux) Please note that io.client files and scan.client files built
  for Linux client systems using Hazard 6.11 are not compatible with
  those built using 6.10 or previous versions of Hazard. And vice-versa.
  If you switch from one version to the other, be sure to re-create
  these files.
= (aix) Please note that io.client files built for AIX client systems
  using Hazard 6.10 may not be compatible with 6.11.  When you upgrade,
  be sure to re-create these files.

2005 Feb 3; 6.11.RC.04 Unix
+ idsys: (JAGaf52869;aix) When the script cleans up /diskfs/*, there's a
  possibility that there's nothing there to clean up.  When that happens,
  there's an error message which needs to be filtered out.  Yet a 3rd
  form of that error message has been encountered and is now handled.

2005 Feb 2; 6.11.RC.03 Windows
+ scanvm: Fixed an error in scanvm which could lead to errors in case of
  cluster volumes.

2005 Jan 31; 6.11.RC.02 Windows
= Support added for ia64-hpux, ia64-linux, alpha-tru64 as Hazard servers.

2005 Jan 27; 6.11.RC.03 Unix
+ diskall: (JAGaf52184) Diskall was doing more opens than closes,
  because open was inside a loop, while close outside, eventually
  consuming all file descriptors on a system.
  Also...
  (JAGaf52182) Those testing active-active arrays have requested that
  the "start" message include the DSF being opened and also that a
  successful open be optionally logged (that way, users can tell if a
  hang is during an open or during a read/write IO).

2005 Jan 25; 6.11.RC.01 Netware
+ diskall: (JAGaf23894) Support added for Netware.

2005 Jan 25; 6.11.RC.01 Windows
+ diskdt/dt: (JAGaf23456) Support added for aynchronous I/O.
+ log: (JAGaf25518) Support added for Windows.
+ diskfs: (JAGaf26251) Direct IO support has been added.
  (JAGaf39373) Failure of mountvol /P handled.
+ server: (JAGaf51203) Fixed the code checking for the OS type of the
  client system.
  (JAGaf39186) Added statuschk.pl to check for Hazard procs after
  syspanic/sysboot.
+ disksvt/svtfse/svtseek: (JAGaf50545) Two of the SVT* tools can now be
  executed under Hazard (configurations c18(svtseek) and c19(svtfse)).

2005 Jan 24; 6.11.RC.02 Unix
+ diskraw: (JAGaf51807) Correction to the "MockCDB" entry printed during
  corruption analysis.  This was a very recent "oops!".
+ hazard: (JAGaf43225) Support for Sparc Solaris 10 (SunOS 5.10) added.

2005 Jan 20; 6.11.RC.01 Unix
= This release candidate is built from files after they were first
  merged from the Unix development branch onto /main in ClearCase and
  then further merged from the Windows and Netware development branch.
+ idsys: (hpux) Corrected an error relative to installing the haztest
  driver.

2005 Jan 18; 6.10.13.18 Unix
+ server: (JAGaf29562;unix) The remote call made to see if a client
  system has gone down and come back up successfully (JAGaf24165) needs
  to be protected by an alarm in case there's a hang and we need to
  recover.
+ syspanic: (JAGae86245;hpux) The ktest driver is not shipped with 11.31
  systems, so we have written our own, replacement driver:  haztest.
  Our thanks to Vishwanath Mahorker and Minh-Y Ton.

2005 Jan 10; 6.10.13.10 Unix
+ diskraw: (JAGaf00936) Corruption analysis is now btags-aware.
  Also...
  The read/write history listing during corruption analysis has been
  changed in an attempt to truly list IO's in reverse chronological
  order.  Eric T, Robin M, and I each have different ideas and we're
  working to hash things out to satisfaction.
+ disksvt/svtfse/svtseek: (JAGaf50405) Two of the SVT* tools popular in
  pmCPQ/pmDEC can now be executed under Hazard.  To run svtfse, specify:
    -c 18
  on the command line.  To run svtseek, specify:
    -c 19
  For more info, see the Hazard RFC covering these SVT* tools.
+ diskdt/diskmiwr/disksvt:  In the case where 'dt', 'mi_wr', 'svtfse',
  or 'svtseek' exits with an error, the user may now request that one
  of the "Critical Actions" be taken by specifying:
    -o cat1=#
  where '#' represents one of the five (5) traditional actions taken.
+ exitdisk: (unix) Check for any hung/leftover diskdt/diskmiwr/disksvt
  processes.
+ server: (JAGaf24165;unix) The code that checked to see if a client
  system had gone down and come back up successfully has been revised to
  call a script. The "ps" part to check for outstanding Hazard processes
  was pretty generic, but the rest was HP-UX-specific. Both the "ps" and
  the "uptime" checks are now encapsulated into a script whose responses
  are understood by the server process.

2005 Jan 6; 6.10.13.06 Unix
= (JAGaf49741;unix) We have changed how we compile and link executables
  across all Unix platforms. Where in the past we stripped symbols (-s),
  that is no longer done; symbols are now retained (except for AIX,
  where retaining symbols makes for humoungous files).  The result is
  larger shar files.  However, we do not expect the execution image size
  to increase.
  Also...
  (JAGaf49741;hpux) On HP-UX, for signals handled by RpcExitSA() and
  RpcExitSpcl(), call for a stack trace dump and then abort (causing a
  "core" dump).
+ initdisk/initvm/diskfs: (hpux) Code supporting AdvFS and TruClusters
  has been removed, pursuant to the new direction for HP-UX 11.31.
+ diskdt/dt:  Improved stats and "keepalive" control.  And a new
  interface is being used to launch dt from diskdt, which should
  "slim down" the memory consumed.
+ diskmiwr/mi_wr:  A new interface is being used to launch mi_wr from
  diskmiwr, which should "slim down" the memory consumed.
+ scu: (JAGaf29887) Robin's "scu" utility is now being bundled with
  Hazard for HP-UX, Linux, and Solaris platforms.  It is documented at
  TBD.
+ ioscan/iodtc/scandisk: (JAGaf47778;aix) If AutoPath (dlmfdrv devices)
  or AMS/SDD (vpath devices) is present, then _only_ these devices will
  be listed and tested.  THIS CHANGE AFFECTS io.client FILES.  In other
  words, io.client files built using previous versions of Hazard may not
  work with this (and future) version(s); and vice versa.
+ ioscan/iodtc: (JAGaf46604;sun) Discovered that some devices/drivers
  were sensitive to how we compose the data structure for TestUnitReady.
+ idsys: (hpux) By request, we now also print the value of kernel
  variable vx_inmountroot.

2004 Dec 17; 6.10.12.17 Unix
+ initchgr/initdisk/initvm: (linux) The rwgdid tool supports a
  workaround to a defect in Linux 2.6 kernels (known; not always fixed
  on a given system).

2004 Dec 14; 6.10.12.14 Windows
= Merged changes from Unix branch.

2004 Dec 8; 6.10.12.08 Unix
+ idsys: (linux) A misplaced shell IO re-direction occasionally resulted
  in the message "unknown service" being output during the Id phase,
  which stderr message could stop a run from progressing into the Test
  phase.
+ iovm: (hpux,sun) Per the suggestion of Jim Jackson of Veritas, have
  changed "vxdctl enable" to "vxdctl mode", capturing the output of the
  latter to verify whether or not it is safe to invoke vxprint.
+ diskdt: (JAGaf44152,JAGaf46444;linux) Support for 2.6 kernel systems
  similar to that already done for diskall (see 6.10.11.18).
+ diskall/diskfs/diskraw: (JAGaf47982) The "linesize" used in corruption
  analysis has been standardized at 16 bytes: first, because that's the
  lowest common denominator among the supported platforms; second,
  because that's the size of a "btag" (block tag).
+ diskfs: (JAGaf48420;unix) Because we're seeing an increasing number of
  file corruptions detected on "pass=0" (first read after the filesystem
  is mounted), which indicates that the problem occured during some
  umount in the long-ago past, we need to catch these IO problems on the
  spot.  So, we have introduced a new behavior:  During the last pass
  over the set of files, the read-only pass, each file is fsync'd.  By
  POSIX definition, both metadata and data buffers get flushed, and the
  fsync() call does not return until the storage has confirmed that the
  data is in its hands.  If there is a failure, the call should set an
  appropriate errno value.  If users prefer the old behavior, they can
  turn off this new behavior via:
    -o test==diskfs?fsync=0
  (thus, it's default value is evidently 1).

2004 Dec 3; 6.10.12.03 Unix
+ diskdt/dt: Update to dt, per:
  http://www.zk3.dec.com/~rmiller/dt/WhatsNew-Aug14,2004.html
+ server: (JAGaf48285) If the death of a client system cannot be confirmed, it
  is deemed imprudent to release resources lest the client system remains
  alive and interferes with other systems' IO.  The behavior for this case
  (LIMBO4) is now as if -r had been specified.

2004 Nov 23; 6.10.11.23 Unix
+ diskfs: (JAGae96329(c);linux) Because there is no "metadata prowler" file re-
  read code for ext3 files, instead we re-read the file using O_DIRECT on 2.6
  kernel systems, and using O_DSYNC|O_RSYNC on 2.4 kernel systems.  Perhaps
  the following table will help explain this change and that in 6.10.11.16:
  -----------------------------------------------------
         | ext2 file                  | ext3 file
  -----------------------------------------------------
  2.4    | use partition 1 DSF;       | use file;
  kernel | use metadata;              | open file with
         | open DSF w/O_DSYNC|O_RSYNC | O_DSYNC|O_RSYNC
  -----------------------------------------------------
  2.6    | use partition 1 DSF;       | use file;
  kernel | use metadata;              | open file with
         | open DSF w/O_DIRECT        | O_DIRECT
  -----------------------------------------------------
+ diskall: (JAGaf34640) Messages logged in the case of lseek, read, and write
  failures include LBA and IO length (blocks) in hex.  Moreover, such messages
  are now distinct for Windows and Unix.
+ diskraw: (JAGaf34640) Messages logged in the case of lseek, read, and write
  failures include LBA and IO length (blocks) in hex.  Moreover, such messages
  are now distinct for Windows, Unix, and Netware.

2004 Nov 22; 6.10.11.22 Unix
+ diskall/diskfs/diskraw: (JAGaf46584;unix) If a corruption is detected, a test
  process's priority is raised via "nice(-10)", which is even higher before
  (cf. 6.07.08.29, at which time the use of nice(-5) was introduced).
+ diskraw: (JAGaf14260) "stats for" message now includes starting LBA and
  allocation length.

2004 Nov 18; 6.10.11.18 Unix
+ diskall: (JAGae96329(b),JAGaf44126,JAGaf46444;linux) On 2.4 kernel systems,
  the lead diskall process dynamically binds its /dev/raw/raw* DSF's (wdev*) to
  its whole-device DSF's (adev*), using the data provided by the Scan phase
  scripts.  On 2.6 kernel systems, the whole-device DSF's are opened using
  O_DIRECT.
  Also...
  (JAGaf43665(c)) Read and write buffers are now dynamically allocated, with
  the base address page-aligned.  This makes it easier to ensure that memory
  addresses for IO are aligned properly, whether the requirement be for
  4-byte word, 512-byte block, or page alignments.
+ diskfs: (JAGae93457;sun) Direct IO for both UFS and VxFS files has been
  implemented. {note: see 6.07.09.05}
  Also...
  (JAGaf37245;sun) Direct IO for VxFS file re-reads (re-reads are used to
  characterize the "type" of corruption) has been implemented.  And while
  UFS file re-reads continue to use "metadata prowler" code, if this code
  should encounter some problem, direct IO may also be used as a secondary
  method to accomplish UFS file re-reads.

2004 Nov 16; 6.10.11.16 Unix
+ log: (JAGaf46434) The "Process timed out" message now tells the user how
  long ago it was when the process last logged any activity.
+ initdisk/scandisk: (JAGaf44126,JAGaf44152;linux) Since the "rdev" scan
  attributes now refer to partition 2, another set of attributes is needed
  that refers to whole-device DSF's. The new "adev" set of attributes fills
  that role. They will be used by diskall and diskdt.  And yet another set of
  attributes is needed that refers to /dev/raw/raw* DSF's.  The new "wdev" set
  of attributes fills that role.  They will be used by diskraw, diskall, and
  diskdt, each performing the raw bindings at run-time on 2.4 kernel systems.
  Also...
  (JAGaf46444;linux) File "rawrebinds" is no longer created as diskraw,
  diskall, and diskdt do the bindings "on the fly" on 2.4 kernel systems.
+ diskraw: (JAGae96329(b),JAGaf44126,JAGaf46444;linux) On 2.4 kernel systems,
  the lead diskraw process now dynamically binds its /dev/raw/raw* DSF's to
  its partition 2 DSF's, using the data provided by the Scan phase scripts.
+ diskfs: (JAGae96329(c);linux) The ext2 "metadata prowler" file re-read code
  has been re-worked substantially.  Several defects have been fixed that
  affected 64-bit platforms.  Caveat: The re-reads use bdev* (partition 1)
  DSF's.  Testing on 2.6 kernel platforms, where partition 1 is opened with
  O_DIRECT, behaves as we expect.  But on 2.4 kernel platforms, where O_DIRECT
  is not supported and so we use O_DSYNC|O_RSYNC, we are seeing cases of stale
  data being returned.  This suggests that fdatasync(), fsync(), and sync()
  are not synchronous, despite what the man pages say.
  Also
  (JAGaf46567;linux) LBA's are now printed during ext2 FS file re-reading.
+ client: (JAGaf46444;linux) On 2.4 kernel systems, maxdevs cannot be > 255.

2004 Nov 4; 6.10.11.04 Unix
+ diskfs: (JAGaf43665(c)) Read and write buffers are now dynamically allocated,
  with the base address page-aligned.  This makes it easier to ensure that
  memory addresses for IO are aligned properly, whether the requirement be for
  4-byte word, 512-byte block, or page alignments.  Such buffers are allocated
  in diskfs proper, in the "metadata prowler" file re-read routines for HFS,
  VxFS, UFS, and Ext2, and in the file re-read code that uses direct IO.

2004 Nov 2; 6.10.11.02 Unix
+ diskfs: (JAGae81941) To enable a better message during corruption analysis,
  diskfs now distinguishes files it unlinks from diskraw's async writes.
  Also...
  (JAGaf45550;hpux) Changes to AdvFS in 11.31 IC100 have necessitated
  corresponding changes in how this test process works.
+ diskraw: (JAGaf45461) Option variable "riobang" has been replaced with
  "splitio".  If you have used "-oriobang=1" on 'hazard' command lines, you
  should now specify instead:
    -o test==diskraw?splitio=0
  The semantic is clearer now than in the past.  In the example just provided,
  it's clear that "splitio=0" means "do not split IO's".  Since the default
  behavior is to split IO's, the default value for this option is obvious.
  Also...
  (JAGaf42599) Because more and more folks are asking for timing statistics to
  be logged during runs other than -c15, it muddies the statistics picture if
  closes and re-opens occur between "start" and "stop", so this behavior has
  been dropped.  Opens now only occur before the start/stop loop.  There is
  no loss to multi-path testing since one open may still use one path, and
  another open another path.

2004 Oct 29; 6.10.10.29 Unix
+ initdisk: (JAGae66700;linux) As one more "testability" check, initdisk now
  checks to see if a device is involved with swap, per "swapon -s".  Usually
  root, boot, and swap are all on the same device, and some other cause for
  not testing the device is found first.  But if the system is swapping to
  another device than boot/root, this additional check will catch that.
  Also...
  (JAGaf45289;linux) A number of the "testability" checks were only checking
  partitions 1-4.  Most installations only used partitions 1-3.  However, one
  user's installation of SLES-9 used extended partitions 5-7.  This was a
  surprise.  Adjustments were made to check partitions 1-9.
+ client: (JAGaf44272;linux) Linux' behavior for RLIMIT_NOFILE differs from
  HP-UX and Solaris: rlim_max, as returned by getrlimit(2), is not the true
  maximum; rather, #define NR_OPEN in linux/fs.h is.  However, NR_OPEN is
  ridiculously high.  So, we settle for 8*INR_OPEN (8x initial value).

2004 Oct 28; 6.10.10.28 Windows
+ hazard.sh: (JAGaf08213) Fixed hazard.sh so that it unshars the files to
  the expected directory windowsnt/(client.shar). This fix was not copied
  in the previous release.

2004 Oct 28; 6.10.10.28 Unix
+ diskfs: (JAGaf04724;hpux) HFS file systems can now be created on devices
  up to 256GB in size; the prior limit was 128GB (due to an assumption of ours
  that has proved to be false). {Xref: 6.06.04.85 and 6.06.04.V4}
+ diskraw: (JAGaf43665(b)) Read and write buffers are now dynamically
  allocated, with the base address page-aligned.  This makes it easier to
  ensure that memory addresses for IO are aligned properly, whether the
  requirement be for 4-byte word, 512-byte block, or page alignments.
  Also...
  (JAGaf10496) Have significantly diminished the performance cost to using
  "btags" during the execution of this test process.
  Also...
  (JAGaf20877) The user may now control the minimum and/or maximum IO size.
  For example:
    -o test==diskraw?riomin=#		minimum # of blocks for an IO
    -o test==diskraw?riomax=#		maximum # of blocks for an IO
  The range of acceptable values is 2, 3, 4, .., 512.  If you wish for all
  IO's to be the same size, set both riomin and riomax to the same value.
  Note: If either option is set, read/write IO's are not split.

2004 Oct 26; 6.10.10.26 Unix
= (JAGaf43665(a)) Some effort has been put into modularizing functions having
  to do with dynamic memory allocation.  We also added some functionality that
  provides page-aligned dynamic memory allocation (unlike the usual malloc()).
+ hazard: (linux) There are now six distinct shar bundles for Linux platforms:
    i386   / 2.4 Linux kernel
    ia64   / 2.4 Linux kernel
    x86_64 / 2.4 Linux kernel
    i386   / 2.6 Linux kernel
    ia64   / 2.6 Linux kernel
    x86_64 / 2.6 Linux kernel
+ diskfs: (JAGaf28530;unix) Arbitrary options to mount(1m) commands can now be
  specified by the user on a per-file-system-type basis.  For example:
    -o mountopts_advfs="-o noreadahead"
  results in:
    mount -F advfs -o noreadahead /dev/advfs/hazard_cXtXdX /diskfs/didNNNNN
  The set of currently supported file system types are:
    hfs		HP-UX		-o mountopts_hfs=
    ufs		Solaris		-o mountopts_ufs=
    vxfs	HP-UX/Solaris	-o mountopts_vxfs=
    advfs	HP-UX		-o mountopts_advfs=
    ext2	Linux		-o mountopts_ext2=
    ext3	Linux		-o mountopts_ext3=
    jfs		AIX		-o mountopts_jfs=
    jfs2	AIX		-o mountopts_jfs2=

2004 Oct 25; 6.10.10.25 Windows
+ diskfs: (JAGaf40515) Reverted back to serialized unmounts.
+ initdisk: SATA raid disks do not support SCSI inquiry, read capacity
  passthroughs. Diskinfo errors are redirected so that the test can continue.
+ ioscan: Removed error logged by rescan bus ioctl since SATA drives do not
  support it.

2004 Oct 22; 6.10.10.22 Unix
+ diskfs: (JAGaf32050;hpux) More enhancements to support TCR CFS testing.

2004 Oct 19; 6.10.10.19 Unix
+ insf: (JAGaf43726;linux) RHEL 4 does not support the raw driver, so the
  script must cope with its potential absence.
+ diskfs: A regression present in 6.10.10.12 and 6.10.10.14 was found and
  fixed.  The symptom was for files to be incorrectly truncated to 0 bytes if
  there was a short write due to the file system being full.
  Also...
  (JAGaf32050;hpux) Additional support for TCR CFS and AdvFS file systems
  mounted under /cfs.  In particular, support has been added so that AdvFS
  file systems need not always be mounted under /cfs.  The default _is_ to
  promote and mount them under /cfs, but if option:
    -o cfs=0
  is specified, then AdvFS file systems are demoted and not mounted under /cfs.
  Also...
  (JAGaf10497;unix) In the case of a corruption, if we do not know how to find
  and read the data blocks directly (i.e, by knowing their LBA's), we do the
  re-read using O_DIRECT.  And if that is not available, then we do the re-read
  using O_DSYNC|O_RSYNC.  Corruption type characterizations (read / write /
  read-write failure) done using O_DIRECT re-reads are as certain as if the
  data blocks had been read directly, but characterizations done using O_RSYNC
  re-reads are not as certain (because the kernel's buffer cache code may not
  believe it needs to re-read the blocks off media).
  In particular...
  (JAGaf37244;aix) JFS and JFS2 file re-reads using O_DIRECT are now performed
  in the case of corruption.

2004 Oct 14; 6.10.10.14 Unix
+ hazard: (linux) There are now five distinct shar bundles for Linux platforms.
  {See also notes for version 6.10.10.25.}
  Also...
  (hpux) There are now six distinct shar bundles for HP-UX platforms:
    PA 32-bit / HP-UX 11.00/11.11/11.23
    PA 64-bit / HP-UX 11.00
    PA 64-bit / HP-UX 11.11/11.23 (O_DIRECT supported by VxFS)
    PA 64-bit / HP-UX 11.31 (many new ioctl's, API's, and commands)
    IA64      / HP-UX 11.23
    IA64      / HP-UX 11.31 ( ditto )

2004 Oct 12; 6.10.10.12 Unix
+ hazard.rc: (JAGaf43150;linux) If one does hazard -i and then reboots the
  client system, /var/tmp/hazard/rawrebind may not exist and so you may get an
  annoying FAILED message during reboot; thus, we now check to make sure the
  file exists before attempting to execute it.
+ coverage.pl:  A Perl script is now provided that will process log files and
  tell the user how many seconds of time a device has been under test by each
  client system sharing it.  Your suggestions for improvements are welcome.
+ ioscan/iodtc: (JAGaf43152;linux) Ioscan was only processing the first 128
  (or 130) /dev/sd* device special files as that was a common limitation in
  older distros.  Ioscan now processes 256 /dev/sd* dsf's (the current limit).
+ syspanic: (linux) Fixed the message logged when panic_module fails to panic
  the system; the error messages are in /var/tmp/hazard/pm.err.

2004 Oct 5; 6.10.10.05 Unix
= This is the first release since Hazard 6.06 built from source code where
  the common code files are truly being developed in common between the
  developers reporting to Boise and those located in Bangalore.
+ diskfs: (JAGaf32050;hpux) Initial changes to mount AdvFS file systems under
  /cfs, in order to test HP-UX 11.31's TCR CFS capabilities.  Note that
  additional work remains to be done to fully support TCR CFS.
  Also...
  (JAGae86254(b);hpux) Further refinement in AdvFS support as fsck can now
  be employed when needed.
+ diskall/diskevery/diskfs/diskraw: (JAGae86245(b);hpux) On HP-UX 11.31, it
  is possible to panic the cluster using [..functionality deleted upon
  cancellation of TruCluster work..noted 4/12/05]

2004 Sep 24; 6.10.09.24 Unix
+ diskfs: (JAGaf40038;linux) Under notes for version 6.07.09.05, we noted that
  O_DIRECT was not supported for file IO on Linux 2.4 systems.  Since that was
  our only build environment, O_DIRECT file IO was not performed on 2.6 kernel
  systems, either.  But, starting with 6.10.09.15, we now build on both 2.4 and
  2.6 kernel systems.  This has enabled us to implement several changes, as
  noted below.  In this build, we provide support for O_DIRECT file IO on 2.6
  kernel systems.

2004 Sep 23; 6.10.09.23 Unix
+ diskmiwr: (JAGaf39335(a);hpux) Until Hazard supports asyncdsk IO testing via
  an extension to diskall (or similar), we have re-introduced the mi_wr async
  stress test.  To run this test, you should specify test configuration:
    -c 17
+ diskabrt: (JAGaf34354,JAGaf40835) Change related to timesleep option in
  6.10.RC.01 was not well done for diskabrt, and while the defect was detected
  during release candidate testing, it was not characterized nor fixed until
  just now.
+ initdisk/diskraw: (JAGae96329(b);linux) On Linux systems with 2.6 kernels,
  the /dev/raw/raw* devices are no longer used (i.e., are not bound to
  /dev/sd* or /dev/sd*2 devices as was done previously); rather, the O_DIRECT
  open() flag is now used.  This change is because the use of /dev/raw/raw*
  devices is now deprecated on 2.6 systems, and in some cases even unsupported.
+ hazard: (JAGaf39881;linux) If a client system is a Linux system, check for
  the presence of certain required RPM's.

2004 Sep 15; 6.10.09.15 Unix
+ idsys: (JAGaf40219;linux) Change the value of /proc/sys/fs/file-max
  only if its value is less than 8192.
+ server: (JAGae84309(c);linux) There are now distinct server-side bits
  for i386 vs IA64 Linux systems (as well as PA vs IA64 HP-UX systems).
+ hazard: (JAG20623(b)) Resolved problem where script would hang if an
  unknown OS or CPU architecture were encountered.
  Also...
  (linux) There are now four distinct shar bundles for Linux platforms,
  {See also notes for version 6.10.10.25.}
+ io-time-stats/diskraw: (JAGaf39580) An adjustment was made to diskraw
  so that if timings are requested (see versions 6.06.04.Y2, 6.05.06.81)
  during -c8, -c12, or -c16 runs, then io-time-stats can be used to
  process and display the results (see versions 6.06.04.ZB, 6.06.04.N7).

2004 Sep 9; 6.10.09.09 Unix
+ hazard: (JAGaf39333;hpux) Added support for shar bundle specific to
  PA-RISC HP-UX 11.31.
+ exitdisk: (JAGaf30259;unix) Kill hbshutdown process during the Exit
  phase.
+ initdisk: (JAGaf38753;hpux) Enhance EFI disk check for PA systems, for
  when root/boot devices are shared between IA64 and PA systems.

2004 Sep 1; 6.10.09.01 Unix
= (JAGaf34715;hpux) Now using HP-UX 11.31's scsi.h file instead of our own.
+ initdisk/diskinfo: (JAGaf37837;linux) Obtaining device geometry is now
  optional with diskinfo, requiring the use of -v.  And initdisk now uses
  the "last LBA" information obtained via the SCSI ReadCapacity command, as
  we have determined that sfdisk(8) and current kernels can safely ignore
  the apparent "last LBA" derived from device geometry information.  We were
  prompted to investigate this because it was discovered that SecurePath and/or
  the drivers it uses provided different geometry information via HDIO_GETGEO
  than Qlogic's failover driver.
+ diskraw: (JAGae96329(a);linux) Simultaneous file system and raw testing is
  now possible on systems with 2.6 kernels.  The solution in this version
  continues the use of /dev/raw/raw* devices by diskraw, but now they are
  bound to /dev/sd*2 partitions and not /dev/sd* devices.  {But see more
  recent changes relative to JAGae96329, above.}
+ client: (JAGaf35768;unix) Better handling of optPanic; now logging to
  haz.errlog the results of executing rpcmd's script (spec'd by user).
+ idsys: (unix) All sub-directories under /diskfs are removed prior to the
  start of a Hazard run.  In a certain failure mode (kernel loses track of
  mount), the sub-directories may not be empty, and the rmdir catches these.
+ exitdisk: (JAGaf20628;unix) The exitdisk script is now a bit more patient
  before declaring that certain processes remain (i.e., appear to be hung).
  All such declarations are now reported at the WARN level.

2004 Aug 20; 6.10 Unix
2004 Aug 20; 6.10 Windows
2004 Aug 20; 6.10 Netware
= Issues found during release candidate testing were resolved in the .02, .03,
  and .04 "RC" kits and, naturally, are contained in this major release.
= Due to system unavailability issues, the "Release" file for HP-UX 11.31
  systems may identify the release as 6.10.RC.04.  This is not a problem.
= Due to system unavailability issues, the Release file for x86_64/AMD64 Linux
  systems may identify the release as 6.10.RC.01.  License-wise, this is not
  a problem; functionality-wise, there's a minor inconvenience (see notes for
  6.10.RC.04, below).

2004 Aug 5; 6.10.RC.04 Unix
+ diskfs: (JAGae66698;linux) Caught and fixed an incorrect ref to a file
  as if it was in /tmp/hazard (vs. /var/tmp/hazard).  The effect was to make
  only ext2 file systems, instead of alternating ext2-ext3, in versions
  6.09.06.11 thru 6.10.RC.03.

2004 Aug 3; 6.10.RC.02 Netware
+ diskraw: Support added for Netware.
+ sysd: (JAGaf28250) All disks across which the SYS volume is spanned
  will be excluded.

2004 Aug  3; 6.10.RC.02 Windows
2004 Jul 26; 6.10.RC.01 Windows
+ initdisk/scandisk/mkparts: (JAGaf17903)
  Users may now select the size of the diskraw area by specifying:
  -o rawp=#
  where "#" is a number in the range 1 - 5 (~1% to ~5%).  The default value is
  approximately 0.45%.  FWIW, following are the previous, hard-wired values:
  releases 6.07 - 6.08        0.35%
  releases 6.05 - 6.06        0.31%
  releases 6.04 or earlier    no %; rather, a straight 16MB; that translated
  to 0.39% for a 4GB disk and 0.19% for an 8GB.
  As an operational note:  Since this value is only used during the Init and
  Scan phases, it has no run-time effect if you are using -s!.  Finally, a
  note for the bean counters:  If you specify, say, -orawp=2, and then you
  compare the "rcount" and "sizeA" Scan attributes, you will find that the
  relative percentage may be slightly less than or greater than 2%.  Not to
  worry.
+ diskfs: (JAGaf20279)
  increased default maxfsdevs from 20 to 100 for Windows 2000 and above.
+ diskfs: (JAGaf23440)
  Windows 2003: Supports c13,c14,c16 for shared device(MI/HA) environment
  Windows 2000/XP: Does not test shared Luns on c13,c14,c16 test configuration
+ initdisk: (JAGaf23442)
  Logs the reason for exclusion of device from testing.
+ diskfs/cvmdisp/initvm/scanvm: (JAGaf23442,JAGaf23458)
  Support added for Windows 2003 Cluster for IA32 & IA64 platforms.
+ diskdt/dt: (JAGaf23456) Support added for diskdt/dt(c7) Windows IA32
  Does no support AIO and procs option.
+ diskinfo: (JAGaf24601;windows)
  SCSI disk vendor ID/product ID is prefixed with "SEAGATE_" if it starts with "ST"
+ diskfs: (JAGaf25510) FAT32 support added for Win2k/XP/2k3
  Users can select Fat32 filesystem by specifying:
  -o 'test==diskfs?fstype=fat32'
  The default fstype is ntfs. 'test==diskfs?fstype=all' option can be used
  for testing both ntfs and fat32 filesystems.

2004 Jul 21; 6.10.RC.03 Unix
+ diskraw: (JAGaf32568;hpux) Due to a code change in diskraw.c made in late
  September, 2002, versions 6.06.04.H5 thru 6.10.RC.01 -- thus including major
  releases 6.07, 6.08, and 6.09 -- have not performed async IO.  This is a
  major bad!  At least it's fixed now.

2004 Jul 20; 6.10.RC.02 Unix
+ hazard: (JAGaf27289(b)) Slight correction to the earlier "fix" for when
  Hazard server is a Tru64 system.

2004 Jul 16; 6.10.RC.01 Unix
2004 Jul 16; 6.09.07.16 Unix
+ diskfs: (JAGaf24921;hpux) For AdvFS, test both 4k and 8k block sizes.
  Also...
  (JAGaf32212;hpux) As of IC093, there are changes to AdvFS's "database".
  AdvFS behaviors both before and as of IC093 are supported.
  Also...
  (JAGaf23875;aix) Changes have been implemented to support AutoPath on AIX.
  However, testing so far is not conclusive and more work may need to be done.
  Therefore, we are not yet claiming support for AutoPath.  But users are
  invited to test using this release and provide us with feedback.
+ diskabrt/diskbdr/diskres/sysboot/syspanic/syshalt: (JAGaf31574) For
  backwards-compatibility, option "-otimesleep" will be accepted as a
  synonym for "-otimesleepR".  However, use of option timesleep is deprecated;
  since 6.09, it's proper to use timesleepR.
+ idsys/iodtc/diskraw: (JAGaf31149;hpux)  Unless the user specifies:
    -o async=0
  it is considered an ERROR for the asyncdsk driver not to be configured into
  an HP-UX kernel.
+ ioscan/iodtc: (JAGaf23875;aix) Changes have been implemented to support
  AutoPath-controlled devices on AIX.
  Also...
  (JAGaf31967;aix) Devices rejected by ioscan, and previously listed in file
  "skipped.dat", are now listed in io.client, but as commented-out devices.
+ scandisk: (JAGaf23875;aix) Changes have been implemented to support AutoPath.
+ syspanic: (JAGae87575;linux) Had to change how we build panic_module.o, for
  panicking Linux systems.

2004 Jul 6; 6.09.07.06 Unix
+ iodtc/iovm: (JAGaf30576;hpux) Changes made in support of JAGae91595 were
  messing up humountall when called during a sysboot-induced shutdown/reboot.
  The changes have been re-arranged to avoid the problem.
  Also...
  (JAGae91595(b);aix)  If you specify:
    -o probe=0
  then 'cfgmgr' will not be called.  The default behavior is, of course, to
  run cfgmgr in order to discover new devices.  The reason for supporting this
  option is that we have seen cases where cfgmgr hung, and so a workaround is
  needed.
+ diskabrt: (JAGaf15758(b);aix) SCSI pass-thru works differently on AIX than
  on HP-UX, so we had to change some of the logic; ioctl errors need to be
  investigated further by looking at SCSI status and adapter status in order
  to determine if the Verify was aborted, or whether something else happened.
+ diskfs: (JAGaf26861;aix) The crfs command was failing on certain large-ish
  luns; have fixed this by parameterizing args to the mkvg and crfs commands,
  depending on the type of filesystem (JFS vs JFS2) and the size of the device.

2004 Jun 25; 6.09.18.25 Windows
= Support added for AMD64/EM64T platforms

2004 Jun 25; 6.09.06.25 Unix
+ diskfs: (JAGaf12901;sun) Support for VxFS on Solaris has been added.
  Also...
  (JAGaf23507;hpux) Handle multiple paths to AdvFS disks.
  Also...
  (JAGaf04178;linux) Serializing mkfs's because many kernels/distros
  have issues with concurrent mkfs's.

2004 Jun 11; 6.09.06.11 Unix
= (JAGae66698;linux) Per the File System Hierarchy Standard, /tmp can be wiped
  out upon reboot.  Thus, we now install Hazard bits under /var/tmp (i.e.,
  /var/tmp/hazard), just like on Solaris.
+ hazard: (JAGaf27289(a)) If Kerberos rsh/rcp are installed on a Linux-based
  Hazard server, this can present a problem.  The instances in /usr/bin are
  now specifically used.
  Also...
  (JAGaf27294,JAGaf27300) Now offers special handling for options -? and -V.
  Option -V is shorthand for -vX; it verifies the license and prints out the
  version of Hazard embedded in the server program.
+ diskabrt: (JAGaf27131;sun) SCSI pass-thru works differently on Solaris than
  on HP-UX, so we had to change some of the logic; ioctl errors need to be
  investigated further by looking at SCSI status and senses bytes in order
  to determine if the Verify was aborted, or whether something else happened.
+ diskfs: (JAGaf25821;hpux) Avoid fsck actions and messages for AdvFS.
+ iodtc/iovm: (JAGae91595(a),JAGae93957;hpux) Two options have been added which
  may be used to speed up the IO phase under certain circumstances.  If you
  specify:
    -o probe=0
  then 'ioscan' will not be called in full-probe mode but, rather, in "kernel
  device tree only" mode; i.e., ioscan -kfn.  The default is, of course, to
  run the full-probe ioscan first before ioscan -kfn.
  Secondly, if you specify:
    -o vgscan=1
  then 'vgscan -apv' will be called to definitively identify devices _not_
  involved with LVM.  The default does not call vgscan, and so, later on,
  initdisk will have to use 'vgimport' to determine whether or not a device
  is involved with LVM.
  As an operational note:  These options have no effect if you use -i or -s!.
  Also, if you set probe=0, then you are effectively promising Hazard that
  the kernels on your client systems already know about all the devices.
  Hence, Hazard is not responsible for any oversight on your part.

2004 Jun 9; 6.09.06.09 Unix
+ initchgr/initdisk/initvm/scanchgr/scandisk/scanvm: (JAGaf17899;hpux,linux,
  sun,aix) Users may now select the size of the diskraw area by specifying:
    -o rawp=#
  where "#" is a number in the range 1 - 5 (~1% to ~5%).  The default value is
  approximately 0.45%.  FWIW, following are the previous, hard-wired values:
    releases 6.07 - 6.08	0.35%
    releases 6.05 - 6.06	0.31%
    releases 6.04 or earlier	no %; rather, a straight 16MB; that translated
				to 0.39% for a 4GB disk and 0.19% for an 8GB.
  As an operational note:  Since this value is only used during the Init and
  Scan phases, it has no run-time effect if you are using -s!.  Finally, a
  note for the bean counters:  If you specify, say, -orawp=2, and then you
  compare the "rcount" and "sizeA" Scan attributes, you will find that the
  relative percentage may be slightly less than or greater than 2%.  Not to
  worry.

2004 Jun 3; 6.09.06.03 Unix
= (JAGaf26229) A missed change required as part of changes made in 6.09.05.06
  (dropping support for HP-UX 11.22) means that versions 6.09.05.06 thru
  6.09.05.21, inclusive, cannot be installed on IA64 HP-UX systems utilized
  as Hazard servers.
+ diskdt/dt: (JAGaf23510) Make diskdt honor the lifetime option.
+ server: (JAGaf25850,JAGae82814(c)) Struct Config has a field that is used
  both for real commands (e.g., "diskfs*n") as well as options (e.g.,
  "vmunix=/stand/advfs/vmunix").  It was too short and needed to be bigger.

2004 May 21; 6.09.05.21 Unix
+ client: (JAGaf23525) The maxdevs calculation is now factoring in the process
  image sizes of diskdt and dt for a -c7 run.
  Also...
  (JAGaf12919;hpux) POSIX AIO-related tunable is now factored into the maxdevs
  calculation.
+ diskfs: (JAGae86258,JAGaf20472) Add support for AdvFS file re-read in case of
  corruption, using O_DIRECT.

2004 May 18; 6.09.05.18 Unix
+ server: RemoteCommand/rcmd calls now have a 3 minute timeout (by contrast,
  see version 6.05.10.10; see notes for version 6.06.04.ZG to see complete set
  of timeouts).  Moreover, there are no longer any retries; we've never seen
  a case where the first failed, but a subsequent try succeeded.
+ iovm/initdisk/initvm: (JAGae90032(b);linux) Support for LVM (logical volumes)
  on Linux has been added.  Unlike HP-UX (where we can determine if a device
  is involved with LVM, even if on another system that shares the device), at
  this point in time volume groups and volumes should not be created on shared
  devices as Hazard has no way of detecting on one system if a shared device is
  involved with LVM on another system.  Again unlike HP-UX, raw IO testing of
  logical volumes is not performed but only file system testing.

2004 May 12; 6.09.05.12 Unix
= (JAGaf21818;linux) Support for AMD64/Linux has been added.
= (JAGaf20727) Had a case where a test process had a gpid of 0 upon the 5th
  reboot during a -c16 run.  Have instrumented code to capture this.
+ initdisk: (JAGaf19707;linux) If diskinfo of some device failed, the reason
  for not testing it, reported during the Init phase, is "diskinfo_ERROR".
  This is to catch the user's eye as not every diskinfo failure is a problem
  sufficient to warrant halting the run.  For this reason, the "not tested"
  message is logged at the WARN level instead of the ERROR level.
+ initdisk/scandisk: (JAGaf16752;linux,sun) Any disk that is 1TB or larger
  contains more 512-byte blocks than a signed integer can represent.  This was
  causing math calculations in shell scripts to produce bogus results
  (sometimes saying a TB lun was "too small" or causing the server to get a
  malloc failure).  The math calculations are now being done via "dc" either
  directly in the scripts or via functions in hazard.i.  {Note: see similar
  fix for HP-UX in version 6.07}
+ hazard: (JAGaf20623(a);sun) Architecture types "sun4u" and "sun4us" are now
  supported as representing Sparc-based systems.
+ sysboot/syspanic: (JAGaf22410) A change in version 6.08 (JAGae87964) that
  attempted to create random seeds that were more distinct between test procs
  had the unforunate consequence that the seed was the same from restart to
  restart in a -c16 run, for example.  Code has been corrected and tested.
+ client: (JAGae93948) Print more explicit info regarding the factor that most
  limited maxdevs.
+ ioscan/iodtc: (linux) The "class" field for SCSI type 12 is now printed as
  "arrayctrl" instead of "other:12".
+ server: (JAGae98525(b)) Corrected built-in test configuration -c6 so that
  diagnostics are logged at "expected" ("diag") level.
+ hazard.rc: (JAGaf20335;hpux) Call "dmesg -" upon reboot so that sysmon does
  not log irrelevant diagnostics.
+ diskfs/diskraw: (JAGaf20753) Increased the amount of read/write history
  tracked from 5 to 9 (cf. prior change from 3 to 5 in 6.05.06.A4).
+ diskfs: (JAGaf21817;linux) The call to "fuser" (when a umount fails) needed
  to have stderr redirected.

2004 May 6; 6.09 Netware
+ sysmon: Support added for Netware. This is implemented using Netware
  Event Notification APIs.
+ sysprobe: Support added for Netware.
+ ioscan: Changed iodtc-nw.c to obtain device specific information like vendor
  ID,product ID by using Netware passthru APIs.

2004 Apr 29; 6.09 Windows
2004 Apr 20; 6.08.16.20 Windows
+ diskfs: Added support for NTFS Reread
  Reread is implemented by using CreateFile Win32 API with
  FILE_FLAG_NO_BUFFERING flag.
+ diskres: Exits if IOCTL_STORAGE_RESET_BUS is not supported by the driver.
+ diskall: Supported added for Windows
+ initdisk-nt.pl: String used to identify XP Command Devices is changed.

2004 Apr 16; 6.09 Unix
= (aix) Support for AIX 4.3.3 has been restored (see version 6.06.04.ZG).
+ diskfs: (hpux) As support for AdvFS evolves in 11.31 IC's, some changes had
  to be made to adapt.  Also...
  (aix) On AIX 4.3.3, only create JFS file systems.
  Also...
  (JAGaf18536;aix) Need to handle the case of mkvg failure.
  Also...
  (hpux) Improved handling of unsupported orgtype's during VxFS re-read.
+ hazard.rc: (linux) Changes within SuSE Linux behavior was causing this
  script to emit errors during the Id phase.  Dropping the ref to $netdaemons
  has resolved this.
+ diskall:  Certain messages that were logged mostly for developers' benefit
  are now only logged if the verbose option is set:
    -o verbose=8
  (indeed, any bitmask value where bit 3 is turned on).
+ exitdisk: (aix) Check for any hung mkvg or crfs processes.

2004 Apr 13; 6.08.16.13 Windows
+ hazard.sh: (JAGaf08213) Fixed hazard.sh so that it unshars the files to
  the expected directory windowsnt/(client.shar)
+ server.c/hazard.sh: (JAGaf08428) Fixed hazard.sh and server.c so that
  server path used to run hazard server executables is always absolute
+ sysprobe.c : (JAGaf08194) An error message is logged in case of ioscan
  miscompare.
+ initdisk-nt.pl: (JAGaf10783) added XP Command Devices as a part of exclude
  Rule
+ cvmquorum.c: Code is added to print the unavailability of cluster.This change
  has been done because dynamic volumes were getting excluded as quorum volumes
  when hazard is run to test a client(without cluster support) as initvm expects
  some output from cvmquorum in case the volumes that are not quorum.
+ vgdisplay.c/libclus.c: The calculation of volume size has been changed.This has been
  done because the volunme size returned in case for large volumes were wrong
+ sysboot.c: The value for timesleepM has been changed to 3600 as client with
  cluster service enabled takes more than the expected time to come up after a few

2004 Mar 26; 6.08.15.26 Unix
+ hazard/server: (JAGaf08428) Sometimes the "server directory" (where server,
  log, geterrlog, hazard.license, packing.list, and all the shar files are
  found) was not being correctly determined.  This could cause errors during
  the Exit phase when "geterrlog" is invoked.  We believe changes to both
  the "hazard" script and the "server" program have corrected this.  One
  change is that the haz.errlog files are now placed in the Hazard working
  directory (where the io.client files, etc, are placed).  This will help
  make the versions seen here be more in sync with those on the client system.
+ diskraw/diskabrt/diskbdr: (JAGaf15475;aix) If -c15 is specified, all disks
  undergo testing, not just alternate disks (as in -c8/-c16).
+ diskabrt/diskbdr/diskres: (hpux,JAGae82625) The "c700" driver is no longer
  recognized/supported.  This driver has been off the HP-UX support matrix for
  some time.
+ diskabrt: (JAGaf15758(a);aix) If DKIOLCMD fails w/ EINVAL, switch to DKIOCMD.

2004 Mar 18; 6.08.15.18 Unix
+ diskfs: (JAGaf08691;aix) A possible workaround to AIX 5.2's fsck64 doing core
  dumps on JFS2 file systems has been implemented.  If users find this to be
  unsatisfactory (we think it will work, BTW), another workaround is to do
  JFS-only testing:
    -o test==diskfs?fstype=jfs
  Note that the fsck64 failures only occur on AIX 5.2, not 5.1, so we believe
  it's an AIX issue.  Also...
  (JAGaf15475;aix) If -c3 is specified, all disks undergo file system testing,
  not just alternate disks (as in -c8, et al).
+ diskraw: (JAGaf15475;aix) If -c2 is specified, all disks undergo raw IO
  testing, not just alternate disks (as in -c8, et al).
+ server: (JAGaf14707) When a built-in test configuration is used, the server
  process now tells the client process, who tells the test processes, which
  one it is.  This permits intelligent decisions to be made (as in JAGaf15475).

2004 Mar 16; 6.08.15.16 Unix
= (JAGae88134) Dropping support for Linux distros that contain 2.2 kernels;
  i.e., RedHat 6.2, 7.0, 7.1, and similar distros from SuSE, Debian, et al.
+ server: (JAGaf14449) Ignore "Terminated" messages from the shell on Solaris,
  as these are causing false errors.

2004 Mar 9; 6.08.15.09 Unix
+ diskabart/diskbdr/diskres: (JAGae89995) The minimum and random elements to
  the sleep time are now configurable options.  They may be configured
  using these command-line options:
    -o test==<test>?timesleepM=#
    -o test==<test>?timesleepR=#
  where # is the number of seconds and <test> is diskabrt, diskbdr, or diskres.
  The default value for timesleepM is 60 secs, and its minimum is 2 secs.
  The default value for timesleepR is 1800 secs, and its minimum is 2 secs
  (except for diskabrt, where the default value varies; see version 6.07.nw.07).
+ syspanic: (sun,JAGae93852) Dumpadm is no longer invoked on Solaris 2.6.
+ client/etal: (JAGaf13217) ShmAttach/shmat failures are now detected and
  handled.  Oddly, in all these years, this had not been an issue.
+ syshalt: (JAGae92071) Added support for more control over sleep time between
  IO halt attempts, in keeping with diskabrt, diskbdr, diskres, sysboot, and
  syspanic.  The minimum and random elements are now configurable options:
    -o test==syshalt?timesleepM=#
    -o test==syshalt?timesleepR=#
  where # is the number of seconds.
  The default value for timesleepM is 60 secs, and its minimum is 2 secs.
  The default value for timesleepR is 10800 secs, and its minimum is 2 secs.
  Similarly, added support for control over the time period during which IO is
  halted.  It is configurable via option:
    -o test==syshalt?timehalt=#
  where # is the number of seconds.
  The default value for timehalt is 1 second, and its minimum is 1 second.
  Also, added support for control over the frequency with which we seek to
  obtain the cluster semaphore.  It is configurable via option:
    -o test==syshalt?csemfreq=#
  where # is the modulo value applied to a randomly generated number.
  The default value for csemfreq is 16, and its minimum is 2.
+ diskall: (aix) A defect was found (and fixed) that caused this tool to
  get killed due to SIGSEGV (signal 11).

2004 Mar 4; 6.08.15.04 Unix
= Support for x86-based Solaris 9 is now provided (JAGaf05192).
  {Note: See 6.05.10.30, Oct 10, 2001.}
+ idsys: (linux,JAGaf12948) Changed to a better method for detecting support
  for ext3.
+ diskfs: (sun,JAGae80180) Support for two mount(1m) options now provided:
    -o test==diskfs?fsdio=1	mount option -o forcedirectio
    -o test==diskfs?fslog=1	mount option -o logging
  It is permissible to request either or both; the default is neither.
  Also...
  (aix) The stderr from "crfs" is now being redirected to stdout.
+ diskabrt/diskbdr: (JAGaf11070;aix) The actions taken by these tools will only
  be attempted on the raw-only devices (and not the FS-only devices).
+ diskall: (JAGae85462(a)) Support added to control the minimum and/or maximum
  IO size performed.  For example:
    -o riomin=#		minimum # (power of 2) of blocks for an IO
    -o riomax=#		maximum # (power of 2) of blocks for an IO
  The range of acceptable values is 4, 8, 16, .., 512.
+ diskdt/dt: (JAGaf02326(a)) The first 8KB worth of blocks are never written.
+ initdisk: (aix) The number of raw blocks tested is now rationalized in
  a manner similar to other OS's.

2004 Feb 26; 6.08.RC.01 Netware
= IA32 Novell Netware client support added

2004 Feb 17; 6.08.14.17 Unix
+ server: (JAGad46216) In summary, list number of devices seen by each client.
+ initdisk/initvm: (JAGae86254(a);hpux) Support added for AdvFS.
+ diskfs: (sun,JAGaf05461) Need to use -y along with -of.
+ sysmon: (JAGaf10259;aix) Any PERM errors that occur during the Io, Init,
  or Scan phases are not logged as CRITs; the errors may not be abnormal.

2004 Feb 9; 6.08.14.09 Unix
= Application bits for HP-UX PA systems are now compiled in both 32-bit and
  64-bit models.  If an 11.00/11.11/11.23 PA system is running a 32-bit kernel,
  the 32-bit model applications are downloaded; similarly, if a 64-bit kernel,
  then 64-bit model applications. (JAGaf06127, JAGaf08613, JAGaf08772)
+ diskall: (JAGaf05048) Now makes use of the new RpcSharing function (libcli.c)
  which returns two fields:  how many hosts (client systems) share the device,
  and the ordinal number (0-based) of this host in that set.  This optimizes
  disk test coverage when a device is not shared by all client systems.
  Also..
  (JAGaf02326(b)) The first 8KB worth of blocks are never written.  This avoids
  stomping on important stuff that Solaris and Linux write to the early blocks.
+ diskraw: (JAGaf04721) Track and report RawReads and RawWrites (in addition to
  RawMbytes) whether test configuration is -c15 or not.
+ idsys: (hpux) Re-directed stderr from swlist to /dev/null.
+ diskfs: (JAGaf05127;hpux) If the VxFS file re-read code fails, e.g., because
  the file system's "orgtype" is unrecognized, the "rebuf" variable might not
  get set and, not being initialized to NULL, result in a wild pointer being
  used in free(2).  Short term fix is to ensure rebuf is initialized to NULL;
  longer term need is to use a different re-read algorithm involving O_DIRECT.

2003 Dec 31; 6.08.12.31 Unix
= The "summary" script has been dropped. Different sets of users have different
  needs, and it is basically no longer used.  Being obsolete, defunct, and
  moribund, it seemed best to just eliminate it. (JAGac23212, JAGaf04042)
+ diskall: (JAGae85319(b)) Implemented a slightly differnet approach to
  address "false positive" PTO's.
+ log: (JAGae82814(b)) Some changer-related statistics are getting mangled when
  the statistic's name is long, so switched which define is used.
+ server: (JAGae82814(b)) The changer name field in struct Changer is not big
  enough sometimes, so switched which define is used, as the potential exists
  for a string write to go beyond the end of a structure field.
+ diskabrt: (JAGae78961) Open error messages were missing information.  Since
  the FC60 was involved, it may be related to the fix for JAGae82814(b).

2003 Dec 18; 6.08.12.18 Unix
= Introducing -c6 ("diskall with reboots") and -c7 ("dt stress")!  These are
  available on all Unix platforms.
+ sysmon: (sun,JAGaf03402) Adjusted so that CRIT PTO should not occur.
+ server: (JAGaf03986) Fix server-side read failure seen during IO phase when
  Hazard server is Tru64.  Also...
  See below re JAGae83230(d2) and JAGae98525.
+ diskdt/dt: (JAGae83230(d2)) Support for executing Robin Miller's "dt" program
  has been added.  You can run this by specifying test configuration:
    -c 7
+ diskall: (JAGae98525) You can now perform diskall stress testing along with
  reboots and panics using test configuration:
    -c 6
  In the opinion of many, test configurations -c5 and -c6 are replacements for
  historic mi_wr synchronous IO testing on HP-UX.  The advantage to -c5/-c6 is
  that they are available across all platforms.

2003 Dec 16; 6.08 (aka 6.08.RC1) Windows
+ Support added for Microsoft Cluster Setup (Testing of cluster volumes as well
  as non cluster volumes is enabled)
+ Incorporated changes of 6.08 UX release by merging from V6_08 branch
+ hazard.h: added MAXHOSTNAMELEN constant
+ diskinfo-nt: stubbed serial number of the disk if serial VPD page is
  not present.
+ libqdos: Removed all Undocumented Calls, IOCTL_STORAGE_GET_DEVICE_NUMBER
  is used to obtain the functionality.
+ qdosdev: Displays all VolumeGuid to Bdev mapping if there are no arguments
+ initdisk-nt/scandisk: added volumeGuid(vol) to the device interface list. Device has
  bdev,rdev & vol as device interfaces.
+ diskfs: Volume GUID(vol) is taken from Rpcparameter
+ mkparts: removes drive letter automatically assigned after partition is created
+ hazard-nt.pl: servicePack information added in OS version
+ diskraw: rcount rpcParameter is used to see if diskraw testing is required.

2003 Dec 5; 6.08.12.05 Unix
+ server: (JAGae94334) Now tracking directly how many systems share a device
  and using that info when printing device summary.

2003 Dec 1; 6.08.12.01 Unix
+ hazard: (hpux) Now supporting HP-UX 11.31 systems, both NCKL (11.23 + 11.31
  kernel) and IC75-IC77 client systems.  The bits are compiled on 11.23, using
  11.31 include files.
+ libcli: (JAGaf01353) Fix RpcSystem() to detect RPCLOG-1 (Crit) level.
+ idsys: (hpux,JAGaf01357) In HP-UX 11.31, kernel tunables dbc_max_pct and
  dbc_min_pct are replaced with filecache_max and filecache_min.  The script
  reports whichever are found.  Also...
  (hpux,JAGae94772) HP-UX 11.31 (and possibly 11.11, eventually) has new physio
  buffer code that does not present tunable physical_io_buffers.  The script
  now copes with three possible behaviors and places the right value in
  /tmp/hazard/cl.parms.
+ client: (hpux,JAGae94772) For an OS without the traditional physio buffer
  tunables, the maxdevs calculation for a -c15 run will not attempt to factor
  in any such value, relying solely upon the other factors.

2003 Nov 13; 6.08.11.13 Unix
+ initdisk: (hpux,JAGae99207) /etc/diskinfo ref -> /usr/sbin/diskinfo.  Also...
  (hpux,JAGae99799) Better management of tool rscsi_open, introduced in version
  6.07.09.09.
+ scandisk: (hpux,JAGae99799) Better management of tool rscsi_open.  If using
  Hazard 6.08 and you get a blank line tagged with "stderr?" or an error msg
  from kill(1m), you need this fix.  We believe this is only a risk to those
  testing 4000 or more devices.
+ idsys: (linux,JAGae99269) Redirect stdout/stderr from chkconfig calls so that
  the server process does not designate the output as errors.

2003 Nov 7; 6.08.11.07 Unix
+ server: (JAGae99049) Fixed segmentation fault that occurred when using -c1.
+ sysmon: (sun,JAGae79815) Finally implemented!
+ hazard/client: (JAGae84309(b)) Support for HP-UX 10.20 has been dropped.

2003 Nov 5; 6.08.11.05 Unix
+ server: (hpux,JAGae98125) Dropped Boise-specific test configuration -c17
  and test process "syspower" (introduced by Jim R a couple years back).
  {See version 6.10.09.23 for a new use for -c17.}
+ ioscan/iodtc: (JAGae94606;aix) Adding 'bootinfo -s <dev>' seems to help if
  system has been rebooted or if array has been reconfigured.
+ diskraw: (JAGae87199;aix) Let odd/even numbered did's be alternately diskraw
  or diskfs (as cannot do both).  Also...
  (hpux,JAGae79037(b)) Library routine gethrtime can be called on HP-UX 11.00
  or later, so added support for 11.00/11.11 platforms (in addition to later
  HP-UX versions; see 6.07.nw.07).  For 11.11, patches
	PHCO_29495 and
	PHCO_25569
  (or their successors) are needed; for 11.00 patches
	PHCO_29633 and
	PHCO_26111
  (or their successors) are needed.
+ diskfs: (JAGae87199;aix) Let odd/even numbered dids be alternately diskfs or
  diskraw; completely revised for AIX so that user does not have to create
  volumes, but lets diskfs do it.  Also...
  (JAGae87205;aix) The JFS2 file system is now supported on the crfs command
  line.  As with diskfs on HP-UX and Linux, the default is to alternate file
  system types across the set of devices.  If just one file system type is
  desirec, specify via
    -o test==diskfs?fstype="string"
  where "string" is either jfs or jfs2.
+ initdisk/diskinfo (hpux,JAGae86442) Now making use of new 11.31 ioctls as
  well those that existed pre-11.31 but which we did not make use of.
+ exitdisk/humountall: (JAGae87199;aix) Improved how volumes are disabled at
  the end of a run.
+ client:  Simplified the code that chooses which devices to test.

2003 Nov 3; 6.08 Unix
+ initdisk: (JAGae66695) Commented out lines in /etc/fstab no longer falsely
  suggest a device that should be left alone.
+ client: (JAGae87964) Changed the algorithm for deriving the random number
  seed so as to get more diversity between test processes.
+ sysboot/syspanic: (JAGae87972) The minimum and random elements to the sleep
  time are now configurable options.  The minimum defaults to 1800 (seconds),
  while the random range defaults to 4096 (seconds).  They may be configured
  using these command-line options:
    -o test==<test>?timesleepM=#
    -o test==<test>?timesleepR=#
  where # is the number of seconds and <test> is either sysboot or syspanic.

2003 Sep 25; 6.07.09.25 Unix
+ sysprobe: (JAGae91864;aix) The typical purposes for sysprobe -- to verify
  that all devices are alive and well during a Hazard run, and that the set of
  devices is unchanged (e.g., on HP-UX) -- are not possible on AIX.  This
  test process is, therefore, non-functional; it simply exits.
+ idsys: (linux) Tweak for UnitedLinux.
+ initdisk/diskinfo (hpux,JAGae89733) One more little initdisk tweak.  Also...
  (hpux,JAGae91901) In addition to checking ioctl return status, diskinfo needs
  to check the status of the SCSI command lest bogus values print out.  Also...
  (unix,JAGae91903) Rwgdid now sanity-checks the "bytes/sector" parameter.

2003 Sep 19; 6.07.09.19 Unix
+ ioscan/iodtc/diskinfo: (JAGae86095,JAGae90754;aix) Fixed diskinfo so that it
  works for EVA as well as other storage.  Revised ioscan to conform with the
  proposed standard in HazRFC02. {work-in-progress, subject to change.}
  It is the user's responsibility to ensure that the io.client file lists the
  devices they expect to see.  If they do not see them, they should refer to:
    alldisks.dat	List of all disk devices configured, per AIX.
    skipped.dat		Disks (from alldisks.dat) that will not be listed in
			the io.client file, along with the reason why.
  in /tmp/hazard on each client system.
+ initdisk/scandisk: (JAGae86095,JAGae87197;aix) Revised to utilize the new
  ioscan/iodtc output.
  {Note: at this point, good only for diskraw; use -Cdiskfs}

2003 Sep 17; 6.07.09.17 Unix
+ diskall/diskevery/diskraw: (JAGae91249) For driver developers trying to debug
  open error ENXIO (as distinct from EIO), the
    -o test==<test>?cat7b=#
  option may now be specified, where # is any one of the five possible actions
  and <test> is either diskall, diskevery, or diskraw.  If you don't care
  whether the error is EIO or ENXIO, the existing "cat7" option may still be
  used.  In both cases, if # is 5, the corresponding command string option is
  still "ccmd7".  {Note: see earlier version 6.05.13.50 re "cat7", and see
  6.07.nw.09 re "cat7a".}
+ server:  The built-in test configurations that include diskabrt no longer
  exclude the "Ice" (Model 12) and "Icicle" (Model 12H) AutoRAID arrays
  from being tested with diskabrt.  This change is because these devices have
  long been obsolete and no longer figure in tests.
+ client: (JAGae90894) Test process lifetimes are long only if "totdevs"
  is less than both maxdevs and maxvadevs; otherwise, their lifetimes are
  as implemented in 6.07.nw.07.

2003 Sep 10; 6.07.09.10 Unix
+ initvm: (hpux,(JAGae89667) File mountvm now has a timestamp as its first
  field, enabling users to track how fast/slow volumes are being processed.
+ diskfs: (unix,JAGae90511) Fixed defect introduced in 6.07.09.05 re default
  value for -osync.
+ server/sysboot/syspanic: (unix,JAGae89292) Any text string involving a
  hostname should use MAXHOSTNAMELEN (this can vary from OS to OS).

2003 Sep 9; 6.07.09.09 Unix
+ initdisk: (hpux,JAGae75519,JAGae89733) To work around a squirrely
  behavior in the Fibre Channel driver that causes the Init and Scan phases to
  have poor performance, we play a "trick" by opening the /dev/rscsi/* devices
  at the start of initdisk and closing them at the end of scandisk.
  Also...
  (JAGae89667) File mountdisk now has a timestamp as its first field, enabling
  folk to track how fast/slow devices are being processed.
+ scandisk: (hpux,JAGae89733) Cooperate with initdisk by killing off the
  rscsi_open process.
+ diskabrt: (sun,JAGae76054) Corrected how CDB and ioctl structures are set.
+ diskres:  (sun,JAGae90053) Corrected how CDB and ioctl structures are set.
+ diskbdr:  (sun)            Corrected how CDB and ioctl structures are set.
+ diskinfo: (sun)            Corrected how CDB and ioctl structures are set.
+ ioscan:   (sun)            Corrected how CDB and ioctl structures are set.

2003 Sep 8; 6.07.09.08 Unix
+ ioscan/iodtc: (sun,JAGae90028) The devices being hidden by Autopath or mpxio
  are still present in the kernel registry.  Our home-brew ioscan was finding
  them and listing their "hardware paths" but with bogus info about them.
  They are now being properly detected and not listed.

2003 Sep 5; 6.07.09.05 Unix
+ ioscan/iodtc: (sun,JAGae80419) Support for Autopath driver added.
+ diskfs: (unix,JAGae80187,JAGae83770(partial);cf.HazRFC01) Certain files
  are now opened with certain flags.  The flags are O_DSYNC, O_SYNC, O_RSYNC,
  and O_DIRECT (where supported -- at present O_DIRECT is supported on HP-UX
  from 11.11 on higher, on AIX, and on Linux 2.6); it is not supported on
  Linux 2.4 or Solaris (altho, see 6.10.11.18)).  In the event of a corruption,
  the flags in effect for the given file are reported.  The user may also
  specify that certain flags be used for all file opens:
    -o test==diskfs?direct=1	# all opens use O_DIRECT
    -o test==diskfs?sync=1	# all opens use O_DSYNC
    -o test==diskfs?sync=2	# all opens use O_SYNC
    -o test==diskfs?sync=3	# all opens use O_SYNC|O_RSYNC
    -o test==diskfs?sync=4	# all opens use O_DSYNC|O_RSYNC
  The user may also specify that these flags never be used:
    -o test==diskfs?direct=0	# no opens may use O_DIRECT
    -o test==diskfs?sync=0	# no opens may use any O_*SYNC
  It is invalid to request that all opens use both O_DIRECT and O_*SYNC.
  YOUR ATTENTION, PLEASE!
  It is quite possible that the default behavior will increase the overall IO
  load that Hazard generates.  If the user wishes Hazard to behave as before,
  it suffices to set options "direct" and "sync" to 0. {see version 6.07.09.10}

2003 Sep 3; 6.07.09.03 Unix
= Added support for OSF/Tru64 5.1 as a Hazard server (JAGae89350).
+ initchgr/initdisk/initvm: (unix) The rwgdid tool now uses a buffer aligned to
  512 (as it always has for Linux).
+ syspanic: (hpux,JAGae73456) The default ktest ioctl to panic a client system
  is now KTEST_PANIC (as it used to be in 5.x days). The traditional 6.x
  behavior -- use KTEST_ONICS_PANIC -- can be obtained via:
    -o test==syspanic?onics=1

2003 Aug 29; 6.07.08.29 Unix
+ idsys: (JAGae89156;hpux) Tunable physical_io_buffers can sometimes have the
  value 0, but that doesn't actually mean 0, so we have to handle that case.
+ diskfs: (JAGae87569;unix) During corruption analysis, priority is raised.

2003 Aug 26; 6.07.08.26 Unix
+ initdisk: (linux,JAGae83090) Dual-boot systems and systems where the boot
  device was shared were getting tested.  We now exclude any disk with an EFI
  partition. (See similar for HP-UX, below)
+ diskraw: (JAGae83226) Treating short reads/writes as failures; only complete
  reads/writes are good.

2003 Aug 21; 6.07.nw.16 Unix
+ client: (unix) More instrumentation added to characterize execlp failures
  being seen with HP-UX 11.23 (we suspect an OS issue).
+ idsys: (linux,JAGae87924) Corrected grep of /proc/meminfo.
+ log: (JAGae79285) Some char arrays tied to SCANSIZE must be bigger than that.
+ server: (JAGae79285) A device with 16 paths to it yielded a scan attribute
  line well over 3300 characters, so bumped SCANSIZE to 3520 (in hazard.h).

2003 Aug 12; 6.07 Windows
+ diskabrt: Fixed JAGae67503
+ sysmon: Decoded system events(9,11,15,51) detail are now logged as normal
  logs instead of diag messages.
+ Shared Device testing not supported for c13,c14 and c16 test configurations.

2003 Aug 6; 6.07.nw.14 Unix
= On HP-UX clients, there's some value to tuning dbc_max_pct and dbc_min_pct.
  Here are our recommendations:
	client system memory	dbc_max_pct	dbc_min_pct
	--------------------	-----------	-----------
	512MB or less		50		5
	1GB			25		5
	2GB			15		5
	4GB			 8		4
	8GB or more		 5		1
+ client: (JAGae82396,JAGae82412,JAGae84116) Seeing a lot of swapping on HP-UX
  11.23 systems, so have adjusted upward the assumed sizes for process images.
  This will reduce the "M" factor in the Maxdevs calculation by about 12%.
  {see versions 6.06.04.93 and 6.06.04.54}
+ meminfo/libcli: (hpux,JAGae86037) If a process gets a certain signal, it
  may call pstat_getstatic.  For ia64 11.23, the buffer was too small.
+ diskfs: (hpux,JAGae73458) If an fsck -y failed when var "fsckcnt" had a
  magic value, it's possible to go into a loop; fixed.

2003 Aug 4; 6.07.nw.13 Unix
+ diskall: (JAGae85319) Implemented precautionary measures to avoid false
  PTO's and silly ERRORs from syshalt. {See also version 6.08.12.31}

2003 Jul 31; 6.07.nw.12 Unix
+ hazard: (JAGae84818) Added support for Linux client systems with 2.6 kernels.

2003 Jul 25; 6.07.nw.11 Unix
+ server/log: (JAGae84309(a)) The server-side bits are now compiled on 64-bit
  PA HP-UX 11.00 and IA64 HP-UX 11.22 (as well as i386 Linux).  For HP-UX
  systems, this means that 32-bit 10.20/11.00 systems are no longer supported
  as Hazard servers; rather, you must use a 64-bit system running HP-UX 11.00,
  11.11, 11.22, or 11.23.
+ idsys: (hpux,JAGae84113,JAGae84144) On HP-UX 10.20 clients, we were failing
  to derive a "B" value for use in the Maxdevs calculation for -c15 runs, and
  so Maxdevs was ending up as 0; fixed.
+ client: (JAGae84309(a)) Even though HP-UX 10.20 is obsolete and no longer
  supported by HP, BCS and NSS are still doing compatibility testing.  Thus,
  we will support HP-UX 10.20 up thru and including Hazard 6.08.

2003 Jul 22; 6.07.nw.10 Unix
+ syspanic: (linux,JAGae81931) If insmod has troubles with panic_module.o,
  it'll be recorded in /tmp/hazard/pm.err.
+ idsys: (hpux,JAGae80725) The value of km_disable is set by default to 0
  (which is the kernel's default value).  In the experience of HA Test,
  for -c15 runs, you should set this tunable to 1; e.g.:
    -o km_disable=1
  The value you use for other runs is per your discretion.

2003 Jul 18; 6.07.nw.09 Unix
+ server: (JAGae82739) The license verification mechanism has been simplified,
  at Robin Miller's suggestion, so that only the first 4 characters of a
  release ID are significant; that is, a license for, e.g., 6.07, will work for
  versions 6.07 and 6.07.nw.xx.  To be specific, because the change involves
  both license creation and license verification, here's what to do:
    versions						get a license for...
    --------						--------------------
    6.07						6.07
    6.07.nw.09 or later					6.07
    6.07.nw.08 or earlier				6.07.nw.xx
    6.06.04.ZR or earlier				6.06.04.xx
+ diskall/diskevery/diskraw: (JAGae83179) For driver developers trying to debug
  open error EIO (as distinct from ENXIO), the
    -o test==<test>?cat7a=#
  option may now be specified, where # is any one of the five possible actions
  and <test> is either diskall, diskevery, or diskraw.  If you don't care
  whether the error is EIO or ENXIO, the existing "cat7" option may still be
  used.  {Note: see earlier version 6.05.13.50 re "cat7", and see 6.07.09.17
  re "cat7a" vs. "cat7b".}
+ client: (JAGae77418,JAGae83180,JAGae85652,JAGae87931) Instrumentation has
  been added in an attempt to characterize the case when a test proc's command
  name is null/empty or garbage.

2003 Jul 16; 6.07.nw.08 Unix
+ initdisk: (hpux,JAGae69498,JAGae74763) IA64 systems with two, alternative
  root/boot disks, IA64 systems with multiple paths to their root/boot disk,
  and PA-RISC client systems that can "see" an IA64 system's root/boot disk are
  configurations wherein a root/boot disk could get scribbled by Hazard.  We
  now exclude any disk with an EFI partition.
+ diskall/diskevery/diskraw:  The phrase "device offset" in a log message has
  been changed to "lseek offset" as some have wondered if the decimal value
  was an LBA (the LBA is printed after, in parentheses).
+ server: (JAGae82814) Either #define OPTIONSIZE needs to be bigger, or else
  there may be sprintf overflows to be guarded against, because sometimes
  -occmdX's value is getting truncated.  Implemented both. {Probably finally
  solved this in 6.09.06.03.}

2003 Jul 2; 6.07.nw.07 Unix
+ ioscan/iodtc: (sun,JAGae71992) Added support for MPxIO (scsi_vhci) devices.
+ server: (JAGae79912) If a rebooting client system did not respond to a ping,
  a reason code is printed.  E.g., "5sto" => 5 second timeout (no response in
  5 seconds).
  Also...
  (JAGae79980) Incompatiable command-line options are now detected and
  handled.
  Also...
  Upon the advice of Praveen Kumar, the buffers at either end of the upstream
  as well as downstream socket end-points are now 32k instead of 128k.
+ client:  Upon the advice of Praveen Kumar, the buffers at either end of the
  upstream as well as downstream socket end-points are now 32k instead of 128k.
  Blocking on a socket write may, thus, occur more often but for a shorter
  time.
  Also...
  (JAGae79173) Only 1 shared memory segment is created for a -c15 run.
  Also...  Profiling by Chris Ruemmler on HP-UX found, among other things,
  that one can have altogether too many shared memory segments.  So, not only
  have we undone the change in 6.06.04.W8, but have reduced the number of
  segments to be at most 256.  As a result, on HP-UX, max_async_ports should
  be at most 768 (less is OK, too).
  Also...
  Test process lifetimes now range over an interval between 2 hours and 4.25
  hours.  This should help spread out test process terminations and launches,
  spreading out the impact upon the client process's behavior.
+ diskabrt/diskbdr: (hpux,JAGae78954) Added support for fcd_vbus driver.
+ diskabrt:  The more devices being tested, the longer the default timesleep.
+ diskraw: (hpux,JAGae79037(a)) On 11.22 or later, use gethrtime() instead of
  gettimeofday() as this does not involve a system call; its use, therefore,
  may improve performance and decrease the (small) likelihood of being pre-
  empted, thereby improving the accuracy of our calculations.  Also...
  Restored behavior introduced in 6.06.04.F9 (but inadvertently removed in
  6.06.04.Y2), which was a refinement to the limit to shared memory use
  introduced in 6.05.06.35; that is, limit the use of shared memory for writes.
  Contention for shared memory is bad (suggesting more segments), but too many
  is also bad.  That leaves limiting its use as the recourse.  Specifically, on
  HP-UX, at most "max_async_ports" worth of diskraws will use shared memory;
  on other platforms, only 4.  On HP-UX, max_async_ports should be no more than
  768 (and less -- 512, 256, 50 -- is certainly OK).  Also...
  The default value for "timetest" now depends upon the number of devices
  under test; more devices implies longer average inner loop times (3 minutes
  at the shortest, 30 minutes at the longest), to ensure the allocated area
  gets worked over enough.
+ diskfs:  Limited even further the number of diskfs processes that write from
  shared memory; the first process (n=0) uses shared memory if did%128 == 0
  (see also 6.06.04.W8, 6.06.04.F9).
+ sysmon: (hpux,JAGae80192) The frequency with which the freemem and avenrun
  values are logged has been doubled.

2003 Jun 2; 6.07 Unix
= The old "-opanic=#" option, in the sense of "panic on corruption", has been
  obsolete for quite some time, replaced long ago with "-ocat3=1".  It now has
  a new meaning and is used by the client process.
+ client: (unix) Several behaviors have been changed, and some new options
  have been added.  The options are to help debug some socket issues seen
  with HP-UX 11.23, are not specified by the average user.  First, the number
  of PacketReceive's (socket reads) performed (by default) before doing a
  wait3() call has been increased from 3 to 10.  Second, the greater the
  number of devices (and, thus, the greater the number of test processes),
  the higher the priority at which the client process will execute.
  Options:
    -o wait=#	The number of PacketReceive's to perform before calling
		wait3().  The default is 10.  The range is 1 to 30.
    -o nice=#	The change in priority level that will be passed to nice().
		The default value is either 0, 5, or 10, depending.  The range
		is 2 to 10.
    -o panic=1  If a socket read (PacketReceive) results in errno ETIMEDOUT,
		setting this option causes the client system to panic.
		The default is, of course, not to panic the system but exit.
    -o rpcmd=<str>	If the user plans to panic the client system in the
		event that a socket read returns ETIMEDOUT, the user may
		also request that a command script be called (presumably
		to do a remote panic to the Hazard server).  The script's
		path is provided as the option's argument.
+ diskfs: (unix) If the last run terminated in such a way as to leave some
  file systems mounted, cleanup is attempted via umount.  Also...
  File systems are now mounted on /diskfs/did# (instead of /diskfs/<path>)
  as many folk found the earlier naming convention confusing.  Also...
  (linux) Dropped the raidstart/raidstop calls added in 6.06.04.U6.  This
  idea demonstrably bad per experience in Boeblingen.
+ server:  If the stderr socket closes a little earlier than expected after
  DYING, this fact is no longer logged as a WARNING or ERROR as it's just
  incidental.
+ syspanic: (hpux) On 10.20 and 11.00 client systems, the message logged to
  haz.errlog now indicates the name of the variable getting zapped in order
  to force the panic.
+ initdisk/scandisk: (hpux,JAGae70192) Any disk that is 1TB or larger contains
  more 512-byte blocks than a signed integer can represent.  This was causing
  math calculations in shell scripts to produce bogus results (sometimes
  saying a TB lun was "too small" or causing the server to get a malloc
  failure).  The math calculations are now being done via "dc".
+ hazard:  HP-UX 11.20 is no longer supported.

2003 May 07; 6.06.04.X7.HW.SD.2 Windows
+ hazard: (Windows) Release file bug (JAGae71633) fixed.
  Release file is supposed to be part of the Hazard Windows as per the new
  Hazard release procedures. This release addresses this issue by adding the
  Release file to its client shar bundles.
+ sysmon: Continuing on to improve the usage of sysmon, code has been added
  to interpret the system log reported Event ID 51 (generally due to the device
  "paging" errors sourced by the DISK driver) dump data and present.
+ sysmon:  A bug in sysmon which causes a SIGSEGV has been fixed (thanks to
  Fernando Corrall for pointing us to that).
+ unmount: Windows "mountvol /D" does not actually dismount the volumes mounted
  for testing. Hazard exit phase has now been modified to use a new binary
  "unmount.exe" to effect actual volume dismount to happen when Hazard exits.
+ shared device: During file system testing it has been noticed that a volume
  "lock & dismount" operation can fail if some external applications, like
  virus scanner, are accessing the volume. To avoid these point-of-failures,
  the "lock & dismount" operation retry count has been increased (from 9 to
  99 - thanks to William Waters).
+ hazard: (.NET) The current release bits had been tested on IA-32 .NET
  servers and also on IA-64 Windows 2003 Advanced Server.

2003 Apr 30; 6.06.04.ZG Unix
+ server:  Refined the -b option (cf. 6.06.04.38) thusly:  If -b is specified
  on the command line, then certain socket i/o activities are not protected
  by alarm() calls with timeouts.  Here are the specific socket i/o activities
  normally protected by alarm() calls, and whether or not -b applies:
    Action			Timeout	-T multiplies timeout?	-b => no alarm
    ------------------------	-------	----------------------	--------------
    MainPhase/IoGetLine		30 min	yes (!ID phase)		no
    MainPhase/IoGetLine		 6 min	no  (ID phase only)	no
    RemoteCommand/rcmd		 3 min	no  (creates sockets)	no
    ProcessStart/PacketSend	 3 min	no  (client socket)	yes
    StartComplete/PacketSend	 3 min	no  (client socket)	yes
    SystemPing/PacketSend	 3 min	yes (client socket)	yes
    MainLoop/PacketReceive	 3 min	yes (client socket)	yes
    MainLoop/PacketSend		 3 min	yes (client socket)	yes
    MainLoop/IoGetLine		 3 min	no  (stderr socket)	yes
    MainLoop/PacketReceive/h	 3 min	no  (heartbeat socket)	yes
  Given these timeouts, it can be seen that -T should probably take an
  argument no greater than 2 or 3; values such as 10 are imprudent.  Also...
  In the case of a socket i/o timeout (the "alarm" went off), the sequelae
  depends whether or not any of -w, -R, or -W have been specified on the
  command line.  If none of them, then the usual local and remote netstat's
  are performed.  But if one or more of them are specified, then they are
  invoked.  Specifically, via these options, the user may request that certain
  (potentially different) command scripts are invoked:
    -R <cmd> # execute cmd on the client if socket read times out in MainLoop
    -W <cmd> # execute cmd on the client if socket write times out in MainLoop
    -w <cmd> # execute cmd on the server if socket i/o times out in MainLoop
  Also...  The change in treatment of vendor IDs in model strings in 6.06.04.V4
  made it so that 3rd parties cannot test LVM, VxVM (hpux), or MD (linux)
  volumes; corrected.
+ initdisk: (hpux) Hazard's own diskinfo is no longer called with -v, as that
  requests device geometry, and some devices don't respond to that.  And,
  besides, it's irrelevant for HP-UX.  Also...
  (linux,JAGae70085) When checking to see if a partition of a device is
  currently mounted, we now check more than just partition 1.
+ client:  Altered internal exit codes so as to correct when sleep's are
  performed during clean-up before exiting.
+ hazard:  AIX 4.3.3 is no longer supported.
+ diskall:  The "start" value is a block offset relative to the "Raw offset"
  value printed earlier, as in diskraw.  Some error messages now have more
  info that can help developers debug, in case there's a question.
+ ioscan/iodtc: (sun) Utilities drvconfig, et al, are now only called if ioscan
  is invoked with -v.  Since we have seen hangs and other problems with
  drvconfig, we don't want that to happen during the Io phase.  If users think
  newly configured devices are not being picked up by ioscan, they shall need to
  invoke ioscan -v themselves on the client system before starting Hazard.
  Also...  Drivers db21554, jnic146x, and qlc are now supported by ioscan.

2003 Apr 14; 6.06.04.X7.HW.SD.1 Windows
+ hazard: (Windows) Added support for testing shared devices.
  Hazard Windows users previously have encountered corruption during file
  system (diskfs) test runs in multi-initiator environments. Corruption
  was occuring bec's the code was heavily depending on "mountvol /D" to
  do an automatic flush and dismount of the volume (analogous to Unix umount).
  But it was found that the "mountvol /D" does not suffice to effect the
  umount behavior. Windows provides separate Filesystem IO control codes to
  flush and dismount the volume listed below:
  FSCTL_(UN)LOCK_VOLUME - flushes the data cache
  FSCTL_DISMOUNT_VOLUME - dismounts the volume
  Also during a shared device hand-off, imagine two hosts sharing a lun,
  when one host has completed its filesystem testing and handed over the
  lun to its counterpart for further testing, will excercise a LOCK on the
  volume preventing any external applications running on that host accessing
  it (this simply prevents unexpected corruption occuring due to these
  external factors)
+ hazard: (Windows) XP-64 on IA-64 build bits added to Hazard Windows shar
  bundle.
+ sysmon: (Windows) On some Windows clients sysmon has been found to disappear
  all of a sudden from hazard test environment resulting in a "Process timed
  out" logged in the server against its gpid. This is due to an incorrect
  handling of EventLog within the sysmon itself (by the way of identifying
  the log message source DLLs).

2003 Apr 11; 6.06.04.ZC
+ server:  If PacketReceive fails in MainLoop, it should call SystemDying.
  This was inadvertently dropped from code in version 6.06.04.ZB.
+ initdisk: (linux) Devices that have multiple partitions involved with
  multiple 'md' devices produce content for /proc/mdstat that was not being
  handled properly; fixed.
+ idsys: (hpux,JAGae69156) The SCSI team has advised that the change to
  scsi_log_mask in version 6.06.04.W8 was imprudent, that 3f33bf13 is best for
  a default value.  Anyone wanting SCSI_LOG_ALL (0x20) can specify:
    -o scsi_log_mask=3f33bf33
  on their command line.

2003 Apr 1; 6.06.04.ZB
+ io-time-stats:  The awk script code has been replaced with a C program,
  logstat.  The output is now easier to understand than in 6.06.04.N7.
+ idsys: (hpux,JAGae68158) One of the calls to pdcinfo (intro'd in 6.06.04.V4),
  needed stderr to be redirected.
+ diskabrt/diskbdr/diskres:  A bunch of similar code was made identical after
  a problem was seen with diskabrt similar to diskres (cf. version 6.06.04.T2).

2003 Mar 12; 6.06.04.Y2
+ client: (unix) If the client process receives a SIGTERM, presumably it's
  from a test process dying due to SIGSEGV.  If the user wishes to panic
  the system at such a time, specify:
    -o panic=1
  This is in addition to the option description in version 6.06.04.44.  Also..
  Some users have reported seeing multiple client processes.  If a run is
  terminated for some unusual reason while the client process is spawning
  test processes, this can occur, and with strange results.  Additional
  signal handling has been added between fork() and exec() to address this.
+ diskraw:  The i/o completion counter bucket time range that ended in 47
  seconds, now ends at 45.  If option var "timeio" (see version 6.05.06.81) is
  set to non-zero value, var "riobang" (see versions 6.05.10.44 and 6.06.04.F9;
  see also version 6.10.11.02) is forcibly set.  In turn, the statistic
  "RawMbytes" is only reported if timeio is not set.
  Also...
  The reporting of the "max" i/o completion time stats was not being reported
  in a timely manner from version 6.06.04.L5 on.  The stats are now being
  reported with the same frequency as the time range counter buckets.
+ server:  The change in 6.06.04.V4 to the device summary data was incomplete;
  completed.

2003 Mar 7; 6.06.04.X7
= Had a case where a client-side app experienced a(n unwarranted) SIGSEGV so
  early in its "life" that its gpid was not yet set.  RpcExitSA (SA=sigaction)
  was called on SIGSEGV, and RpcLog messages with a gpid of 0 crashed the
  server process.  So now its messages are written on stderr using ErrLogPrint.
+ client:  Back by popular demand!  Because we limit how many devices will be
  tested by diskfs at one time, it seems reasonable to optionally bump up
  maxdevs in order to test more devices.  The formula is:
    maxdevs += (maxdevs - maxfsdevs)/mdid
  where "mdid" (MaxDevs Incremental Divisor) is specified via:
    -o mdid=#
  {Note:  see also versions 6.05.06.A4 and 6.05.10.35}
+ diskraw:  On configurations with multiplied thousands of luns, not much i/o
  is getting done when test time ranges between 1 and 6 minutes, so extended
  the range by another 3 minutes. (By contrast, on small configurations,
  the time frame can be needlessly long, so we limit the inner loop to 8192
  cycles.) As ever, the user can specify another timetest range via:
    -o test==diskraw?timetest=#
  where "#" is then number of seconds in the timetest range.
  {Note: see also version 6.05.10.49}
+ server:  More good pings (was eight) are now required before attempting any
  rcmd's.  Systems are taking ever longer to come up, specifically the time
  lapse between when the kernel will respond to pings and when the whole system
  is ready for prime time. {Note:  see also version 6.05.10.36}

2003 Feb 28; 6.06.04.W8
+ idsys: (hpux) The scsi_log_mask bitmask is now OR'd with 0x3f33bf33.  This
  is at the request of Damon Summers, who filed a JAG with SCSI asking them
  to support a bit to log "all" diagnostics.  SCSI has provided 0x20,
  SCSI_LOG_ALL.
+ diskfs:  After conversations with Jim Remedios, my conclusion is that at
  most one diskfs process per device should be writing from shared memory.
  (It's possible the shared memory contention issue is HP-UX-specific, but we
  don't know that for sure, so better to have this behavior be ubiquitous.)
  This change restores the behavior first introduced in 6.05.06.69 (so present
  in 6.06) but reversed (evidently inappropriately) in 6.06.04.93.
+ client: (unix,JAGae58307) The code added to 6.06.04.C9 to avoid creating more
  shared memory segments than necessary missed the fact that one factor was not
  yet set (and so 0), which resulted in going back to only having one shared
  memory segment, ala 6.04.xx.xx (anything prior to late November, 2000).  The
  resulting shared memory contention does nasty things to i/o completion times
  in c8/c16 runs.  Code was re-arranged to fix this.  Also...
  Support up to 1024 shmid's (shared memory segments; vs. prior 512).

2003 Feb 14; 6.06.04.V4
= The corruption "Types" are now designated as "read failure", "write failure",
  "read and write failure", and "unknown".  The use of "error" in these type
  designations was misunderstood by some users; "failure" is more generic.
+ idsys: (hpux) If 'pdcinfo' or 'machinfo' are present, certain elements of
  their output are captured and logged.  Also...
  Certain patch bundles are breaking /usr/sbin/kmpath on 11.11.  A work-
  around is now in place.
+ server:  Vendor IDs are now mapped to all upper case.  This should help
  simplify the list of vendor IDs (some vendors are starting to present
  the vendor ID in mixed case) (see also 6.06.04.ZG).  Also...
  The "file system type" column in the Device Summary has been dropped.
  There are too many run-time variables that can affect this decision, and
  so a-priori assumptions may be invalid.
+ diskfs: (hpux) Unless a particular file system type is specifically
  requested, the traditional rule has been: hfs on even-numbered devices, vxfs
  on odd-numbered devices.  However, now that we're commonly testing devices
  larger than 128GB (HFS' limit), a new rule is in force for default
  situations:  Any even-numbered device > 146GB will use VxFS rather than HFS;
  and if it's between 128GB and 146GB, then HFS will be used and only the first
  128GB will be tested. {Xref: 6.06.04.85 and 6.10.10.28}
+ sysmon: (linux) Any diagnostics containing the substring "reset" will now
  be flagged as CRITs during a -c8 (or similar non-recovery) run.
+ initdisk: (hpux) Until the patch for the problem of diskinfo returning a
  bogus size on very large devices (terabyte) gets proliferated, we have a
  implemented a workaround.

2003 Feb 6; 6.06.04.U6
+ taperaw: (hpux) Found a compilation defect that has rendered this tool
  impotent since as far back as 6.05.06.70 (Aug 10, 2001).
+ syspanic: (unix) Slight improvement to sync's (cf. 6.06.04.T2).
+ server:  Category 1 licenses are now possible for sites with dec.com
  addresses (in addition to hp.com and cpqcorp.net).
+ iovm: (linux) Software RAID logical volumes (/dev/md*) are now listed
  (and their physical/logical device mappings identified).
+ initdisk: (linux) Physical and/or logical devices involved with 'md' logical
  volumes are now detected and, thus, not directly tested. {cf. ver 6.06.04.ZC}
+ initvm: (linux) Since the RedHat raw driver is incompatible with 'md', only
  diskfs testing is possible on logical volumes; clues to diskraw are provided.
+ scanvm: (linux) No longer exits on Linux, but processes initvm output.
+ diskraw: (linux) Logical 'md' volumes are not tested; the process exits.
+ diskfs: (linux) Utility 'raidstart' is called before mounting an 'md' logical
  volume, while 'raidstop' is called after umounting one (per the suggestion of
  some folks in Houston; but see 6.06.04.ZQ).  Also...
  Use fsck -y the first time a file system is looked at (sometimes fsck -n
  does not give desired results when we're wondering about the need to build
  a file system).
+ exitdisk: (linux) Ensure all 'md' volumes are started before end of test.
+ idsys: (linux) Ensure all 'md' volumes are started before Io phase.  Also...
  (hpux) Log HP-UX version, including IC roll, from swlist's output.
+ scandisk: (sun,aix) The default diskraw read/write buffer byte address
  alignment ("rbufalign") is now 4.  For more info, see 6.06.04.B9.  This
  change is required for SecurePath (and EVA) testing on Solaris and AIX.
+ iodtc/sysprobe: (sun) Ioscan only calls drvconfig, devlinks, et al, during
  the Io phase.

2003 Jan 22; 6.06.04.T2
+ diskres:  Back-to-back RpcAcquire and sleep() could result in -P1 reporting
  a PTO (process timed out), so added code to adjust log's expectation.
+ sysmon: (aix) Iostat is called more often, avoiding any PTO's when -P1 used.
+ initdisk: (aix) While problems with diskinfo are being investigated, we'll
  assume that all devices are 200MB are larger, and limit ourselves to 200MB
  (this has been the limit for raw devices since JR first coded this script).
+ diskfs:  A 7 hour long newfs was observed, so the default OFF time
  (affecting log's process timeout check) was increased.
+ syspanic: (unix) Three calls to sync() are made just before the action that
  causes the panic.  Some Unix systems seem to do better than others about
  flushing metadata (impacts diskfs); Linux, in particular, is a bit slack.
+ idsys: (hpux) The /usr/sbin/km* utilities have been replaced with a somewhat
  different set of /usr/sbin/kc* utilities in HP-UX 11.23, so we've had to
  adapt.  Also...
  Fixed the code that seeks to detect if any of the driver logs masks has been
  set to 0xFFFFFFFF (and if a mask is not set to that, the high/sign bit must
  not be set or else the shell gets badly confused).

2003 Jan 9; 6.06.04.R9
+ client: (hpux,JAGae55850) For -c15 runs, the number of physical i/o buffers
  is factored-in as a constraint (as per 6.06.04.A0), unless overridden by
  -omaxdevs.

2002 Dec 19; 6.06.04.P9
+ server:  If a shell script is used to start hazard/server, and if the server
  process runs in the foreground, and if -t is used to specify a termination
  time, then the "kill(0,SIGINT)" call will terminate both it and the shell
  script.  We believe an immediately preceding call to setsid() fixes this.
+ initdisk: (aix) Corrected code for handling stderr when rwgdid is run.

2002 Dec 16; 6.06.04.P6
+ syspanic: (hpux) Corrected code that reports errno if ktest fails.  And note
  that on 11.22, the panic ioctl for syspanic works, but the ioctl for "panic
  on corruption" does not.  This is a defect in 11.22.
+ initdisk: (aix) Corrected code for handling product ID (aka "Model"); this
  fix required for testing the EVA.

2002 Nov 27; 6.06.04.N7
+ exitdisk: (unix) Improved grep for diskfs procs (that appear to be hung).
+ io-time-stats:  Revised to match changes in diskraw, starting at 6.06.04.J6.
+ sysmon: (linux) Returning to code used in versions 'F9 to 'J6, including 'I8.

2002 Nov 15; 6.06.04.M5
+ scantape: (hpux) Making sure that /etc/diskinfo is what gets called.
+ insf: (linux) Correction re /dev/sg* devices, per experience with devfs.
+ diskraw: (linux/Windows) Tweak to how we print a block's pattern offset -
  the expected offset, this time - and its "signature" (yet another improvement
  beyond what was done in 6.05.13.72 and 6.05.13.49).
+ diskfs: (linux) Fsck -n is only performed if tune2fs gives the file system
  a clean bill of health.
+ server:  License categories 0 and 2 are now essentially the same; only the
  license web page (JavaScript) distinguishes them.

2002 Nov 5; 6.06.04.L5
+ client/server:  A slight simplification to the task to-do list should speed
  up the Scan phase as well as client restarts during HA recovery-type runs.
+ client: (unix) A tweak to how often wait3() is called should improve the
  handling of test processes that have exited.  Also tweaked slightly for
  Alpha Linux.
+ diskraw:  The set of stats collected and reported was revised slightly:
    # of ops that took <=2 second to complete
    # of ops that took > 2 but <=17 secs to complete
    # of ops that took >17 but <=32 secs to complete
    # of ops that took >32 but <=47 secs to complete
    # of ops that took >47 but <=62 secs to complete
    # of ops that took >62 but <=77 secs to complete
    # of ops that took >77 but <=82 secs to complete
    # of ops that took >82 seconds to complete
  User feedback as to whether this is the right set of 8 "buckets" is welcome.
+ diskinfo:  If the unit serial number cannot be obtained, rather than issue
  an error message, we now simply print "stub" as the serial number.  This
  makes the tool more robust.
+ exitdisk:  Apparently hung diskfs procs are now reported at the WARN level,
  while unmountable file systems are now reported at the ERROR level.  This
  change results from seeing some diskfs procs persisting while their
  umount (and maybe newfs or fsck) completes, which is not a problem.  Truly
  hung diskfs procs will result in the file system not being umount-able.
+ idsys: (linux) Minor tweaks to handle Alpha Linux.

2002 Oct 24; 6.06.04.K4
+ sysmon: (hpux,linux) Since the freemem and avenrun statistics are highly
  client-specific, they are now suffixed with their system ID ("sid") to
  enable log's manner of printing statistics to be more easily understood.
  Also... (hpux) The freemem value was not being read correctly from kernels
  on 11.20 or higher systems:  corrected.  Also...
  (linux) Introduced alternate code to address SIGSEGV problem.
+ client: The fundamental change to the device selection algorithm (when
  totdevs > maxdevs) made in 6.05.10.57 needed one more trivial tweak (to
  server.c, re info it provides to the client process) to work exactly as
  intended (it was very, very close).
+ log:  In certain cases when printing statistics, a divide-by-zero condition
  could occur:  fixed.
+ diskfs:  During the early minutes of a run, the dynamic behavior described
  in version 6.06.04.36 could result in inner cycle ("start/stop") times that
  were a bit too short.  A dynamic adjustment to the target number of writes
  now seeks to make those times neither too short nor too long.
+ server:  If -N is specified on the command line, TCP_NODELAY is set on the
  client process's socket.  At this point we are experimenting and are not
  generally recommending its use.
+ idsys: (hpux) Adjusted lanscan's args per a change in HP-UX 11.23.

2002 Oct 16; 6.06.04.J6
+ diskraw:  For several years, users have been asking for an accounting of
  the time to complete all i/o's during a -c15 run.  We have now created a
  series of counters for specific ranges of time, based upon feedback from
  the SCSI driver team.  They are as follows:
    # of ops that took <=2 second to complete
    # of ops that took > 2 but <=17 secs to complete
    # of ops that took >17 but <=32 secs to complete
    # of ops that took >32 but <=47 secs to complete
    # of ops that took >47 but <=62 secs to complete
    # of ops that took >62 but <=77 secs to complete
    # of ops that took >77 seconds to complete
  As before, the total # of i/o operations is counted, and the maximum i/o
  completion time for an i/o operation (altho reported in a slightly different
  manner).  A corresponding re-design of io-time-stats will be forthcoming
  (see versions 6.06.04.N7, 6.06.04.ZB, and 6.11.07.15).
+ diskfs:  Post 6.06 changes are pushing file systems to their limit more often
  than before.  Dynamic adaptations to short writes and ENOSPC introduced in
  6.06.04.23 need some improvement:  done herein.
+ log:  The output format for statistics has been improved to show more digits
  and less scientific notation.
+ hazard:  To aid with debugging some issues folks have had with un-shar'ing
  a Windows shar file, we now send un-shar output to file "hazwin_unshar.out"
  in the installation directory.

2002 Oct 8; 6.06.04.I8
+ hazard: (unix) Small tweak to code that tests for the presence of existing
  Hazard processes on a client system.
+ initdisk: (linux) Added --force to sfdisk command line.  Also...
  The script was improperly handling the case where multiple instances of
  "nodev" (no /dev/sd* or /dev/cciss/c* paths) were listed in the intermediate
  file "mountdisk":  fixed.  Also...
  (unix) Corrected code that could result in divide-by-zero when option -olf
  was set to 0 and the device was a CD/DVD drive with no media.  Also...
  (hpux) We're now combining the CD/DVD filtering used before 6.06.04.C9 along
  with the new code (because some devices slip thru the filtering).
+ server:  A tweak to the built-in test configurations for version 6.06.04.I1
  contained a typo for -c15:  fixed.  Also...
  (linux) Code added that will permit the data segment to grow beyond 2GB.
+ syspanic: (hpux) Implemented Suraj CN's suggestion for an alternate way
  to panic 11.11 clients; this is strictly for driver debug within SISL;
  other users and other circumstances should still configure ktest.  Also...
  If using ktest fails on 11.11+, the error messages are now more explicit.
+ client:  For the user who exploits the -omaxvadevs option, the VA7110
  (product ID A6189B) has been added to the existing list of VA7100, VA7400,
  and VA7410 product IDs.
+ diskfs: (linux) A proposed fix to the pread failure has been introduced.
  Also, more info gets printed on a pread failure when the raw re-read is
  being performed for an ext2 file system file.  Also... (unix)
  Fsck -y's are now performed more often than usual during HA/recovery testing.
+ diskres: (linux) Support added for pmCPQ SmartArray devices controlled by
  CPQ's CISS driver.

2002 Sep 25; 6.06.04.H5
+ diskraw: (linux) Both the /dev/raw* and /dev/sd*1 paths are printed should
  a corruption occur.
+ diskabrt:  When the ioctl call attempting to force an abort returns, a
  statistic gets logged {as before, cf. 6.05.13.10}, and then the "done"
  message gets logged (regardless of "success" or "failure").
+ initchgr/initdisk/initvm: (unix) The code to scribble over the first 128k
  of a device (or file system partition thereof; cf. 6.06.04.36) has been
  improved to execute faster.

2002 Sep 13; 6.06.04.G3
+ syspanic: (hpux) If on 11.11 or later and ktest has not been configured,
  you'll get an error message.
+ ioscan/iodtc/diskinfo: (linux,JAGae38386) Support added for pmCPQ SmartArray
  ClusterStorage devices controlled by the CISS driver.

2002 Sep 9; 6.06.04.F9
+ sysmon: (linux) Corrected code that might cause SIGSEGV.
+ syspanic: (linux) Stderr is redirected to /dev/null when insmod is called.
+ initvm: (unix) Separate instances now for HP-UX, Linux, and Solaris.
+ idsys: (unix) Used to umount /diskfs/* file systems (that somehow escaped
  the umount during the Exit phase), but have stopped doing that after a
  umount hung.
+ server:  The licensed shar file check was dying if some non-Hazard shar file
  existed in the same directory:  fixed.  Also...
  The code that calls netstat needed a case for Linux.  Also...
  The invocation of scripts in parallel is slightly staggered time-wise.
+ diskraw: (unix) Reduced the use of the shared memory segment for writes,
  especially on HP-UX (except if needed for async).  This should reduce even
  further the contention for access to the shared memory segment which is
  causing bad write times in large configurations.  Also...
  Rationalized behavior of option vars "riobang" and "riobuf".  In particular,
  setting riobang avoids gratuitous opens and split reads/writes (i.e.,
  performs single reads/writes), while setting riobuf avoids async writes
  (HP-UX-specific) and causes all writes to be done from a local buffer
  instead of shared memory. {See version 6.10.11.02 re option riobang.}
+ diskfs: (unix) If the number of bytes reported as written differs from the
  number intended, an ftruncate is performed.  Previously, this was only
  done on HP-UX.  Short writes on Linux indicated the general need.  Also...
  Added support for option
    -o test==diskfs?fsiobuf=1
  Normally diskfs writes from shared memory.  This option tells processes to
  write from a local, data segment buffer.  At this point in time, it is only
  for experimental use; we do not encourage its general usage. {Note:  cf.
  versions 6.05.06.69, 6.06.04.93, 6.06.04.W8}
+ log:  While the default -P value is 2 (i.e., 2 hours), certain processes
  may request a temporary increase.  Up until now, that temporary increase
  request did not consider the case where the user specified even more via -P;
  it now does.
+ scanchgr/scandisk/scanvm:  The starting value for diskfs' file set allocation
  is 32 ("balloc"), because in large configurations, even 32 can be over much.
  This value can change dynamically. (cf. version 6.06.04.36)

2002 Aug 30; 6.06.04.F0
+ log:  Added usage notes for -p and -c.  Option -c is being documented for
  the first time.  By default, if more than 15 minutes (9000 seconds) elapse
  between "Checking" log entries, a WARNing message is issued.
+ syshalt:  That statistic logged now differentiates between "system" and
  "cluster" events.
+ diskraw:  The start and stop messages both print "t" values.  In the start
  message, as before, "t" is the proposed test time for the inner loop, i.e.,
  the start/stop cycle.  In the stop message, "t" is the actual time it took.

2002 Aug 14; 6.06.04.D4
= Introducing test process 'diskall', sort of a combination of diskraw and
  mi_wr in that each process is allocated a large fraction of the raw device
  and writes and reads in ever increasing powers-of-2 block sizes.  The Hazard
  data pattern is used in writes, and the usual corruption analysis is
  performed if blocks, when read, differ from what was written.  Unlike mi_wr,
  all Unix platforms are supported, albeit without asynchronous writes. Diskall
  can be selected by specifying test configuration:
    -c 5
+ sysmon: (Windows) A slight adjustment should hopefully avoid the odd cases
  where this process sometimes is erroneously said to have timed out.
+ initdisk: (hpux) A minor change pursuant to Aug 9's change.  Also...
  (aix) Tweak to support diskall.
+ idsys: (linux) If /proc/modules lists "ext3", then a "marker" is left to
  alert diskfs.
+ diskfs: (linux) The ext3 file system is now supported via the -j option on
  the mkfs command line.  As with diskfs on HP-UX, the default is to alternate
  file system types across the set of devices.  If just one file system type
  is desired, specify via:
    -o test==diskfs?fstype="string"
  where "string" is either ext2 or ext3.
+ diskraw: (JAGae02276) Two more fields have been added to the "btags"
  structure.  They are now:
    lba;   // 4 bytes
    count; // 2 bytes - blocks/file written on this pass
    block; // 2 bytes - block index (0 ... iolen-1) in this write
    np     // 1 byte  - path instance # used in IO, e.g., 0 -> rdev0
    gpid   // 3 bytes - test process that did the write
    allen; // 2 bytes - blocks in this allocation (length in start message)
    iolen; // 2 bytes - blocks in this write
  To make use of this feature, specify:
    -o test==diskraw?btags=1

2002 Aug 9; 6.06.04.C9
+ initdisk: (hpux) A more generic means of detecting and avoiding CD and DVD
  devices has been implemented.  Thanks to Ben Black for the idea.
+ client:  A correction was made to the code involving "maxvadevs", solving
  the so-called "vanishing gpid" problem seen when testing VA arrays.  Also...
  Adjusted how we calculate the number of shared memory segments that we
  should create. {Note: cf. version 6.06.04.W8}

2002 Aug 2; 6.06.04.C2
+ sysboot: (hpux) If shutdown(1m) returns (it shouldn't), we now report its
  exit status or the signal that terminated it.  More debug support.
+ initchgr/initdisk/initvm: (unix) One of those trivial and arcane code changes
  that should have zero impact (where BPD, BPS are set to zero) did indeed have
  an impact (because BPD, BPS are now written to an intermediate file) when MO
  devices ("changers") were in the mix of devices under test.  Corrected.
+ server: (JAGae35958) The cause for failures during the license check is now
  reported.  Details are provided if you use -v, otherwise a "cause code" is
  listed.
+ diskfs:  Evolving code changes between 6.06.04.12 and 6.06.04.23 resulted in
  a line of code (synch point) being dropped that was really needed.  Without
  it, under a combination of certain circumstances (e.g., system panic after a
  "stop" message but before or during the umount) during c16 runs, file
  "expectations" could get sent to the server but the file's buffers not get
  flushed, resulting in a size and content mismatch.  The resulting symptom
  was an apparent metadata (size) corruption.  Fixed, by restoring the process
  synch point.

2002 Jul 29; 6.06.04.B9
+ scanchgr/scandisk: (JAGae35054;hpux) The default diskraw read/write buffer
  byte address alignment ("rbufalign") is now 4.  To test your driver's
  ability to handle other alignments, specify
    -o rbufalign=#
  where '#' is either 2 or 1 for a run where the SCAN phase will be executed.

2002 Jul 10; 6.06.04.A0
+ client: (hpux) The calculated "maxdevs" for a -c15 run now also considers the
  number of physical i/o buffers (see the output from 'idsys')(aka "nBufs").
  If no maxdevs value is supplied via -o, or if the -o/optional maxdevs value
  is greater than nBufs, we set the optional maxdevs value to "nBufs".  And if
  nBufs is a bit too low, a WARNing is issued suggesting that the number of
  physical i/o buffers be increased.

2002 Jul 3; 6.06.04.93
= The HP-UX bundles now contain a tool called 'meminfo'.  It is sort of a
  combination of 'swapinfo' and 'ps', and is for the purpose of establishing
  how much memory and swap space Hazard processes consume.
+ diskfs: (hpux) The file system block sizes for VxFS now conform more closely
  to the recommendations found in 11.11's mkfs_vxfs man page, while still
  preserving some variety.  This is important because a defect was found in
  mkfs_vxfs when small block sizes are used for very large file systems.
  Also...  All writes are again from shared memory, as in the past (before
  Aug 9, 2001). {Note:  cf. version 6.05.06.69, 6.06.04.W8}
+ client: (unix) The "maxdevs" calculation based upon megabytes (MB) of memory
  per device for Hazard test processes was revised, based upon the results
  we obtained using 'meminfo'.  The net effect is to slightly increase the
  number of devices that can be tested, given a certain amount of memory.
  {Note: cf. version 6.07.nw.14}
+ server:  Changed the order in which we check sockets for input, as it appears
  that the heartbeat socket was being starved, overwhelmed by client socket
  activity, in high lun count configurations.

2002 Jun 25; 6.06.04.85
+ diskfs: (hpux,JAGad78421) HFS file systems are limited to 128GB (due to OS
  restriction). {Xref: 6.06.04.V4 and 6.10.10.28}
  Also...
  A post-6.06 change had dropped a check to ensure that HFS frag size (as well
  as block size) were at least media block size.  This was caught during MO
  testing of media with 2k and 4k block sizes:  fixed.
+ client:  If we cannot even create one shared memory segment, exit with an
  error message.  Also... (hpux) Sync'd code in client.c and libcli.c (used by
  other test processes) for handling siginfo codes and doing pstat_*() calls.

2002 Jun 12; 6.06.04.72
= If any client-side app receives a SIGSEGV, we handle the data in the siginfo
  struct a bit more carefully on HP-UX. (Frankly, I think HP-UX values for
  si_code are incorrect, while Linux and Solaris have it right.  Lisa Mitchell
  has filed a defect report for me in this regard.)
+ diskraw: (hpux,JAGae28502) Improved the code where we do pstat_*() calls to
  be more flexible in adapting to varying data structure sizes across patch
  levels.
+ diskfs: (sun) Added support for re-reading ufs files via the raw device.
  This will help debug file system corruptions that might occur on SunOS.
+ diskabrt/diskbdr: (hpux) Support for the "swsp" (SecurePath) driver added.

2002 May 24; 6.06.04.54
+ client: (unix) The "maxdevs" calculation based upon memory has been revised
  to allow a bit more memory (192MB vs 96MB) for the base OS's needs in systems
  with 256MB or more of memory.
+ sysmon: (hpux) The kernel data structure "msgbuf" is sized differently on
  11.22 vs previous versions.  Since sysmon for PA/RISC is built on 11.00, it
  was failing on PA/RISC 11.22.  We have made sysmon 11.22-aware and it adapts
  itself now.
+ idsys: (hpux) Hazard's habit of tweaking kernel variable dbc_ceiling has
  been found to be a bad idea.  It is no longer set (so -odbc_percent is
  gone), and neither is it reported; rather, we report "dbc_max_pct" and
  "dbc_min_pct".  These are the proper tunables.  Users should determine what
  are appropriate values for these in order to obtain the behavior desired.
  To set these, one should use either SAM/kmtune/kctune, after which a kernel
  rebuild will be necessary.

2002 May 23; 6.06.04.53
+ diskabrt/diskres: (hpux) Support for the mpt driver (for LSI's Message
  Passing Technology pSCSI HBA, currently Ultra4/Ultra320) added.

2002 May 21; 6.06.04.51
+ diskfs: (sun) Version 6.06.04.38 behavior re HP-UX now working on Solaris.
+ sysmon: (aix) Tuning the code that seeks to ensure we call 'errpt' exactly
  once a minute.
+ syshalt:  During HA/recovery-type runs (c13 - c16), a syshalt process is
  now only spawned on the 1st client system (traditionally, the system that
  is not shutdown/rebooted/panicked), and not on the others.  Moreover, it
  only acquires its own system "syshalt" semaphore, and not the cluster
  semaphore.  This is a further refinement to, and for the same reasons as
  (as well as others), the behavior introduced in version 5.21 (Feb 5, 1999).
+ sysboot: (unix) When shutdown(1m) is called, stdout and stderr are redirected
  to files called "hzsd" and "hzsde", respectively, in directory /tmp (/var/tmp
  on Solaris). (This is to enable debug of shutdown-related problems, and is
  a slight change vs. version 6.06.04.40.)  Similarly, when reboot(1m) is
  called, stdout and stderr are redirected to files called "hzrb" and "hzrbe",
  respectively, in directory /tmp (or /var/tmp).

2002 May 14; 6.06.04.44
+ scandisk: (linux) Results from statistic "FsUsed" shows diskfs can
  create even more files without filling up the file system, so we are
  increasing the file count ("bcount") scan attribute so that it is
  reckoned at 92% of blocks (vs. prev. 90% estimate in ver. 6.06.04.12,
  and 80% prior to that) allocated to the file system area.  In practise,
  we are seeing actual (vs reckoned) file system usage rates 94%-97% on
  Linux, depending upon FS blocksize.
+ server:  When ioscan is run on Solaris systems (e.g., during the IO
  phase), we sometimes get "Broken Pipe" on stderr.  We have been unable
  to detect from whence this emanates, so we're just going to filter it
  out, as no problem is evident on the client side.
+ hazard:  Now supplying an option to ping on Linux servers that disables
  a silly message that messes up tables.
+ client: (unix,JAGae23966) To enable debugging of fork failures, there's
  now option:
    -o panic=1
  which will panic the client system, instead of just exiting (the
  default).  (BTW, the end result was that default maxssiz_64bit on HP-UX
  is set too high, and needs to be lowered if you start getting fork
  failures.)

2002 May 10; 6.06.04.40
+ exitdisk/humountall: (unix) Minor tuning re what gets written to haz.errlog.
+ sysboot: (unix) Any stderr messages occuring during shutdown(1m)'s activity
  are now redirected to /dev/null. {Note:  cf. version 6.06.04.51}
+ initchgr/initdisk/initvm: (unix) Additional code tuning over version
  6.06.04.36 re giving diskfs the clue that it needs to make a file system.
+ diskfs: (linux) Version 6.06.04.38 behavior like HP-UX now working on Linux.
+ idsys/gmemstat: (Windows) The system event log is no longer backed-up and
  cleared; rather, it is left as-is.  Users didn't like the original behavior.

2002 May 8; 6.06.04.38
+ diskfs: (hpux,JAGad07556,JAGad31878) When this test process first starts up,
  it checks if a file system needs to be created, e.g., because an init* script
  zapped the last file system superblock or because the file system looks
  damaged or unclean; if so, it gets created (just like before); if not, the
  file system is used as-is.  This approach avoids multiple file system makes
  as a shared device is rotated through the systems sharing it, especially
  during recovery-type runs that involve shutdowns.
+ log:  Added support for option -c, which will typically only be used by
  developers when debugging certain anomalous Hazard behaviors.  Also...
  The -p option only prints the raw i/o performance data at the end of a
  Hazard run. {Note:  instead of at every CHO; cf. version 6.05.10.38}
+ server:  Added support for option -b.  If the server gets a PacketSend or
  PacketReceive timeout in MainLoop, this option causes the process to
  re-try an i/o on the same socket.  Since the original cause is socket
  resource exhaustion, the retry should also hang.  This will enable
  networking developers to examine either "live" or TOC'd Hazard servers
  and Hazard clients. {cf. version 6.06.04.ZG}

2002 May 6; 6.06.04.36
+ hazard:  Windows.NET is now reporting itself as Windows version 5.2, so we
  have adjusted the version matching script code.
+ initchgr/initdisk/initvm: (unix) The first 1024 blocks of a device (or file
  system partition thereof) are now scribbled so that the first 'fsck' will
  determine that a file system needs to be created.  This change is in
  anticipation of a forthcoming change to diskfs.
+ scanchgr/scandisk/scanvm:  The starting value for diskfs' file set allocation
  is 60 ("balloc").  Per server and diskfs notes below, this value can change
  dynamically. {Note:  see also version 6.06.04.F9}
+ server/libcli:  The file set size allocated to a diskfs test process can now
  vary dynamically, based upon what is returned by the "rpcFree" packet.  The
  RpcFree() call now takes a third argument:  a negative value tells the server
  to tune down the file set size allocation, a zero value leaves it alone, and
  a positive number causes it to go up slightly.  Test processes like diskraw
  should always use zero (0) as the third argument. (By the way, the second
  argument to this call should always be zero for random access devices, like
  disks; this argument is only for tape test processes.)
+ diskfs:  The "FsUsed" statistic is now only logged when the verbose option
  is set. {Note:  cf. versions 6.06.04.12 and 6.05.13.85}
  Also...  In concert with the server process, the file set size allocated for
  each start/stop "inner" cycle is dynamic, varying by whether or not the file
  set was written the target number of times (8) within the target "timetest"
  (which, by default, is 30 minutes).  Also...
  A file is opened such that writes are synchronous (normally buffered and,
  hence, asynchronous) if "count" (# of writes) == 4096, 8192, etc.  Also...
  The "stop" message no longer reports "ts" (timesleep), but "tt", the time
  (# seconds) during which the start/stop "inner" cycle was reading and
  writing the files in the allocated file set.  Also...
  (unix) If the verbose option is set, a number of additional stats
  are logged:  FsMtw, length of time spent waiting for the mount semaphore;
  FsMnt, length of time spent performing a mount/umount; FsNew, length of time
  spent performing newfs/mkfs; FsCkm, length of time spent performing simple
  file system sanity check; FsCky, length of time spent performing full file
  system check.  Also...
  The file system blocksize (and/or fragsize) is no longer randomly chosen, but
  chosen based upon the value of the "did" (device ID).  Variety is preserved,
  while improving repeatability.
+ client:  Because VA7xxx array luns can only be tested "so many" at a time,
  folk have been constrained to setting "maxdevs" to a low number even when
  other devices can be tested simultaneously at much larger numbers.  To work
  around this, Hazard now accepts
    -o maxvadevs=#
  where '#' is the maximum number of VA luns to be tested at one time.
+ syshalt:  Statistic "Halts" is now logged after each "syshalt" action.
+ syspanic: (aix) Per a user's suggestion, we now implement panic by echo-ing
  a funny text string into /dev/kmem.

2002 Apr 23; 6.06.04.23
= If your Hazard server is running 64-bit HP-UX (on a 64-bit processor, of
  course), the 'server' and 'log' binaries are now 64-bit applications.  This
  means that kernel tunable "maxdsiz_64bit" controls the data segment size
  rather than "maxdsiz".  This change enables testing of even larger numbers
  of devices.  While working on this new feature, we discovered a defect in
  PacketAcquire's definition (hazard.h) that resulted in dis-similar structure
  sizes when compiled as 32-bit vs 64-bit.  The defect has been corrected (it
  only affected you if you were using these new 64-bit server-side apps).
+ initdisk: (hpux) Right off the top, initdisk will exclude devices whose
  product ID starts with CD-, DVD-, DV-, and DW- as these are not "disks"
  with which Hazard has any business. {Note:  cf. version 6.06.04.C9} (FYI:
  The "-e exclude" option only excludes devices from testing that Hazard has
  already identified as testable.)
+ server:  Types (cluster, system, device) whose instances may have semaphore
  sets are now defined such that there can be up to 8 semaphores in the set,
  each of whose names may be up to 10 characters in length.  Also...
  We now delay closing the stderr socket from the client system; this will
  enable certain error messages to slip through to the Hazard server during
  shutdown-reboots or panics.
+ hazard:  File "Release" is now bundled in each client-side shar bundle rather
  than being installed on the Hazard server and downloaded by this script.
+ log:  Since a process's gpid is always printed on the left margin, the
  duplicated printing of the gpid has been dropped from the "Process timed out"
  message.
+ syshalt/sysboot/syspanic:  Certain logged messages have had their text
  regularized for consistency.
+ diskfs: (JAGad31546) This tool has been adjusted to perform fewer mounts /
  umounts and, thus, more file testing (also, there's one less sibling synch
  point, reducing network traffic slightly {but, see later in this regard}).
  Shared device testing has been performed for more than two weeks without a
  problem. {Note:  cf. version 6.06.04.C2}  Also...
  File sizes are no longer randomly selected, but selected from a varying
  set of sizes that maintains the average of 128k.  This is another step
  towards repeatability.
+ idsys: (hpux) If certain kernel variables of interest to Hazard users are
  not present in a kernel, they simply are not printed, rather than printing
  something like "ERROR:".
+ syspanic: (hpux) The tool "crashconf" may sometimes be failing, so we
  have added -v to its call in order to log its behavior.

2002 Apr 12; 6.06.04.12
+ client:  The "exiting" message is now printed to haz.errlog immediately
  before the actual exit.  This clarifies event sequences in haz.errlog.
+ haz*.rc: (sun/linux/hpux) Cosmetic changes in what gets written to
  /tmp/haz.errlog.
+ scanchgr/scandisk/scanvm:  Results from statistic "FsUsed" shows diskfs is
  nowhere near filling up the file system, so we are increasing the file
  count ("bcount") scan attribute so that it is reckoned at 90% of blocks
  (vs. previous 80% estimate) allocated to the file system area.  In practise,
  we are seeing actual (vs reckoned) file system usage rates of 96%-97% on
  Solaris, 92%-95% on Linux (varying w/ FS blocksize; cf version 6.06.04.44),
  and 94%-98% for HFS (depending upon FS blocksize) and essentially 92% for
  VxFS on HP-UX.
+ initchgr/initdisk/initvm:  The fraction of blocks (or cylinders, in some
  cases) assigned to the file system area is now 284/285 (vs. prior 319/320).
  Since Hazard wishes "bcount" and "rcount" to be roughly balanced, the changes
  in the scan* scripts leads to this change in the init* scripts (or 'mkparts'
  on Windows).
+ diskfs: (sun) Added statistic "FsUsed". {Note:  cf. version 6.05.13.85}

2002 Apr 3; 6.06
= Released! One year has passed since 6.05 was released.
+ diskraw:  In the event of a short write, i.e., a write that failed to write
  all the blocks intended, we now have no expectations for the unwritten
  blocks.  And to satisfy our curiousity about what did and did not get
  written, a form of "corruption" analsysis will be performed.  Also...
  (unix) A process's priority is increased during corruption analysis, and
  decreased when it's done.
+ diskfs/diskraw/diskevery:  During corruption analysis, the message that
  gives the offset of the first unexpected byte and the length until the
  last unexpected byte used to be prefaced with "Corruption".  It now begins
  with "Unexpected data extent", since diskraw now uses corruption analysis
  to investigate what happened during a "short" write.

2002 Mar 29; 6.05.13.89
+ diskabrt: (linux) Fred Willms' investigation into Linux SCSI driver behavior
  has uncovered that it behaves quite differently from the HP-UX SCSI driver;
  enough difference that we cannot "force" a SCSI command to be aborted, at
  least not in the "sterile" manner we can on HP-UX.  Thus, we have revived
  (for Linux only), the old -oabort option (where the default is 0).
  Users should not set this option unless their objective is to see if the
  Linux driver's behavior has changed.
+ idsys: (hpux) Added support for new kernel tunable, physical_io_buffers,
  reporting it in preference to physio_perproc_bufs and physio_global_bufs.
  Also...  Now using 'kmpath' to deduce kernel path.

2002 Mar 26; 6.05.13.86
+ hazard: (linux) Added support for 2.5 kernels.
+ diskfs: (linux) We now supply the block count on 'mkfs' command lines, just
  like we used to in Hazard 6.03 and 6.04.  In principle, this should not be
  necessary as mke2fs/mkfs claims to be able to figure out the size of the
  partition by itself.  However, we're seeing some confusion with recent
  kernels and recent instances of mke2fs.

2002 Mar 25; 6.05.13.85
+ diskfs: (hpux/linux) Added statistic "FsUsed", which logs the percentage
  of file system blocks used.  The statistic is derived from the results
  reported by 'bdf' and 'df', so is subject to the same calculation caveats
  as reported on their respective man pages.  Users have been asking for this
  statistic.
+ diskfs/diskraw/diskevery: (JAGad86195) During corruption analysis, a signal
  11 (SIGSEGV, segmentation violation) could occur in RpcFind if no match was
  found for a block or for a "line".  This rare defect was introduced due a
  tweak to the shared memory segment size, sometime just before Hazard 6.03
  was released.

2002 Mar 20; 6.05.13.80
+ diskfs: (JAGab25316) Added option "fsiomin" (see also option "fsiomax"):
    -o test==diskfs?fsiomin=#
  where '#' is the minimum number of bytes that a file shall have (i.e., more
  is OK).  This is a companion to:
    -o test==diskfs?fsiomax=#
  where '#' in this case is the maximum number of bytes that a file shall have
  (i.e., less is OK).
  Also...
  Unlink/delete every 256th file instead of every 32nd.  This will "bulk up"
  how much disk space is consumed by the files of the file system.  Users have
  been asking for this.
+ initdisk: (hpux/sun) Make use of changes to 'iovm' when checking whether
  or not a device, particularly a disk with slices (cXtXdXsN), is under LVM or
  VxVM control.  In some cases, disks were not being tested; in others, the
  root file system was getting scribbled.
+ iovm: (hpux/sun) Make use of 'vgscan' to detect devices, especially
  disk slices, not involved with LVM.  For VxVM, both "online" and "wholedisk"
  are acceptable status field values.  Important to HP-UX 11.22.

2002 Mar 18; 6.05.13.78
+ diskfs: (Windows) The problem detected and handled yesterday works for the
  "lead" process.  However, the non-lead sibling processes were not exiting
  as they were unaware of what the lead process had done.  Fixed, by having
  lead process remove the mount directory (and issue a "DEBUG" msg, as this
  really should not happen), and the siblings check for its presence or
  absence.  Also...
  Spencer Frink says that opening a file with "no buffering" assures us that
  we're reading the bits direct from the device.  So, we appear to have a
  Windows re-read in the case of file corruption.
+ idsys: (hpux) Redirecting stderr on a bunch of adb command lines to work
  around bugs in early 11.22 IC instances.

2002 Mar 13; 6.05.13.73
+ diskfs: (Windows) If unable to obtain a volume name for mounting on Win2k,
  an endless loop occured.  This is now detected and handled (by exiting).
  Also...  (linux) Fsck return values of 0 and 1 are acceptable; the cases of
  0, 1, and >1 are now handled.

2002 Mar 12; 6.05.13.72
+ diskraw: (linux/Windows) Minor tweak to how we print a block's pattern offset
  and its "signature"; also how we print the expected offset (when no match).

2002 Mar 8; 6.05.13.68
+ initdisk/scandisk: (aix) Minor corrections to obtaining bus ID, "sw" instance
  number, and target ID.
+ initdisk: (hpux) Exclude DVD devices whose product ID starts with "DV-".
+ idsys: (hpux) Minor change to obtaining model string on ia64 platforms.
+ diskabrt: (Windows) If the "ioctl" to do the Verify fails, log it as ERROR,
  not at log level. (However, is the failure maybe the only indication we get
  that the Verify timed out???  TBD...)

2002 Mar 4; 6.05.13.64
+ server: (Windows) Space out recurring remote shell commands by a few seconds.
+ ioscan/iodtc/diskinfo:  Discovered that strchr() will match a NUL; alas, VA
  product serial #'s may contain NULs! Corrected. {Note:  version 6.05.13.52 is
  when the erroneous code was introduced.}

2002 Feb 28; 6.05.13.58
+ diskabrt/diskbdr/diskres:  The "No paths to test" message is logged,
  regardless of the verbose bit, if the number of devices is low.
+ server:  A few more PacketSend's are monitored for success/failure.  Ron
  Watkins found an instance that wasn't, and needed to be.
+ hazard:  The column layout of the tables printed was altered slightly.

2002 Feb 26; 6.05.13.56
+ diskfs: (hpux) An error was found in the HFS file re-read code, introduced
  when support for VxFS file re-read code was merged in from another branch
  and, in consequence, some common code was altered. {Note:  version 6.05.06.83
  is the version where this defect was introduced}

2002 Feb 22; 6.05.13.52
+ ioscan/diskinfo:  When SCSI inquiry data (vendor ID, product ID, firmware
  revision level, serial number, and the additional vendor string, if present)
  is printed, in addition to alphanumeric characters (see Oct 10), we also
  print any characters from the set "#*+_-./" as these seem to show up often.
  Other punctuation characters we avoid, substituting "_", since they can
  interfere with parsing scan attribute data. {see version 6.05.13.64 for a
  correction}
+ idsys/scansys: (Windows) The OS bits value, 32 vs 64, as well as the
  processor model info, is now properly reported for i386/x86 vs ia64/IPF.
+ initdisk: (Windows) Steps have been taken inside the stand-alone utility
  'mntlst' to avoid causing the OS to pop-up a query window re the floppy.

2002 Feb 20; 6.05.13.50
+ diskraw:  For driver developers trying to debug an open error, the
    -o test==diskraw?cat7=#
  option may now be specified, where # is any one of the five possible actions.
  {Note: see also versions 6.07.nw.09 and 6.07.09.17}
+ insf: (linux) The installation status of the raw driver is checked.  More
  devices are created.  Note:  After a new Linux OS installation, you should
  do the following to prepare for your first Hazard run:
    1. Run 'hazard' with the -I option.
    2. Logon to the new client and manually invoke 'insf'.
  You now have the devices needed for the first and any subsequent Hazard runs.

2002 Feb 19; 6.05.13.49
+ diskraw: (linux/Windows) Improvements to how we print pattern offset
  and its "signature".  Since these OSes require raw reads/writes to be
  aligned to 512-bytes boundaries, then all Hazard data pattern offsets,
  modulo 512, are always 0.  Thus, we cannot obtain the "signature" in the
  same manner as with other OSes.  So, we use a different formula.
+ diskfs: (linux) Added support for re-reading ext2fs files via the raw device.
  Thanks to Micah Parrish for these enhancements.
+ exitdisk/humount: (Windows) Log some "progress" info.

2002 Feb 12; 6.05.13.42
+ initvm:  (hpux/sun) A client system's ksh evinced a bizarre and
  heretofore unseen propensity to expand "?" into a series of numbers;
  switched to "X" for stub values.
+ diskfs: (Windows) When formats fail on Win2k (or later), recovery steps
  differ from those on WinNT.
+ ioscan/iodtc/initdisk: (Windows) Cope with the new devices whose partition
  tables may not be classical MBR (master boot record) but GPT (GUID partition
  table).

2002 Feb 6; 6.05.13.36
+ hazard: (Windows) Added support for i386 Windows.NET Server.

2002 Feb 4; 6.05.13.34
= Folk testing Autopath on HP-UX have verified that it is transparent, thus
  requiring no changes in Hazard.
+ idsys:  Print the Hazard release/version at the very first of ID phase.
+ initchgr/initdisk/initvm: (unix) If rwgdid's lseek fails with EINVAL, the
  lba and seek address are printed (in hex and signed decimal, respectively).
+ hazard: (Windows) Corrected code that un-shars the Windows bundle; it was
  sensitive to $PATH and shouldn't be.

2002 Jan 24; 6.05.13.24
+ server:  Code that was to permit LVM and VxVM volume testing by partners was
  incorrect; now fixed.  Also...
  It was found that a large number of "-o" options was overflowing a buffer
  when the varName=value pairs were concatenated; the buffer is now larger.

2002 Jan 22; 6.05.13.22
+ diskinfo: (hpux) The I2O RAID driver, iop_drv, core dumps ("bus error")
  when a pass-thru CDB for mode pages (i.e., mode sense command) is received
  via ioctl.  Accessing the mode pages is now optional behavior.
+ sysboot: (unix) If user requested shutdown/reboot via reboot(2) and this call
  returns (which it should not!), errno is logged to haz.errlog.

2002 Jan 18; 6.05.13.18
+ sysmon: (Windows) Event log diagnostics are now logged at DIAG/diag levels,
  rather than ERROR/WARN.  The event type -- err, warn, info -- will prefix
  the event log message.

2002 Jan 17; 6.05.13.17
+ hazard.i/scansys/idsys:  More accurately determine whether kernel is 32-bit
  or 64-bit across the various OS platforms; affects scan attribute "bits=N".
+ diskfs: (Windows NT) If a disk is shared, the server process selects just one
  of the client systems to do diskfs testing on it; diskfs is now cognizant of
  the choice.  The server divides up shared device diskfs testing across the
  set of clients sharing the device. (OTOH, the behavior of diskfs on 2k/XP/NET
  is the same as on Unix.)
+ diskabrt/diskbdr/diskres: (sun) As with HP-UX, VxVM devices cannot be
  used for aborts, resets, or BDRs, so these paths will be excluded.

2002 Jan 16; 6.05.13.16
+ idsys: (hpux) Support for td_dbg_level and iscsi_dbg_level added:  their
  values are reported and can be set.  By default td_dbg_level is set to TBD,
  while iscsi_dbg_level is set to 3.  You can set another by specifying, e.g.:
    -o iscsi_dbg_level=#
  where '#' is the value you wish to set.  (TBD:  Ditto for td_dbg_level.)
+ diskabrt: (hpux) Support for the iscsial (iSCSI) driver added.  In
  particular, aborts can be done thru iSCSI paths, but not SCSI bus resets
  nor BDRs (target/device resets).

2002 Jan 15; 6.05.13.15
+ idsys: (hpux) Support for 11.22 (on ia64-platforms, at least) added.

2002 Jan 14; 6.05.13.14
+ sysprobe: (unix) If there's an ioscan miscompare, the user may supply a
  command to execute via:
    -o test==sysprobe?spcmd="string"
  where "string" is the command string to execute.  Absent this option, the
  default behavior is to save copies of both files as ioscan.nbk (ioscan.now's
  backup) and ioscan.pbk.
+ server:  A change made just before Hazard 6.05 was released to libutil's
  IoPut function (called by PacketSend) created a situation where if a client
  system died unexpectedly or the client process went away somehow (causing
  socket writes to fail to that system), then all writes to all clients could
  be declared impossible, causing the other client systems to improperly but
  eventually be declared DYING.  This has been corrected.  Also...
  If a client system's death cannot be confirmed, it has been placed in state
  LIMBO4.  However, its Hazard resources were not being released, potentially
  leading to a cluster-wide syshalt impass (Cannot acquire cluster semaphore).
  The default behavior is now to release resources, unless -r is specified.
+ initdisk: (hpux) The home-grown diskinfo introduced on Dec 30 has troubles
  with NIO SCSI; so, if it has problems, we revert to using the standard UX
  instance.

2002 Jan 10; 6.05.13.10
+ diskabrt:  The "Verify not aborted; st=<hex number>" message has been
  replaced with a statistic (normally not printed even in verbose mode) named
  "NoAbortsN" where "N" is the SCSI status.
+ iovm/initdisk/initvm/scanvm: (sun) Support for VxVM volumes added.
+ initchgr/initdisk/initvm/scanchgr/scandisk/scanvm: (hpux) The names of some
  scan attributes have changed, to make them consistent with other operating
  systems.  This means you will NEED TO REBUILD your scan.client files the
  first time you use this version on HP-UX.  Old scan.client files are not
  compatible with this or future versions; new scan.client files are not
  compatible with older versions.  Also...
  A defect was corrected wherein initdisk would sometimes say a device was
  involved with VxVM when, in fact, it was not.
+ diskfs/diskraw: (hpux) Code changes, nothing functional, relative to
  scan attribute cross-platform consistency changes (above).

2001 Dec 30; 6.05.10.90
= Have completed merge of Win2k/WinXP-related changes, including ia64/IPF
  support, onto our build branch.
+ diskabrt/diskbdr/diskres: (Windows) Diskbdr simply exits (is non-functional)
  on all Windows platforms.  Diskres simply exits on WinNT, but attempts SCSI
  bus resets on 2k/XP/NET.  Diskabrt simply exits on WinNT, but works on
  2k/XP/NET.
+ client:  The code introduced on Nov 27 did not quite work as desired because
  of an "oops" found in libcli:  fixed.  Also...
  (Windows) Client systems are no longer rebooted after a couple of hours
  (the default "lifetime"), when all processes exit.  Test processes are now
  spawned, and their exits handled, just like on Unix.  Also...
  (Windows) The default for option -omaxfsdevs is 20 (cf. Aug 17);
  this may change in the future for NT vs 2k/XP/NET.
+ server:  A process parameter called "nt" has been added to support NT-based
  diskfs testing (which differs slightly from 2k/XP-based diskfs testing).
+ diskinfo:  Slight changes for consistency between OS-specific instances.
  Added a home-grown instance for HP-UX that gives a bit more info than the
  standard utility, and obsoletes the old 'serial' Hazard utility (cf Jan 14).

2001 Dec 14; 6.05.10.74
+ hazard: (Windows,JAGad25240) Support for i386 WinNT/Win2k/WinXP and ia64
  Win2k/WinXP bundles added; however, the ia64 bundles are stubs just now.
+ idsys/initdisk/scandisk: (aix) Code cleanup, to conform with similar scripts.
+ iovm/splitter:  As more systems support volumes, it seemed prudent to rename
  the label in io.client files from "LVMVXVM" to "VOLUMES".  This means you'll
  NEED TO REBUILD your io.client files the first time you use this version.
  Old io.client files are not compatible with this or future versions; new
  io.client files are not compatible with older versions.

2001 Dec 12; 6.05.10.72
+ sysmon: (aix) Iostat output now logged at "log" level rather than "DIAG".
+ diskfs/diskraw: (aix) Tweak to message logged when device not tested.
+ diskabrt/diskbdr/diskres:  The "No paths to test" and "<event> in X seconds"
  messages are now logged if the recovery verbose bit is on:
    -o verbose=16
  (indeed, any bitmask value where bit 4 is turned on).  This change helps
  reduce network i/o traffic (needed in large lun configurations). {Note:  see
  also version 6.06.13.58}

2001 Dec 10; 6.05.10.70
+ syspanic: (unix) Minor adjustment to when sync() is performed.
+ diskraw:  Always print raw offset lba (instance n=0 was only one printing it,
  consequent to our efforts to reduce network i/o traffic).  Also...
  If the # of bytes read differs from expected, provide more detail (in case
  of split reads).
+ client: (unix) The "maxdevs" calculation based upon maximum number of
  processes ('nproc') now deducts 192 (vs. 128) for the base OS.  Were seeing
  some fork failures on systems with low nproc.  Adjustment mitigates.

2001 Nov 27; 6.05.10.57
+ client:  The algorithm for choosing the "next" device to test
  (when maxdevs < total_devs) was not working as originally intended
  (see changes dated 9/25/2000); corrected (pretty much).
+ diskinfo: (aix) Cosmetic code mods to conform to other diskinfo's.
+ sysmon: (Windows) If GetOldestEventLogRecord takes a long time, you can get
  a process timeout.  Mitigated.

2001 Nov 20; 6.05.10.50
+ syspower/server:  Support has been added for a test configuration, -c17,
  aka "powercycle".  It uses the new tool, 'syspower'.  At present, this tool
  is only designed to work with a programmable powerstrip present in Boise.

2001 Nov 19; 6.05.10.49
+ diskraw:  On large lun configurations, not much i/o is getting done when test
  time ranges between 1 and 5 minutes, so extended that by another minute.
  Prior behavior can be obtained by specifying a "timetest" of 240 (seconds).
  {Note: see also version 6.06.04.X7}
+ ioscan/iodtc: (sun) Moved some command calls from iodtc into ioscan-sx, as
  that's probably the best place for them.
+ log:  In large lun configurations, the vast number of test processes trying
  to communicate with the server can sometimes create such contention for the
  "write on the socket" semaphore that certain processes get temporarily
  "starved".  If there's a series of requests/replies that don't get logged
  and the series takes some time to complete, a "too long" time can elapse
  between logged messages from a process, resulting in the log command
  declaring the process as "timed out" when in fact it was just starved.
  The default time out period is now 2 hours instead of 1.  You can, as ever,
  override that by specifying:
    -P #
  where '#' is the minimum number of hours to be "patient"

2001 Nov 14; 6.05.10.44
+ server:  Added option -p, for "maximize Performance"; this makes diskraw
  allocations as large as possible.  And if used with:
    -o test==diskraw?riobang=1
    -o test==diskraw?async=0
  to eliminate split reads/writes, async writes (on HP-UX), and path changes
  (close, then open) during the inner start/stop cycle, then performance
  can probably be boosted even more.  In addition, to see how much I/O Hazard
  can pump, the user might also try:
    -o test==diskraw?compare=0 -Cdiskfs -l6
  or even -l8 (experiment!). {See version 6.10.11.02 re option riobang.}
  Also...
  For the Test and Id phases, all network i/o timeouts are now 6 mins, while
  for the other phases (Io,Init,Scan,Exit) it's 20 mins * -T's value.

2001 Nov 13; 6.05.10.43
+ server+all test procs:  Slight rendezvous protocol change to reduce volume of
  network traffic.
+ server/libutil:  During SystemInvalidate (1 minute after DEAD, in order to
  release resources), PacketSend is being called.  I didn't know that, so a
  change made in PacketSend on Nov 6 causes tons of "nosend" messages to get
  logged, sometimes exhausting disk space on Hazard server; fixed.
+ diskraw:  During corruption analysis, when read/write history printed, if
  a write was async, we now include # of requests / # of completions (fyi).

2001 Nov 12; 6.05.10.42
+ log:  Correction re calculation of # devices/clients (used when -p spec'd).
+ server:  When pinging a client (during "Checking.."), SIGALRM signal handler
  not being reset to MainAlarm after echo packet sent; fixed (not aware of
  this being issue, but it pays to be tidy).
* This change log now being bundled.

2001 Nov 9; 6.05.10.39
+ server: (Windows) Corrected PATH definition in two command lines.

2001 Nov 8; 6.05.10.38
+ diskraw:  Raw offset is an lba, so also print it in hex.  Also...
  Found/fixed bug re address of re-read buffer passed to RpcCorruption,
  causing it to report _all_ corruptions as "read and write" when that is
  not necessarily so.  Defect added sometime between Jul 18 and Aug 6 when
  dealing with re-read buffer alignment for corruptions on Linux/Windows.
+ log:  Added option -p, which will print a table, every CHO, suitable for
  import into Excel, that lists columns of data for each "did".  Each row of
  data is # of MB of data transferred (read + written) to/from "did" during
  that given minute.  Under Excel, I commonly use Chart Wizard's "Stacked Area"
  and "Line" charts.  (See also later version 6.06.04.38)
+ humountall/exitdisk: (aix) Corrections.
+ sysboot: (aix) Correction re calling 'shutdown'.

2001 Nov 6; 6.05.10.36
+ haz*.rc: (sun/linux/hpux) Script executed during bootup and graceful
  shutdown ("SysV init") no longer attempts to kill hbshutdown (we'll let it
  die a natural death).  It now just logs (in haz.errlog) that the shutdown
  process executed it (helps when debugging timeline of events).
+ server:  PacketSend (socket write) failure in ProcessStart handled better.
  Lengthen death confirmation time (after no more pings from hbshutdown), and
  require more good pings before attempting rcmd() to client (we've seen cases
  where shutdown can be so slow that when it was presumed safe to rcmd, it
  really wasn't, and the rcmd hung for 2 hours).
  {Note:  see also version 6.06.04.X7}
+ syspanic: (sun) Incorrect messages re dumps corrected.
+ diskabrt/diskbdr/diskres:  "done" message now identifies which app; e.g.,
  "done (abort)".
+ diskfs:  Simplified log messages so as to reduce volume of network traffic.

2001 Nov 5; 6.05.10.35
+ client:  Backed out 6.05.06.A4 change that bumps up maxdevs when many more
  devices will have diskraw testing than diskfs testing (because of limit on
  how many devices we'll do diskfs testing on, because of contention for the
  mount semaphore).  Calculation for maxdevs again assumes that all devices
  will have full complement of diskraw, diskfs tests even if, in the end, they
  don't.  {Note:  see also version 6.06.04.X7}
+ sysboot: (aix) Correction re calling 'shutdown' (cf Nov 8).
+ diskabrt: (aix) Corrected how perform openx() system call.

2001 Nov 1; 6.05.10.31
+ ioscan/iodtc: (sun,JAGad92068) Added support for several new driver classes
  including sd_fcst.  Also...
  Finally implemented 2.6 ioscan! Solaris 2.6 now supported!
+ initdisk: (linux) Changed call to sfdisk to include --no-reread; believe
  this will eliminate the error messages re "SIZER=" (raw size equals nothing).
+ client:  Made some "helps the developer" changes re how certain vars are
  passed from server to client, and client to test procs.
+ diskabrt/diskbdr: (aix) Corrected some implementation gaffes.
+ diskabrt/diskbdr/diskres:  Simplified log messages so as to reduce volume of
  network traffic.
+ diskraw:  On read failure, only print pointer values if diskraw's bit is set
  in -overbose bitmask.  If rlength was 0, var np not set, which could cause
  core dump in -c15 runs; corrected where stats get printed.

2001 Oct 30; 6.05.10.30
= Dropped support for i386/x86-based Solaris 5.8; no one was using it.
+ diskabrt/diskbdr: (aix) Use only the disks reserved for diskraw usage
  (vs diskfs); select using the same behavior as in diskraw.
+ Decided not to support Caldera Linux.

2001 Oct 26; 6.05.10.26
+ ioscan/iodtc: (Windows) Saw a case where we found a PhysicalDriveX, but the
  registry was not populated with anything for it; this case was not handled;
  now we handle it.
+ idsys/initdisk/scandisk: (aix) Corrections, esp re volume management.
+ sysmon/sysprobe: (aix) Corrections.
+ diskinfo: (aix) Serial number is now printed.
+ diskraw:  Warnings re ridiculously slow i/o performance and debug output (for
  developers) get logged to the server if the diskraw verbose bit is on:
    -o verbose=8
  (indeed, any bitmask value where bit 3 is turned on).
+ diskfs:  Warnings re ridiculously slow i/o performance and debug output (for
  developers) get logged to the server if the diskfs verbose bit is on:
    -o verbose=4
  (indeed, any bitmask value where bit 2 is turned on).
+ diskfs: (aix) Cope with the case of 'crfs' failing because a file system
  already exists on the device.  Also, crfs frag sizes are now randomly
  selected, just like we do for block/frag sizes on other OSes.

2001 Oct 16; 6.05.10.16
+ diskfs/diskraw/diskevery/libutil/hazard.h: (Windows) Failed reads/writes
  were not being caught due to an unsigned-should-be-signed issue in a
  variable type definition.  The symptom was reads/writes being reported as
  having bogus lengths such as -1 or -2.
+ diskfs/diskraw/diskevery:  If a corruption is of type "read and write error",
  also analyze contents of the re-read buffer. (This change not only benefits
  the user, but helped us detect and fix, on Nov 8, a bug re the aligned
  address of diskraw's re-read buffer.)

2001 Oct 10; 6.05.10.10
+ server:  Rolled out new license scheme that ignores hostname (i.e., license
  can be used on any Hazard server in same domain), supports up to 5 OS types
  and up to 5 vendor IDs.  Depending upon the category of Hazard usage,
  the "up to" numbers can vary (see license web page); e.g., category 4 users
  are limited to a slightly stripped down set of test processes.  A default
  license is no longer contained in the Hazard release bundle.  Also...
  RemoteCommand calls now have 6 minute timeout.  Also...
  Better support is now provided for users who specify their hosts domain via
  /etc/hosts rather than via /etc/resolv.conf.
+ initchgr/initdisk/initvm:  Errors from rwgdid now accumulate in rwgdid.chgr,
  rwgdid.disk, and rwgdid.vm, respectively.  Moreover, rwgdid is now writing
  errno messages to stderr.
+ ioscan/iodtc/diskinfo:  Only alphanumeric characters in serial numbers, etc
  (as returned by SCSI inquiry), are now printed (cf Feb 22).
+ idsys: (hpux/linux) Cope with LAN cards that report both IP and IPv6
  addresses (we want IP only).

2001 Sep 21; 6.05.06.B1
+ diskres: (linux) Corrected code that counts paths to use for sending resets.
+ log:  The "x per hour" statistics printed each CHO failed to account for the
  time it took to get to the point of performing testing:  fixed.
+ diskfs/diskraw: (aix) Some corrections.
+ diskfs:  The values/semantics for the -osync option are now the same
  as -oasync in diskraw.  Specifically:
    -1 => sometimes (sometimes open file with O_DSYNC) (default)
     0 => never
     1 => always

2001 Sep 14; 6.05.06.A4
+ diskabrt/diskbdr/diskres/sysmon: (aix) Diskres simply exits (non-functional).
  Support for AIX added to the others.  Note:  Bdrs and aborts are only
  attempted to devices undergoing diskraw testing.
+ diskabrt/diskbdr/diskres: (hpux) Added support for qlisp, c8xx drivers.
+ diskbdr:  Dropped support for:
    -o scsibdr=1	# BDRs only to SCSI devices, not FC
    -o fcbdr=1		# BDRs only to FC devices, not SCSI
  as no one seems to use them.
+ diskfs/diskraw:  The amount of read/write history recorded (and printed
  during corruption analysis) has been increased.  Also...
  The messages re i/o that takes "too long" to complete changed to say
  "suggests degraded CPU or IO performance".
+ server:  By request, the path to the log file is now printed at the end of
  the log; this helps folk viewing results to know where to go find the raw log
  file.  Also...
  An uncanceled alarm was found to be causing a nasty no-local goto during the
  Exit phase.  Greater care has now been taken to properly set SIGALRM handlers
  and to have alarm cancellations where needed.  Also...
  Failed to check for failed PacketSend in one place; fixed.
+ hazard:  (sun) SunOS version-related enhancements.
+ sysprobe:  The user may now specify via:
    -o test==sysprobe?pto=#
  how many hours to give ioscan to complete.  '#' is the number of hours; the
  default is 4, the max is 9.  FYI, "pto" stands for "process time out".
  (Perhaps this option should be replicated in diskf.c and diskmount.c.  FYI,
  post Sep 14, HP-UX patches exist that speed up ioscan.  Prior to Sep 14,
  ioscan was taking hours and hours to complete in the face of configurations
  with lun counts into the thousands.)
+ diskmiwr:  Support for running mi_wr under the auspices of Hazard has been
  dropped.  An RFC was posted to the web site; no one dissented.  {But see
  version 6.10.09.23 for a partial re-introduction.}
+ client:  How we create multiple shared memory segments tweaked slightly to
  avoid a harmless failure (logged in haz.errlog) that was worrying some folk.
  Also...  Because we now limit how many devices will be tested by diskfs
  at one time (because of the unavoidable issue of contending for the right
  to mount/umount a file system), it seems reasonable to bump up maxdevs in
  order to perform diskraw testing on more devices.  The formula looks like:
        maxdevs += (maxdevs - fsdevs)/16
  {Note:  see also versions 6.05.10.35 and 6.06.04.X7}
+ idsys: (hpux) The number of physio buffers is now being reported.  They
  are a limited resource.  Persistent high levels of contention degrades raw
  i/o performance.  Thanks to Vishwanath Mahorker for id'ing this bottleneck.
  The kernel folks are going to make it so physio buffers can be tuned.
+ log:  Code improvements to handle processes from DYING clients (original code
  by Gary K added in Oct 2000, and widely deseminated in Hazard 6.05).

2001 Aug 26; 6.05.06.86
+ initdisk: (linux) Better redirection of output from utilities into
  intermediate files (*.out).  These can be examined when trouble-shooting.

2001 Aug 24; 6.05.06.84
+ client:  Tweak to what we record in haz.errlog if verbose option set.

2001 Aug 23; 6.05.06.83
+ diskfs:  Added support for re-reading VxFS files via the raw device.  Thanks
  to Fred Willms for these enhancements. {Note:  version 6.05.13.56)
  corrects a defect that was introduced during this code merge}
+ server: (JAGad86124) A change in how we maintain IP addresses (inaddr vs
  dot-notation), which could help if DNS went down during a Hazard run.  Now
  using ICMP echo (ping) from libping (different from rpcPing) where used to
  use ping(1).
  Also...
  (JAGad85209) A very long SCAN line caused a core dump; corrected (went bad
  during a merge; good before merge).

2001 Aug 21; 6.05.06.81
+ syshalt:  Append "processes may be hung" to message about "Cannot acquire XX
  semaphore" if it's time to log the message as an ERROR.  The first two times,
  it's a WARNing; after that, an ERROR.  The default time between is now 2
  hours, so it should be 6 hours of waiting before the message is an ERROR.
  You can multiply the 2 hours by a factor via:
    -o test==syshalt?alarmX=#
  where '#' is the number/factor by which to multiply.
+ diskfs:  Stagger the start of newfs/mkfs's across the set of devices, each
  15 seconds apart.
+ diskraw:  The user can now time any combination of open, close, read, write
  via an optional bitmask, timeio.  The default value is 0; except for c15,
  when it is set to 0xf.  Users can specify the bitmask thus:
    -o test==diskraw?timeio=#
  where '#' is a bitmask of 0x1 (open), 0x2 (close), 0x4 (read), or 0x8 (write).
  Also...  If the time to complete an i/o operation is longer than an optional
  variable, maxiotime, diskraw will call "/tmp/ktrace/ktracer -h".
    -o test==diskraw?maxiotime=#
  where '#' is the number of milliseconds.  This option is in support of SISL.

2001 Aug 20; 6.05.06.80
+ syshalt:  Reduced the timesleep range (the time between the end of one syshalt
  until the next one is attempted) from 6 hours to 3 hours.  In Hazard 4.x,
  5.x, and 6.x thru 6.04, the timesleep range was 1.5 hours.  In 6.05, it
  was changed to 6 hours, but that was deemed excessive, so has been reduced
  to half that, but double its historical range.  The reason for increasing
  the range at all is that disks are much larger than in the past, and it
  takes newfs/mkfs longer to run (a common reason for a "Cannot acquire"
  message has been that syshalt is waiting for a very long newfs to complete).
+ log:  If -I or -S are specified on the command line, report that certain
  phases of the log file are being skipped.
+ sysprobe:  The time allowed for an ioscan to complete, before risking a
  "process timed out" message from the log command, has been increased from
  2 hours to 4 hours.  {Note:  cf. version 6.05.06.A4}

2001 Aug 17; 6.05.06.77
+ client:  Debug output is logged to haz.errlog if the client verbose bit is
  on (of interest to developers):
    -o verbose=2
  (indeed, any bitmask value where bit 1 is turned on).  Also...
  (unix) Because mounts/umounts must be done serially, there's a limit to how
  many of these can be done per hour, which in turn limits how many devices
  can perform file system i/o at one time (i.e., really doing i/o vs waiting
  for some semaphore) -- because of how frequently Hazard performs mounts and
  umounts (this needs to be changed to help with scalability).  The current
  default limit is 100; this can be changed via:
    -o maxfsdevs=#
  where '#' is the number of devices to have simultaneous FS testing.  Also...
  Retuned the size of diskfs and diskraw procs (affects maxdevsM calculation).
+ sysmon: (linux) Popen call needed matching pclose.
+ initchgr/initdisk/initvm:  The default value for variable "tsmb" ("too small
  megabytes"; any device smaller than this is not tested) has been increased
  to 30.  The user may specify another value via:
    -o tsmb=#
  where '#' is the number of megabytes.
+ initdisk: (aix) Support for Emulex lp9000 added (sym875/896 are the others).
+ diskabrt/diskbdr/diskres: (linux) Correction to scsi_ioctl.i code (added
  to scsi_ioctl.c in 2.2 kernels).

2001 Aug 10; 6.05.06.70
+ initchgr/initvm/scanchgr/scanvm: (aix) Stubbed.
+ scansys/sysprobe: (aix) Support added.
+ libcli:  Low-level Hazard protocol debug output (for developers) gets
  logged to the server if the libcli verbose bit is on:
    -o verbose=1
  (or similar bitmask value where bit 0 is turned on).

2001 Aug 9; 6.05.06.69
+ hazard/ioscan/iodtc/iovm/initdisk/diskinfo/scandisk/diskfs/diskraw: (aix)
  Support added.  Note that AIX differs from other Unix systems in ways that
  prevent Hazard from doing both diskfs and diskraw i/o to the same device.
+ diskfs:  It appears that shared memory contention is an issue for both diskfs
  AND diskraw, so now, just as with diskraw, only the first test process
  instance per device uses the shared memory segment, while additional
  instances use a local buffer (a copy of shared memory).  By thus reducing
  contention, we increase the amount of file i/o that diskfs tests can
  accomplish.  We have also increased the size of each test process image,
  thereby reducing the number of devices that can be tested simultaneously
  (i.e., maxdevs). (FYI, see Sep 14 note where it is noted that raw i/o
  performance improves by tweaking the number of physio buffers.)  {Note:
  cf. versions 6.06.04.93, 6.06.04.W8}  Also...
  A file is opened such that writes are synchronous (normally buffered and,
  hence, asynchronous) if the file number plus "count" == 2048, 4096, etc.
  This is less frequently than in the past, to avoid the performance penalty.
  (See later change in version 6.06.04.36) Also...
  If a file is removed (vs written), the write length is set to -2.  So if you
  see that in the read/write history printed during corruption analysis, now
  you know what it means.
+ diskfs/log:  We currently allow 4 hours for a Solaris or HP-UX newfs, 3 hours
  for a Linux mkfs, and 6 hours for any Unix fsck -y before getting nervous
  and issuing a "process timed out" message.

2001 Aug 7; 6.05.06.67
+ syspanic: (aix) Rudimentary support added.
+ server:  Due to executing phase scripts in parallel, but not reading sockets
  in parallel, we make incoming socket buffers as large as possible.  Also...
  The SrvMbytesRx statistic is no longer maintained or logged.
+ initdisk: (unix) Due to parallel phases, rwgdid's open of a VA7100/VA7400
  lun can sometimes fail, so now we try the open multiple times.
+ diskraw:  The default timesleep (between start/stop cycles) has been changed
  from a randomly selected value between 1-16 seconds to exactly 2 seconds,
  as otherwise diskfs tends to dominate, especially on Linux.  User can alter
  this via:
    -o test==diskraw?timesleep=#
  where '#' is the number of seconds to sleep.
  Also...
  (JAGad37595) In support of driver debug of long i/o times, option variable
  maxiotime was added; for more detail, see version 6.05.06.81.  Also...
  Added code to align re-read buffer for Linux/Windows (except failed to
  pass it to RpcCorruption; cf. version 6.05.10.38).  Also...
  Warnings re ridiculously slow i/o performance get logged to the server (but
  see slight change in version 6.05.10.26).

2001 Aug 3; 6.05.06.63
+ diskbdr/diskres: (linux,JAGad75134) Verify HBA support for resets (see also
  6.06.06.77).
+ initdisk: (hpux) Sometimes the serial command fails to open an array lun,
  so we now handle its error output (cf Dec 30).

2001 Aug 1; 6.05.06.61
+ server:  Every diskfs allocation ("length") is now 256 (or less, if thus set
  by a now revised Scan phase script, e.g., scandisk); diskfs has sufficient
  variety by varying file lengths. {Note:  see later server, scan*, and diskfs
  behavior described in 6.06.04.23, 6.06.04.36, and 6.06.04.F9}
+ diskabrt: (linux) Corrected which status field checked in response to ioctl.
+ initdisk: (Windows) The raw area partition created by 'mkparts' is now
  approximately 1/320th of the device space, just like for Unix.
+ syshalt:  Changed WARNing/ERROR messages from "system/cluser may be hung"
  to "processes may be hung" as this is clearer for users (see also Aug 21).

2001 Jul 20; 6.05.06.50
+ diskabrt/diskbdr/diskres: (linux) Use "sd" devices with 2.2 kernels, and
  "sg" devices with 2.4 kernels; the ioctl also varies with each.

2001 Jul 18; 6.05.06.48
+ diskfs/diskraw:  First coding to try to detect i/o overload, i.e., slow i/o,
  suggesting the need to tweak SCSI queue depth and/or maxdevs (see also Aug 7
  and Oct 26).

2001 Jul 17; 6.05.06.47
= Due to slight differences (e.g., see Jul 20), there are now distinct Hazard
  client-side shar bundles for Linux systems with 2.2 kernels vs 2.4 kernels.
+ diskfs:  Generalized how we forewarn 'log' that an activity is going to
  result in nothing logged for a long time, thereby avoiding "false positive"
  process time outs.

2001 Jul 16; 6.05.06.46
+ initchgr/initdisk/initvm:  Print the full device path for devices that will
  not be tested.

2001 Jul 12; 6.05.06.42
+ diskraw: (linux) Solved the read() EINVAL problem on ia64/IPF systems; it
  was a type-casting issue.
+ diskfs: (unix,JAGad73898) The attempt to avoid "false positive" process
  timeouts using spawned threads has been dropped in favor of a more general
  approach.  Thus, the -opka=1 thing introduced in 6.05 is now OBSOLETE!
+ initdisk:  With parallel phases, the gdid written by a given client may not
  be identical when it reads the gdid (as used the be the case for serial
  phases).  Thus, the gdid verification has to be generalized.
+ server:  Some fixes to the code controlling parallel phase execution.  Now
  logging a message if the Init phase is being skipped.
+ idsys: (linux) The installation of so-called "SysV" init scripts, executed
  upon "start" (reboot) and "stop" (shutdown), was implemented for RedHat,
  TurboLinux, SuSE, and Debian.

2001 Jul 5; 6.05.06.35
+ diskraw:  It appears that having multiple shared memory segments is still (!)
  not reducing contention enough.  Now, only the first test process instance
  per device uses the shared memory segment, while additional instances use
  a local buffer (a copy of shared memory).  By thus reducing contention, we
  increase the amount of raw i/o that diskraw tests can accomplish.  We have
  also increased the size of each test process image, thereby reducing the
  number of devices that can be tested simultaneously (i.e., maxdevs). (But
  see Sep 14 note where the persisent low raw i/o performance problem may be
  due, instead, to physio buffer contention.)
+ server:  Allocations ("length") sent to diskraw are power-of-2 sized more
  often than heretofore, and larger.  The extremly high frequency of "odd"
  sized allocations, historically done, is not beneficial.  Also...
  The license check code now detects user's attempts to get around the
  expiration date by resetting the system clock.
+ syshalt:  The server no longer additionally translates -T (properly for its
  own benefit only) into an option for syshalt.  The user must specify any
  alarm multiplier via -otest==syshalt?... (cf further revision on Aug 21).
+ idsys: (sun) The installation of a "SysV" init script is now performed.

2001 Jun 29; 6.05.06.29
+ idsys: (hpux) Adapt to yet another adb change.  Ditto for kmtune.
+ diskraw:  Because device opens are "costly", we now do re-opens of the raw
  device every 256th pass (think "count") of the start/stop inner loop.
  Previously, it was every 32nd.
+ initdisk: (sun) Correction to code for "not testable" devices.
+ initdisk: (linux,JAGad75134,JAGad75175) The raw device binding is lost
  during a reboot, so now we create a script that will get executed upon reboot
  to perform the binding.
+ log:  More than just "OFF" can now be processed, e.g., OFF4, meaning 4 hrs.
+ idsys: (linux) Kernel dynamic tunable parameter "file-max" (comparable to
  UX's maxfiles_lim) now set to 8192.  Also...
  The installation of a "SysV" init script is now performed on RH Linux.

2001 Jun 14; 6.05.06.14 (includes changes to 6.05.05.xx and 6.05.04.xx)
+ diskfs/diskraw/diskevery:  Simplified and rationalized the code that prints
  pattern offsets during corruption analysis.  During the block-by-block
  analysis, the LBA for each raw block is printed.  During the byte-by-byte
  analysis, the expected byte is printed in brackets.  Also...
  If a byte-by-byte comparison does not detect any corruption, this indicates
  a problem during the memcmp() comparison.  The "No corruption" message has
  been changed to indicate the issue as described herein. (This issue arose
  during "Piranha" testing.)  Also...
  The "line" size for Pentium architecture machines is 16 bytes (vs the default
  of 32 bytes for everything else).  Also...
  We have dropped support for -ohalt and -ocorr_reset.  Also...
  We have added two more members to the "cat" (Crit Action Time) family:
    -o cat5=#
  for CRITical read errors, and:
    -o cat6=#
  for CRITical write errors.  This is to help developers debug their drivers.
+ diskfs:  Files are no longer opened with the flag for synchronous writes
  during the "read-only" pass.  Indications are that doing otherwise has a
  serious impact upon performance (often leading to CRIT "Process timed out"
  messages).  Also...
  If all the files have not been written during the test time ("timetest"),
  then only those written are read during the read-only pass.
+ diskraw: (JAGad56565) The "btags" optional behavior was expanded.  See the
  web site for details on this helpful debug option.  In general, it's:
    -o test==diskraw?btags=1
  Also...
  Fixed "forever sleep" problem when "length" is 0.
  Also...
  As an option for debug, we now accept option:
    -o test==diskraw?reread=0
  to skip the normal re-read when corruption is detected.
  Also...
  If corruption is detected on first read, it's possible that for some blocks
  we may have no content expectation.  Such blocks are now designated with "+"
  instead of "*".
+ initchgr/initdisk/initvm:  The rwgdid tool writes the gdid in the last 8K of
  a device.  This space is not used during raw testing.  Also...
  The "Found" messages have been made more consistent across the scripts and
  across OS platforms.
+ initdisk: (hpux,JAGad58957) OS 11.20 makes occasional use of slices
  (cXtXdXsX), a device naming style not heretofore in UX, so we had to adapt.
  Also...  Improved detection of devices involved with VxVM (cf. Jan 10).
+ initdisk: (sun) Slices/partitions are no longer custom- created on
  devices.  Hazard uses slice 2 (entire disk).  Also...
  Diskinfo adjusted to compensate for MO disks not liking mode format.
+ initdisk: (linux) Some distributions identify the raw devices as /dev/raw*,
  while others as /dev/raw/raw*, so we have had to adapt.
+ syspanic: (linux,JAGad75134) We found a way to panic a Linux client system.
+ server:  Our scheme to verify that a Hazard server system is indeed inside
  hp.com is now more robust.
+ idsys: (hpux,JAGad57503) There are now so many possible variations on the
  name of the SCSI queue depth variable, and the manner of setting it, that we
  have given up even trying.  We simply attempt to report its value.  Also...
  The new command, kmtune, is used to report tunable values whenever possible.
+ idsys: (linux) Memory sizes are reported differently on 2.4 kernels than on
  2.2 kernels, so we have to adapt.
+ iodtc: (hpux) We no longer attempt to use the erstwhile 'scsiscan'.  Its
  counterpart scripts, initedisk and scanedisk, have been dropped.
+ ioscan: (sun) Added support for additional drivers. (Note:  If a device
  seems to missing from ioscan output, it is probably because we don't have
  support for it in ioscan; please contact us.)
+ client:  The size of binaries compiled on ia64 (aka IPF, Itanium Processor
  Family) differs substantially from those of other processor families, so
  we adjust our calculations for mbPD (megabytes per device, for test procs)
  accordingly.
