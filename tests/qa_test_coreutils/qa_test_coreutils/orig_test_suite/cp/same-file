#!/bin/sh
# ****************************************************************************
# Copyright Â© 2011 Unpublished Work of SUSE, Inc. All Rights Reserved.
# 
# THIS IS AN UNPUBLISHED WORK OF SUSE, INC.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
# 
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************

# Test some of cp's options and how cp handles situations in
# which a naive implementation might overwrite the source file.

if test "$VERBOSE" = yes; then
  set -x
  cp --version
fi

. $srcdir/../lang-default
. $srcdir/../envvar-check

# Unset CDPATH.  Otherwise, output from the `cd dir' command
# can make this test fail.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

VERSION_CONTROL=numbered; export VERSION_CONTROL

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp;tmp=$t0/$$
trap 'status=$?; cd $pwd; exec 1>&2; rm -rf $t0 && exit $status' 0
trap 'exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1

if test $framework_failure = 1; then
  echo 'failure in testing framework'
  exit 1
fi

actual=actual-$$

exec 1> $actual

# FIXME: This should be bigger: like more than 8k
contents=XYZ

for args in 'foo symlink' 'symlink foo' 'foo foo' 'sl1 sl2' 'foo hardlink'; do
  for options in '' -d -f -df --rem -b -bd -bf -bdf \
		 -l -dl -fl -dfl -bl -bdl -bfl -bdfl; do
    case $args$options in
      # These tests are not portable.
      # They all involve making a hard link to a symbolic link.
      'symlink foo'-dfl)
	continue;;
      'symlink foo'-bdl)
	continue;;
      'symlink foo'-bdfl)
	continue;;
      'sl1 sl2'-dfl)
	continue;;
      'sl1 sl2'-bd*l)
	continue;;
      'sl1 sl2'-dl)
	continue;;
    esac
    rm -rf dir
    mkdir dir
    cd dir
    echo $contents > foo
    case "$args" in *symlink*) ln -s foo symlink ;; esac
    case "$args" in *hardlink*) ln foo hardlink ;; esac
    case "$args" in *sl1*) ln -s foo sl1;; esac
    case "$args" in *sl2*) ln -s foo sl2;; esac
    (
      (
	# echo 1>&2 cp $options $args
	cp $options $args 2>_err
	echo $? $options

	# Normalize the program name in the error output,
	# and put brackets around the output.
	test -s _err && echo "[`sed 's/^[^:][^:]*:/cp:/' _err`]"
	# Strip off all but the file names.
	ls="`ls -gG --ignore=_err . \
	    | sed \
	        -e '/^total /d' \
		-e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'`"
	echo "($ls)"
	# Make sure the original is unchanged and that
	# the destination is a copy.
	for f in $args; do
	  if test -f $f; then
	    case "`cat $f`" in
	      "$contents") ;;
	      *) echo cp FAILED;;
	    esac
	  else
	    echo symlink-loop
	  fi
	done
      ) | tr '\n' ' '
      echo
    ) | sed 's/  *$//'
    cd ..
  done
  echo
done

fail=0;
[ `grep -c "are the same file" $actual` == 24 ] || fail=1

(exit $fail); exit $fail

