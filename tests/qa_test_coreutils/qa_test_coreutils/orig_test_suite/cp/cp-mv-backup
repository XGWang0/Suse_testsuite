#!/bin/sh
# ****************************************************************************
# Copyright Â© 2011 Unpublished Work of SUSE, Inc. All Rights Reserved.
# 
# THIS IS AN UNPUBLISHED WORK OF SUSE, INC.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
# 
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************

# Test basic --backup functionality for both cp and mv.

if test "$VERBOSE" = yes; then
  set -x
  cp --version
fi

# Ensure that ls sorts the same way for everyone.
. $srcdir/../lang-default

. $srcdir/../envvar-check

umask 022

# Be careful to close $actual before removing the containing directory.
# Use `1>&2' rather than `1<&-' since the latter appears not to work
# with /bin/sh from powerpc-ibm-aix4.2.0.0.

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd $pwd; exec 1>&2; rm -rf $t0 && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

actual=actual
expected=expected

exec 1> $actual

fail=0
for prog in cp mv; do
  for initial_files in 'x' 'x y' 'x y y~' 'x y y.~1~' 'x y y~ y.~1~'; do
    for opt in none off  numbered t  existing nil  simple never; do
      touch $initial_files
	$prog --backup=$opt x y || fail=1
      echo $initial_files $opt: `ls [xy]*`; rm -f x y y~ y.~?~
    done
  done
done

cat <<\EOF > $expected-tmp
x none: x y
x off: x y
x numbered: x y
x t: x y
x existing: x y
x nil: x y
x simple: x y
x never: x y
x y none: x y
x y off: x y
x y numbered: x y y.~1~
x y t: x y y.~1~
x y existing: x y y~
x y nil: x y y~
x y simple: x y y~
x y never: x y y~
x y y~ none: x y y~
x y y~ off: x y y~
x y y~ numbered: x y y.~1~ y~
x y y~ t: x y y.~1~ y~
x y y~ existing: x y y~
x y y~ nil: x y y~
x y y~ simple: x y y~
x y y~ never: x y y~
x y y.~1~ none: x y y.~1~
x y y.~1~ off: x y y.~1~
x y y.~1~ numbered: x y y.~1~ y.~2~
x y y.~1~ t: x y y.~1~ y.~2~
x y y.~1~ existing: x y y.~1~ y.~2~
x y y.~1~ nil: x y y.~1~ y.~2~
x y y.~1~ simple: x y y.~1~ y~
x y y.~1~ never: x y y.~1~ y~
x y y~ y.~1~ none: x y y.~1~ y~
x y y~ y.~1~ off: x y y.~1~ y~
x y y~ y.~1~ numbered: x y y.~1~ y.~2~ y~
x y y~ y.~1~ t: x y y.~1~ y.~2~ y~
x y y~ y.~1~ existing: x y y.~1~ y.~2~ y~
x y y~ y.~1~ nil: x y y.~1~ y.~2~ y~
x y y~ y.~1~ simple: x y y.~1~ y~
x y y~ y.~1~ never: x y y.~1~ y~
EOF

sed 's/: x/:/' $expected-tmp |cat $expected-tmp - > $expected

cmp $expected $actual || fail=1

# Uncomment this if you see a failure and want to try to diagnose it.
test $fail = 1 && diff -c $expected $actual 1>&2

(exit $fail); exit $fail

