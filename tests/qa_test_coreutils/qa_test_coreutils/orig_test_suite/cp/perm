#!/bin/sh
# ****************************************************************************
# Copyright Â© 2011 Unpublished Work of SUSE, Inc. All Rights Reserved.
# 
# THIS IS AN UNPUBLISHED WORK OF SUSE, INC.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
# 
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************

# Make sure the permission-preserving code in copy.c (mv, cp, install) works.

. $srcdir/../expensive

if test "$VERBOSE" = yes; then
  set -x
  cp --version
  mv --version
fi

. $srcdir/../envvar-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp;tmp=$t0/$$
trap 'status=$?; cd $pwd; rm -rf $t0 && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1

umask 037

if test $framework_failure = 1; then
  echo 'failure in testing framework'
  exit 1
fi

fail=0

# Now, try it with `mv', with combinations of --force, no-f and
# existing-destination and not.
for u in 31 37 2; do
  echo umask: $u
  umask $u
  for cmd in mv 'cp -p' cp; do
    for force in '' -f; do
      for existing_dest in yes no; do
	for g_perm in r w x rw wx xr rwx; do
	  for o_perm in r w x rw wx xr rwx; do
	    touch src || exit 1
	    chmod u=r,g=rx,o= src || exit 1
	    set _ `ls -l src`
	    shift
	    expected_perms=$1
	    rm -f dest
	    test $existing_dest = yes && {
	      touch dest || exit 1
	      chmod u=rw,g=$g_perm,o=$o_perm dest || exit 1
	      }
	    $cmd $force src dest || exit 1
	    test "$cmd" = mv && test -f src && exit 1
	    test "$cmd" = cp && { test -f src || exit 1; }
	    set _ `ls -l dest`
	    shift

	    case "$cmd:$force:$existing_dest" in
	      cp:*:yes)
		_g_perm=`echo rwx|sed 's/[^'$g_perm']/-/g'`
		_o_perm=`echo rwx|sed 's/[^'$o_perm']/-/g'`
		expected_perms=-rw-$_g_perm$_o_perm
		;;
	      cp:*:no)
		test $u = 37 &&
		  expected_perms=`echo $expected_perms|sed 's/.....$/-----/'`
		test $u = 31 &&
		  expected_perms=`echo $expected_perms|sed 's/..\(..\).$/--\1-/'`
		;;
	    esac
	    test _$1 = _$expected_perms || exit 1
	    # Perform only one iteration when there's no existing destination.
	    test $existing_dest = no && break 3
	  done
	done
      done
    done
  done
done

(exit $fail); exit $fail

