#!/bin/sh
# For coreutils-5.2.1 and earlier, chown --dereference would skip
# symlinks having owner/group matching the specified owner/group.

if test "$VERBOSE" = yes; then
  set -x
  chown --version
fi

. $srcdir/../envvar-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd $pwd; chmod -R u+rwx $t0; rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1
ln -s no-such dangle || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

set _ `ls -ldo dangle`; shift; user=$3
# With 5.2.1 and earlier, this command would mistakenly succeed.
# Now we cannot chown on this "no target link"
chown --dereference $user dangle 2> out
grep "No such file or directory" out || fail=1

(exit $fail); exit $fail
