#!/bin/sh
# ****************************************************************************
# Copyright Â© 2011 Unpublished Work of SUSE, Inc. All Rights Reserved.
# 
# THIS IS AN UNPUBLISHED WORK OF SUSE, INC.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
# 
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************


: ${PERL=perl}
: ${srcdir=.}

$PERL -e 1 > /dev/null 2>&1 || {
  echo 1>&2 "$0: configure didn't find a usable version of Perl," \
    "so can't run this test"
  exit 77
}

exec $PERL -w -I$srcdir/.. -MCoreutils -- - <<\EOF
require 5.003;
use strict;

(my $ME = $0) =~ s|.*/||;
my $prog = '/usr/bin/stat';

# Turn off localisation of executable's ouput.
@ENV{qw(LANGUAGE LANG LC_ALL)} = ('C') x 3;

my @Tests =
    (
     # test-name, [option, option, ...] {OUT=>"expected-output"}
     #
     ['nl', q!--printf='\n' .!,          {OUT=>"\n"}],
     ['no-nl', "--printf=%n .",          {OUT=>"."}],
     ['pct-and-esc', q!--printf='\0%n\0' .!,    {OUT=>"\0.\0"}],
     ['backslash', q!--printf='\\\\' .!, {OUT=>"\\"}],
     ['nul', q!--printf='\0' .!,         {OUT=>"\0"}],
     # Don't bother testing \v, since Perl doesn't handle it.
     ['bel-etc', q!--printf='\a\b\f\n\r\t' .!, {OUT=>"\a\b\f\n\r\t"}],
     ['octal-1', q!--printf='\012\377' .!,     {OUT=>"\012\377"}],
     ['octal-2', q!--printf='.\012a\377b' .!,  {OUT=>".\012a\377b"}],
     ['hex-1',   q!--printf='\x34\xf' .!,      {OUT=>"\x34\xf"}],
     ['hex-2',   q!--printf='.\x18p\xfq' .!,   {OUT=>".\x18p\x0fq"}],
     ['hex-3',   q!--printf='\x' .!,           {OUT=>'x'},
	 {ERR=>"$prog: warning: unrecognized escape `\\x'\n"}],

     # With --format, there *is* a trailing newline.
     ['f-nl', "--format=%n .",          {OUT=>".\n"}],
     ['f-nl2', "--format=%n . .",       {OUT=>".\n.\n"}],

     ['end-pct', "--printf=% .",       {OUT=>"%"}],
     ['pct-pct', "--printf=%% .",      {OUT=>"%"}],
     ['end-bs',  "--printf='\\' .",    {OUT=>'\\'},
	 {ERR=>"$prog: warning: backslash at end of format\n"}],

     ['err-1', "--printf=%9% .",       {EXIT => 1},
	 {ERR=>"$prog: %9%: invalid directive\n"}],
     ['err-2', "--printf=%9 .",        {EXIT => 1},
	 {ERR=>"$prog: %9: invalid directive\n"}],
    );

my $save_temps = $ENV{DEBUG};
my $verbose = $ENV{VERBOSE};

my $fail = run_tests ($ME, $prog, \@Tests, $save_temps, $verbose);
exit $fail;
EOF

