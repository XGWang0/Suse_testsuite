#!/bin/sh
# ****************************************************************************
# Copyright Â© 2011 Unpublished Work of SUSE, Inc. All Rights Reserved.
# 
# THIS IS AN UNPUBLISHED WORK OF SUSE, INC.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
# 
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************

# tests for canonicalize mode (readlink -f).

if test "$VERBOSE" = yes; then
  set -x
  readlink --version
fi

pwd=`pwd`
t0=`echo "$0" |sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd $pwd; chmod -R u+rwx $t0; rm -rf $t0 && exit $status' 0
trap 'status=$?; (exit $status); exit $status' 1 2 13 15

fail=1
while :; do
  my_pwd=`pwd` || break

  mkdir -p $tmp || break
  cd $tmp || break

  mkdir subdir removed || break
  touch regfile || break

  ln -s regfile link1 || break
  ln -s subdir link2 || break
  ln -s missing link3 || break
  ln -s subdir/missing link4 || break

  fail=0
  break
done

if test $fail = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=1
while :; do
  cd "$pwd/$tmp/removed" || break

  # Skip this test if the system doesn't let you remove the working directory.
  if rmdir ../removed 2>/dev/null; then
    v=`readlink -f .` && break
    test -z "$v" || break
  fi

  cd "$pwd/$tmp" || break

  fail=0
  break
done

if test $fail = 1; then
  (exit $fail); exit $fail
fi

for p in "" "$pwd/$tmp/"; do
  fail=1

  v=`readlink -f ${p}regfile` || break
  test "$v" = "$my_pwd/$tmp/regfile" || break

  v=`readlink -f ${p}./regfile/` && break
  test -z "$v" || break

  v=`readlink -f ${p}regfile/more` && break
  test -z "$v" || break

  v=`readlink -f ${p}./regfile/more/` && break
  test -z "$v" || break

  v=`readlink -f ${p}subdir` || break
  test "$v" = "$my_pwd/$tmp/subdir" || break

  v=`readlink -f ${p}./subdir/` || break
  test "$v" = "$my_pwd/$tmp/subdir" || break

  v=`readlink -f ${p}subdir/more` || break
  test "$v" = "$my_pwd/$tmp/subdir/more" || break

  v=`readlink -f ${p}./subdir/more/` && break
  test -z "$v" || break

  v=`readlink -f ${p}missing` || break
  test "$v" = "$my_pwd/$tmp/missing" || break

  v=`readlink -f ${p}./missing/` && break
  test -z "$v" || break

  v=`readlink -f ${p}missing/more` && break
  test -z "$v" || break

  v=`readlink -f ${p}./missing/more/` && break
  test -z "$v" || break

  v=`readlink -f ${p}link1` || break
  test "$v" = "$my_pwd/$tmp/regfile" || break

  v=`readlink -f ${p}./link1/` && break
  test -z "$v" || break

  v=`readlink -f ${p}link1/more` && break
  test -z "$v" || break

  v=`readlink -f ${p}./link1/more/` && break
  test -z "$v" || break

  v=`readlink -f ${p}link2` || break
  test "$v" = "$my_pwd/$tmp/subdir" || break

  v=`readlink -f ${p}./link2/` || break
  test "$v" = "$my_pwd/$tmp/subdir" || break

  v=`readlink -f ${p}link2/more` || break
  test "$v" = "$my_pwd/$tmp/subdir/more" || break

  v=`readlink -f ${p}./link2/more/` && break
  test -z "$v" || break

  v=`readlink -f ${p}link2/more/more2` && break
  test -z "$v" || break

  v=`readlink -f ${p}./link2/more/more2/` && break
  test -z "$v" || break

  v=`readlink -f ${p}link3` || break
  test "$v" = "$my_pwd/$tmp/missing" || break

  v=`readlink -f ${p}./link3/` && break
  test -z "$v" || break

  v=`readlink -f ${p}link3/more` && break
  test -z "$v" || break

  v=`readlink -f ${p}./link3/more/` && break
  test -z "$v" || break

  v=`readlink -f ${p}link4` || break
  test "$v" = "$my_pwd/$tmp/subdir/missing" || break

  v=`readlink -f ${p}./link4/` && break
  test -z "$v" || break

  v=`readlink -f ${p}link4/more` && break
  test -z "$v" || break

  fail=0
done

(exit $fail); exit $fail

