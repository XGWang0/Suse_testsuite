#!/bin/sh
# ****************************************************************************
# Copyright Â© 2011 Unpublished Work of SUSE, Inc. All Rights Reserved.
# 
# THIS IS AN UNPUBLISHED WORK OF SUSE, INC.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
# 
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************

# Ensure that cp/mv don't clobber a just-copied file.
# With fileutils-4.1 and earlier, this test would fail.

if test "$VERBOSE" = yes; then
  set -x
  cp --version
  mv --version
fi

. $srcdir/../envvar-check
. $srcdir/../lang-default
PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
tmp=childproof.$$
trap 'status=$?; cd $pwd; rm -rf $tmp && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir $tmp || framework_failure=1
cd $tmp || framework_failure=1
mkdir a b c || framework_failure=1
echo a > a/f || framework_failure=1
echo b > b/f || framework_failure=1

if test $framework_failure = 1; then
  echo 'failure in testing framework' 1>&2
  (exit 1); exit 1
fi

fail=0

cp a/f b/f c 2> /dev/null && fail=1
test -f a/f || fail=1
test -f b/f || fail=1
test -f c/f || fail=1
test "`cat c/f`" = a || fail=1
rm -f c/f

# With --backup=numbered, it should succeed
cp --backup=numbered a/f b/f c || fail=1
test -f a/f || fail=1
test -f b/f || fail=1
test -f c/f || fail=1
test -f c/f.~1~ || fail=1
rm -f c/f*

mv a/f b/f c 2> /dev/null && fail=1
test -f a/f && fail=1
test -f b/f || fail=1
test -f c/f || fail=1
test "`cat c/f`" = a || fail=1

# Make sure mv still works when moving hard links.
# This is where the same_file test is necessary, and why
# we save file names in addition to dev/ino.
rm -f c/f* b/f
touch a/f
ln a/f b/g
mv a/f b/g c || fail=1
test -f a/f && fail=1
test -f b/g && fail=1
test -f c/f || fail=1
test -f c/g || fail=1

touch a/f b/f b/g
mv a/f b/f b/g c 2> /dev/null && fail=1
test -f a/f && fail=1  # a/f should have been moved
test -f b/f || fail=1  # b/f should remain
test -f b/g && fail=1  # b/g should have been moved
test -f c/f || fail=1
test -f c/g || fail=1

(exit $fail); exit $fail

