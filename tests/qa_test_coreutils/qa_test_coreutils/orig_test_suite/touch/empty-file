#!/bin/sh
# ****************************************************************************
# Copyright Â© 2011 Unpublished Work of SUSE, Inc. All Rights Reserved.
# 
# THIS IS AN UNPUBLISHED WORK OF SUSE, INC.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
# 
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************

# Make sure touch can set the mtime on an empty file.
# Volker Borchert reported that touch 3.16r (and presumably all before that)
# fails to work on SunOS 4.1.3 with `most of the recommended patches' when
# the empty file is on an NFS-mounted 4.2 volume.

if test "$VERBOSE" = yes; then
  set -x
  touch --version
fi

DEFAULT_SLEEP_SECONDS=2
SLEEP_SECONDS=${SLEEP_SECONDS=$DEFAULT_SLEEP_SECONDS}

fail=0

# FIXME: find writable directories on other partitions
# and run the test in those directories, too.

: ${TOUCH_DIR_LIST=.}

framework_failure=0

for d in $TOUCH_DIR_LIST; do
  rm -rf $d/a $d/b $d/c
  > $d/a || framework_failure=1
  test -f $d/a || framework_failure=1
  > $d/b || framework_failure=1
  test -f $d/b || framework_failure=1
  > $d/c || framework_failure=1
  test -f $d/c || framework_failure=1
done

if test $framework_failure = 1; then
  echo 'failure in testing framework'
  exit 1
fi

echo sleeping for $SLEEP_SECONDS seconds...
sleep $SLEEP_SECONDS
for d in $TOUCH_DIR_LIST; do
  touch $d/a || fail=1
  set x `ls -t $d/a $d/b`
  test "$*" = "x $d/a $d/b" || fail=1
done

echo sleeping for $SLEEP_SECONDS seconds...
sleep $SLEEP_SECONDS
for d in $TOUCH_DIR_LIST; do
  touch $d/b
  set x `ls -t $d/a $d/b`
  test "$*" = "x $d/b $d/a" || fail=1

  if touch - 1< $d/c 2> /dev/null; then
    set x `ls -t $d/a $d/c`
    test "$*" = "x $d/c $d/a" || fail=1
  fi

  rm -rf $d/a $d/b $d/c
done

if test $fail != 0; then
  cat 1>&2 <<EOF
*** This test has just failed.  That can happen when the test is run in an
*** NFS-mounted directory on a system whose clock is not well synchronized
*** with that of the NFS server.  If you think that is the reason, set the
*** environment variable SLEEP_SECONDS to some number of seconds larger than
*** the default of $DEFAULT_SLEEP_SECONDS and rerun the test.
EOF
fi

exit $fail

