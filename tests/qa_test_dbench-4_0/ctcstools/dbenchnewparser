#!/usr/bin/perl -w
# ****************************************************************************
# # Copyright Â© 2013 Unpublished Work of SUSE, Inc. All Rights Reserved.
# # 
# # THIS IS AN UNPUBLISHED WORK OF SUSE, INC.  IT CONTAINS SUSE'S
# # CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# # RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# # THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# # THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# # TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# # PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# # PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# # AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# # LIABILITY.
# # 
# # SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# # WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# # FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# # AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# # LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# # OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# # WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# # ****************************************************************************
BEGIN {
        push (@INC,"/usr/share/qa/lib");
}
use benchxml;
my $bench_results = {};
$bench_results->{attrs} = {
                                processes => {
                                                id => 'processes',
                                                label => 'processes',
                                                desc => 'processes number',
                                                type => 'linear',
                                                unit => 'processes'
                                        },
                               throughput => {
                                                id => 'throughput',
                                                label => 'throughput',
                                                desc => 'throughput.',
                                                type => 'linear',
                                                unit => 'MB/sec'
                                        }
};
$bench_result->{values}=[];
$bench_result->{graphs}=[];
my $val;
my $graphs;
my $g=0;
my $depth;
my $name = "dbench-test";
my $cn;
my $y;
my $v = 0;

while(<STDIN>)
{
    if( $_ =~ /dbench-default/)
   {
	    $name = "sync=0";
            last;

   }
   if($_ =~ /dbench-syncIO/)
   {
	    $name = "sync=1";
            last;

   }
    if( $_ =~ /^dbench\s.*\/abuild\s+(\d+)/ )
    {
	    $cn=$1;
    }

    #Throughput 15.3796
    if( $_ =~ /^Throughput\s+([\d\.]+)/)
    {
	    #y
            $y=$1;
	    $val->[$v]->{processes} = $cn;
	    $val->[$v]->{throughput} = $y;
	    $v = $v + 1;
    }
}

while (<STDIN>)
{
    if( $_ =~ /^dbench\s.*\/abuild\s+(\d+)/ )
    {
	    $cn=$1;
    }

    #Throughput 15.3796
    if( $_ =~ /^Throughput\s+([\d\.]+)/)
    {
	    #y
            $y=$1;
	    $val->[$v]->{processes} = $cn;
	    $val->[$v]->{throughput} = $y;
            $v = $v + 1;
    }
}

$graphs->[$g]->{label} = $name;
$graphs->[$g]->{desc} = $name;
$graphs->[$g]->{result} = 'throughput';
$graphs->[$g]->{axis_1} = 'processes';

$bench_results->{values} = $val;
$bench_results->{graphs} = $graphs;
print bench_data_to_xml($bench_results);


