#!/bin/sh
#sut_timeout 600

ctcsdir="/usr/lib/ctcs2"
TCF_DIR="/usr/share/qa/tcf"

service cron stop

NR_CPU=$(grep -c '^processor' /proc/cpuinfo)
MEM_SIZE=$(grep 'MemTotal:' /proc/meminfo | awk '{print $2}')

MEM_SIZE_DOUBLE=$((${MEM_SIZE} * 2))
MEM_1GiB=$((1024 * 1024))
MEM_SIZE_DOUBLE_MOD=$((${MEM_SIZE_DOUBLE} % ${MEM_1GiB}))
if test ${MEM_SIZE_DOUBLE_MOD} -ne 0;then
    MEM_SIZE_DOUBLE_GiB=$((${MEM_SIZE_DOUBLE} / ${MEM_1GiB}))
    let MEM_SIZE_DOUBLE_GiB++
    MEM_SIZE_DOUBLE=$((${MEM_SIZE_DOUBLE_GiB} * ${MEM_1GiB}))
fi

NR_DIRECTORIES=1
NR_FILES=1

DATASET_SIZE=${MEM_SIZE_DOUBLE}

DIRECTORY_SIZE=$((DATASET_SIZE/NR_FILES))
NR_FILES=$((NR_FILES/1024))
DATASET_SIZE=$((DATASET_SIZE/1048576))

if [ $NR_FILES -eq 0 ]; then
        NR_FILES=1
fi

ABUILD_FS=$(grep '/abuild' /proc/mounts  | awk '{print $3}')
case ${ABUILD_FS} in
    "")
        mkdir -p /abuild
        ABUILD_FS="root"
        ;;
    *)
        echo "[bonnie++-async] The filesystem on /abuild is ${ABUILD_FS}"
        ;;
esac

TCF_FILE="${TCF_DIR}/bonnie++_async_${ABUILD_FS}.tcf"
echo > ${TCF_FILE}
cat <<EOF >>${TCF_FILE}
timer 2h
fg 1 bonnie++-async bonnie++ -u root -d /abuild/  -n $NR_FILES:$DIRECTORY_SIZE:$DIRECTORY_SIZE:$NR_DIRECTORIES
wait
EOF

$ctcsdir/tools/run ${TCF_FILE}

