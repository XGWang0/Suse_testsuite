#!/bin/bash
# ****************************************************************************
# Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.
# 
# THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
# 
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************
#


export LANG=C

function usage() {
    echo "Usage: $0 -d migrateDstIP -v hypervisorType [-u migrateDstUser] [-p migrateDstPass] [-i vmProducts] [-t testTime]"
    echo "-i: vmProducts, it is what kind of product vm should be installed, support regular expression, comma separeted,"
    echo "                format: \"sles-11-sp[34]-64,sles-12\""
    echo "                when not configured, all vm types in config file will be installed."
    exit 1
}

while getopts "d:u:p:v:i:t:" OPTIONS
do
    case $OPTIONS in
        d)migrateDstIP="$OPTARG";;
        u)migrateDstUser="$OPTARG";;
        p)migrateDstPass="$OPTARG";;
        v)hostHypervisor="$OPTARG";;
        i)vmProducts="$OPTARG";;
		t)testTime="$OPTARG";;
        \?)usage;;
        *) usage;;
    esac
done

tcfContent="/usr/share/qa/virtautolib/lib/guest_migrate.sh"
[ -n "$migrateDstIP" ] && tcfContent="${tcfContent} -d $migrateDstIP"
[ -n "$hostHypervisor" ] && tcfContent="${tcfContent} -v $hostHypervisor"
[ -n "$migrateDstUser" ] && tcfContent="${tcfContent} -u $migrateDstUser"
[ -n "$migrateDstPass" ] && tcfContent="${tcfContent} -p $migrateDstPass"
[ -n "$vmProducts" ] && tcfContent="${tcfContent} -i \"$vmProducts\""

[ -z "$testTime" ] && testTime=36000

CTCS2_DIR=/usr/lib/ctcs2
TCF_DIR=/usr/share/qa/tcf
TCF_NAME="test_virtualization-guest-migrate-$hostHypervisor"
TCF_FILE="$TCF_DIR/$TCF_NAME"

#generate tcf file
cat > $TCF_FILE <<EOF
timer $testTime
fg 1 guest_migrate_${hostHypervisor}_test $tcfContent
wait
EOF

#clean log files
rm -rf /tmp/virt_screenshot.tar.bz2 /tmp/virt-install_screenshot

#start test
$CTCS2_DIR/tools/run $TCF_FILE

rm /tmp/virt_screenshot.tar.bz2
[ -d /tmp/virt-install_screenshot/ ] && tar jcf /tmp/virt_screenshot.tar.bz2 /tmp/virt-install_screenshot/

returncode=0

for file in `find /var/log/qa/ctcs2/ -name test_results`; do
	[ -z "$(cat $file)" ] && ((returncode+=1))
done

((returncode+=`find /var/log/qa/ctcs2/ -name test_results -exec grep "^[0-9] 0" {} \; | wc -l`))

v_updir=`find /var/log/qa/ctcs2 -type d -name "test_virtualization-guest-migrate*"|tail -1`
[ -d $v_updir -a -e /tmp/virt_screenshot.tar.bz2 ] && cp /tmp/virt_screenshot.tar.bz2 $v_updir/

#upload virtualization debug log
tar cvf $v_updir/libvirt.tar /var/log/libvirt
tar cvf $v_updir/var-log-messages.tar /var/log/messages
if uname -r | grep -iq xen  || [ -e /proc/xen/privcmd ];then
	xl dmesg > $v_updir/xl-dmesg.log
	xm dmesg > $v_updir/xm-dmesg.log
	if [ -d /var/log/xen ];then
		tar cvf $v_updir/var-log-xen.tar /var/log/xen
	fi
fi
dmesg > $v_updir/dmesg.log
tar cvf $v_updir/var-lib-xen-dump.tar /var/lib/xen/dump/

#upload tcf and guest xml config files
tar cvf $v_updir/guest-xmls.tar /tmp/prj3_guest_migration/vm_backup/vm-config-xmls
tar cvf $v_updir/tcf.tar $TCF_FILE

#send to qadb
/usr/share/qa/tools/remote_qa_db_report.pl -b -c "Test result for virtualization guest migrate test: $TCF_FILE."

exit $returncode
