#!/bin/bash
# ****************************************************************************
# Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.
# 
# THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
# 
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************
#


export LANG=C

CTCS2_DIR=/usr/lib/ctcs2
TCF_DIR=/usr/share/qa/tcf


TCF_FILE="$TCF_DIR/qa_virtualization-virt_install.tcf"
TCF_TRUE="/tmp/qa_virtualization-virt_install.tcf"

#detect the ENV and filter the install test cases

##Skip the windows cases

mkdir -m 0751 -p /.virtinst
mkdir -m 0751 -p ~/.virtinst

cat $TCF_FILE|sed '/ win-/{N;d}' >$TCF_TRUE

#remove all para-virtualization test on KVM host
if ! uname -r|grep -iq xen ;then
	#The host is KVM
	sed -i '/-pv-/d' $TCF_TRUE
else
	#The host is XEN
	#disable the autoballoon
	sed -i '/autoballoon=1/s/.*/autoballoon=0/;/autoballoon="/s/.*/autoballoon="off"/' /etc/xen/xl.conf

fi

#remove the iso cases
sed -i "/-iso/d" $TCF_TRUE




#Start to process options

print_usage()
{
	echo "Usage: $0 -h  print this help"
	echo "-n <thread_number>"
	echo "-t [std,dev] :Unit test,Milestone test"
	echo "-f <filter string>  : eg. 'nw-65-sp8\|oes-11-sp2' "

}

while getopts "hf:n:t:" OPTIONS
do
	case $OPTIONS in
		f) filter=$OPTARG;;
		n) thread=$OPTARG;;
		t) gen_type=$OPTARG;;
		h) print_usage;;
	esac
done


[ -n "$gen_type" ] && [ "$gen_type" == "dev" ] && /usr/share/qa/virtautolib/lib/opt_gen.pl

#verify the option


if echo $thread|grep -q "^[0-9][0-9]*$" ;then
	#set the number
	num=$thread
	time_ext=$((thread*300))
	timer=$((9600+$time_ext))
else
	#By default, we set thread = 4
	num=4
	timer=9600

fi

#filter the testcase

if [ -n "$filter" ];then

	filter=`echo $filter|sed 's/|/\\\|/g;s/,/\\\|/g'`
	sed -i "/$filter/!d" $TCF_TRUE

fi


first_timer=$(($timer+1800))

sed -i "0~$num {s/\$/\nwait\nwait\ntimer $timer/;}" $TCF_TRUE
sed -i "1s/^/timer $first_timer\n/" $TCF_TRUE
sed -i "\$s/$/\nwait\nwait/" $TCF_TRUE
sed -i '2s/^bg/fg/' $TCF_TRUE

rm -rf /tmp/virt_screenshot.tar.bz2 /tmp/virt-install_screenshot

#switch on the log
. /usr/share/qa/virtautolib/lib/virtlib
virt_log_switch
rclibvirtd restart


$CTCS2_DIR/tools/run $TCF_TRUE
returncode=0

for file in `find /var/log/qa/ctcs2/ -name test_results`; do
	[ -z "$(cat $file)" ] && ((returncode+=1))
done

((returncode+=`find /var/log/qa/ctcs2/ -name test_results -exec grep "^[0-9] 0" {} \; | wc -l`))


hn=`cat /etc/HOSTNAME`
ARCH=`arch`

rm /tmp/virt_screenshot.tar.bz2
cp -ar /root/.cache /tmp/virt-install_screenshot/
tar jcf /tmp/virt_screenshot.tar.bz2 /tmp/virt-install_screenshot/

v_updir=`find /var/log/qa/ctcs2 -type d -name "qa_virtualization-virt_install*"|tail -1`

if [ -d $v_updir ]; then
	cp /tmp/virt_screenshot.tar.bz2 $v_updir/
	cp /var/log/message $v_updir/
	tar -jcf $v_updir/virtd_log.tar.bz2 /var/log/libvirt
	[ -d /var/log/xen ] && tar -jcf $v_updir/xend_log.tar.bz2 /var/log/xen
	which xl && xl dmsg >$v_updir/xldmsg
	which xm && xm dmsg >$v_updir/xmdmsg
	dmsg >$v_updir/kvmdmsg

fi
/usr/share/qa/tools/remote_qa_db_report.pl -b -c "Virtualization test results on $hn-$ARCH"

exit $returncode

